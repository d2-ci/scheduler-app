{"version":3,"sources":["D2App/components/Temporary/SwitchIcon.module.css","D2App/components/Temporary/LinkButton.module.css","D2App/pages/JobList/JobList.module.css","D2App/components/FormErrorBox/FormErrorBox.module.css","D2App/components/FormFields/ParameterFields.module.css","D2App/components/Forms/JobAddForm.module.css","D2App/components/Forms/JobEditForm.module.css","D2App/components/JobDetails/JobDetails.module.css","D2App/pages/JobEdit/JobEdit.module.css","D2App/pages/JobView/JobView.module.css","D2App/pages/JobAdd/JobAdd.module.css","D2App/components/AuthWall/AuthWall.module.css","D2App/components/PageWrapper/PageWrapper.module.css","D2App/components/Store/StoreContext.js","D2App/components/Store/Store.js","D2App/components/Store/hooks.js","D2App/services/server-translations/analyticsTableTypes.js","D2App/services/server-translations/jobTypesMap.js","D2App/services/server-translations/jobStatusMap.js","D2App/components/Temporary/SwitchIcon.js","D2App/components/Temporary/Switch.js","D2App/components/Temporary/LinkButton.js","D2App/components/Switches/ToggleJobSwitch.js","D2App/services/history/history.js","D2App/services/history/index.js","D2App/components/JobTable/EditJobAction.js","D2App/components/JobTable/ViewJobAction.js","D2App/components/Modal/CronPresetModal.js","D2App/components/Modal/DeleteJobModal.js","D2App/components/Modal/DiscardFormModal.js","D2App/components/Modal/RunJobModal.js","D2App/components/JobTable/RunJobAction.js","D2App/components/JobTable/DeleteJobAction.js","D2App/components/JobTable/Actions.js","D2App/components/JobTable/Status.js","D2App/components/JobTable/NextRun.js","D2App/services/validators/validate-cron.js","D2App/services/validators/required-cron.js","D2App/services/translate-cron/translate-cron.js","D2App/services/translate-cron/index.js","D2App/components/JobTable/Schedule.js","D2App/components/JobTable/JobTableRow.js","D2App/components/JobTable/JobTable.js","D2App/pages/JobList/JobList.js","D2App/pages/JobList/JobListContainer.js","D2App/components/Buttons/CronPresetButton.js","D2App/components/Buttons/DeleteJobButton.js","D2App/components/Buttons/DiscardFormButton.js","D2App/services/format-error/format-error.js","D2App/services/format-error/index.js","D2App/hooks/jobs/use-submit-job.js","D2App/hooks/jobs/use-update-job.js","D2App/components/FormErrorBox/FormErrorBox.js","D2App/components/FormFields/JobNameField.js","D2App/components/FormFields/JobTypeField.js","D2App/components/FormFields/formatters.js","D2App/components/FormFields/SkipTableTypesField.js","D2App/components/FormFields/LabeledOptionsField.js","D2App/components/FormFields/ParameterFields.js","D2App/components/FormFields/CronField.js","D2App/components/FormFields/DelayField.js","D2App/components/FormFields/ScheduleField.js","D2App/components/FormFields/index.js","D2App/components/Forms/JobAddForm.js","D2App/components/Forms/JobAddFormContainer.js","D2App/components/Forms/JobEditForm.js","D2App/components/Forms/JobEditFormContainer.js","D2App/components/JobDetails/JobDetails.js","D2App/pages/JobEdit/JobEdit.js","D2App/pages/JobEdit/JobEditContainer.js","D2App/pages/JobView/JobView.js","D2App/pages/JobAdd/JobAdd.js","D2App/pages/JobAdd/JobAddContainer.js","D2App/components/Routes/Routes.js","D2App/components/AuthWall/AuthWall.js","D2App/components/AuthWall/selectors.js","D2App/components/PageWrapper/PageWrapper.js","D2App/locales/index.js","D2App/components/App/App.js","D2App/components/App/index.js"],"names":["module","exports","StoreContext","createContext","jobs","jobTypes","parameterOptions","refetchJobs","Error","jobsQuery","resource","params","fields","paging","jobTypesQuery","optionsQuery","skipTableTypes","validationRuleGroups","pushAnalysis","predictors","predictorGroups","node","PropTypes","Store","children","jobFilterState","useState","showSystemJobsState","jobsFetch","useDataQuery","jobTypesFetch","optionsFetch","loading","error","jobConfigurations","data","Provider","value","refetch","jobFilter","showSystemJobs","useAllJobs","useContext","useAllParameterOptions","useAllJobTypes","useRefetchJobs","useJobFilter","useShowSystemJobs","useJobListJobs","filter","job","displayName","toLowerCase","includes","configurable","useJob","id","find","useJobType","jobType","useJobTypeParameters","selectedJobType","jobParameters","useParameterOptions","parameter","analyticsTableTypes","DATA_VALUE","i18n","t","COMPLETENESS","COMPLETENESS_TARGET","ORG_UNIT_TARGET","EVENT","ENROLLMENT","VALIDATION_RESULT","jobTypesMap","ANALYTICS_TABLE","CONTINUOUS_ANALYTICS_TABLE","CREDENTIALS_EXPIRY_ALERT","DATA_INTEGRITY","DATA_SET_NOTIFICATION","DATA_STATISTICS","DATA_SYNC","EVENT_PROGRAMS_DATA_SYNC","FILE_RESOURCE_CLEANUP","META_DATA_SYNC","MONITORING","PREDICTOR","PROGRAM_NOTIFICATIONS","PUSH_ANALYSIS","REMOVE_EXPIRED_RESERVED_VALUES","RESOURCE_TABLE","SEND_SCHEDULED_MESSAGE","TRACKER_PROGRAMS_DATA_SYNC","VALIDATION_RESULTS_NOTIFICATION","DISABLE_INACTIVE_USERS","jobStatusMap","COMPLETED","DISABLED","DONE","FAILED","NOT_STARTED","RUNNING","SCHEDULED","STOPPED","SwitchIcon","className","viewBox","xmlns","cx","styles","svg","d","fill","Switch","Component","ref","createRef","handleChange","e","this","props","onChange","createHandlerPayload","handleBlur","onBlur","handleFocus","onFocus","componentDidMount","initialFocus","current","focus","name","checked","render","disabled","label","tabIndex","valid","warning","dense","dataTest","ariaLabel","classes","data-test","_JSXStyle","dynamic","colors","grey900","theme","blue600","type","role","aria-label","LinkButton","small","rest","linkButton","mutation","partial","enabled","bool","string","ToggleJobSwitch","toggleJob","useDataMutation","hooks","then","history","createHashHistory","EditJobAction","onClick","push","ViewJobAction","cronPresets","func","CronPresetModal","setCron","hideModal","currentPreset","setCurrentPreset","open","onClose","map","preset","key","end","secondary","primary","DeleteJobModal","onSuccess","deleteJob","destructive","DiscardFormModal","RunJobModal","engine","useDataEngine","query","RunJobAction","showModal","setShowModal","Fragment","DeleteJobAction","Actions","component","defaultProps","Status","status","neutral","negative","positive","NextRun","nextExecutionTime","now","moment","Date","nextRun","utc","isSameOrBefore","to","propTypes","isRequired","WEEKDAYS","MONTHS","isValidNumber","number","x","y","isWildcard","field","isUndefined","isValidWithinRange","range","boundaries","split","length","isValidNumberRange","fraction","components","isValidFraction","isValidMonthField","months","firstMonth","secondMonth","m","indexOf","undefined","isAlphabeticMonth","isValidWeekdayField","weekdays","firstDay","secondDay","c","isAlphabeticWeekday","validateCron","exp","trim","isValidFields","isValidMinuteField","isValidHourField","isValidDayField","requiredCron","translateCron","cron","locale","language","cronstrue","toString","Schedule","cronExpression","schedulingType","delay","shape","JobTableRow","jobStatus","object","arrayOf","JobTable","JobList","setShowSystemJobs","setJobFilter","header","headerTitle","href","headerLink","target","rel","headerLinkIcon","controlContainer","controlRight","JobListContainer","CronPresetButton","DeleteJobButton","DiscardFormButton","shouldConfirm","FORM_ERROR","FinalForm","formatError","details","response","validationErrors","genericErrors","errorReports","forEach","report","errorProperty","message","useSubmitJob","mutate","variables","catch","useUpdateJob","array","FormErrorBox","submitError","title","list","Field","ReactFinalForm","VALIDATOR","composeValidators","hasValue","JobNameField","InputFieldFF","validate","required","JobTypeField","options","SingleSelectFieldFF","formatToString","SkipTableTypesField","parameterName","helpText","translatedOptions","option","MultiSelectFieldFF","LabeledOptionsField","labeledOptions","ParameterFields","parameters","parameterComponents","fieldName","klass","parameterComponent","marginTop","SwitchFieldFF","format","useFormState","useForm","CronField","form","values","subscription","change","integer","createNumberRange","DelayField","lowerbound","upperbound","ScheduleField","fieldNames","JobAddForm","handleSubmit","pristine","submitting","hasSubmitErrors","setIsPristine","subscribe","useEffect","Spinner","onSubmit","maxWidth","formButtonContainer","icon","saveButton","Form","JobAddFormContainer","submitJob","destroyOnUnregister","JobEditForm","deleteButton","initialFields","JobEditFormContainer","useParams","updateJob","initialValues","reduce","filtered","JobDetails","created","lastExecutedStatus","lastExecuted","createdFromNow","from","translatedStatus","lastRunFromNow","wrapper","nsSeparator","JobEdit","isPristine","pageHeader","pageHeaderButton","pageHeaderTitle","card","cardHeader","cardHeaderTitle","cardHeaderLink","cardHeaderInfo","jobDetails","JobEditContainer","JobView","selected","JobAdd","JobAddContainer","Routes","exact","path","me","AuthWall","authorities","getAuthorized","noticeBoxWrapper","PageWrapper","addResources","arTranslations","ar_IQTranslations","bnTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","App","spacers"],"mappings":"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","file":"static/js/app.0e9e9936.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"svg\":\"SwitchIcon_svg__1uzBk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkButton\":\"LinkButton_linkButton__1gVyb\",\"small\":\"LinkButton_small__pn2bP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"JobList_header__23tFt\",\"headerTitle\":\"JobList_headerTitle__21D__\",\"headerLink\":\"JobList_headerLink__2zepi\",\"headerLinkIcon\":\"JobList_headerLinkIcon__XdfBB\",\"controlContainer\":\"JobList_controlContainer__3Yzj_\",\"controlRight\":\"JobList_controlRight__38lfB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FormErrorBox_list__3BejY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerTitle\":\"ParameterFields_headerTitle__IBF76\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButtonContainer\":\"JobAddForm_formButtonContainer__1MLSp\",\"saveButton\":\"JobAddForm_saveButton__RfxZ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButtonContainer\":\"JobEditForm_formButtonContainer__2b6Fi\",\"deleteButton\":\"JobEditForm_deleteButton__VQxBE\",\"saveButton\":\"JobEditForm_saveButton__278Ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"JobDetails_wrapper__1-YkO\",\"title\":\"JobDetails_title__1Cht7\",\"details\":\"JobDetails_details__2HITJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"JobEdit_pageHeader__3Fywp\",\"pageHeaderButton\":\"JobEdit_pageHeaderButton__29yjJ\",\"pageHeaderTitle\":\"JobEdit_pageHeaderTitle__jZrIG\",\"card\":\"JobEdit_card__2QqEg\",\"cardHeader\":\"JobEdit_cardHeader__Mv_cj\",\"cardHeaderTitle\":\"JobEdit_cardHeaderTitle__29Y64\",\"cardHeaderInfo\":\"JobEdit_cardHeaderInfo__3VWZt\",\"cardHeaderLink\":\"JobEdit_cardHeaderLink__2frj7\",\"jobDetails\":\"JobEdit_jobDetails__194v-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"JobView_pageHeader__3d3IR\",\"pageHeaderButton\":\"JobView_pageHeaderButton__2VF9Z\",\"pageHeaderTitle\":\"JobView_pageHeaderTitle__3wHyg\",\"card\":\"JobView_card__3LlD0\",\"cardHeader\":\"JobView_cardHeader__3v0pX\",\"cardHeaderTitle\":\"JobView_cardHeaderTitle__tPEnV\",\"cardHeaderInfo\":\"JobView_cardHeaderInfo__j1GsD\",\"cardHeaderLink\":\"JobView_cardHeaderLink__86M36\",\"jobDetails\":\"JobView_jobDetails__3cu4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"JobAdd_pageHeader__2NZzc\",\"pageHeaderButton\":\"JobAdd_pageHeaderButton__Xg_R9\",\"pageHeaderTitle\":\"JobAdd_pageHeaderTitle__1RMl0\",\"card\":\"JobAdd_card__1HH6H\",\"cardHeader\":\"JobAdd_cardHeader__1D3sS\",\"cardHeaderTitle\":\"JobAdd_cardHeaderTitle__2TG9a\",\"cardHeaderInfo\":\"JobAdd_cardHeaderInfo__vq_Y1\",\"cardHeaderLink\":\"JobAdd_cardHeaderLink__2CzPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeBoxWrapper\":\"AuthWall_noticeBoxWrapper__1ums5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PageWrapper_wrapper__t-CJy\"};","import { createContext } from 'react';\nconst StoreContext = createContext({\n  jobs: {},\n  jobTypes: {},\n  parameterOptions: {},\n  refetchJobs: () => {\n    throw new Error('Store context needs a valid provider');\n  }\n});\nexport default StoreContext;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { CircularLoader, Layer, CenteredContent } from '@dhis2/ui';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport StoreContext from './StoreContext';\nconst jobsQuery = {\n  jobs: {\n    resource: 'jobConfigurations',\n    params: {\n      fields: '*',\n      paging: false\n    }\n  }\n};\nconst jobTypesQuery = {\n  jobTypes: {\n    resource: 'jobConfigurations/jobTypes',\n    params: {\n      fields: '*',\n      paging: false\n    }\n  }\n};\nconst optionsQuery = {\n  // Used by the ANALYTICS_TABLE and CONTINUOUS_ANALYTICS_TABLE job types\n  skipTableTypes: {\n    resource: 'analytics/tableTypes'\n  },\n  // Used by the MONITORING job type\n  validationRuleGroups: {\n    resource: 'validationRuleGroups',\n    params: {\n      paging: false\n    }\n  },\n  // Used by the PUSH_ANALYSIS job type\n  pushAnalysis: {\n    resource: 'pushAnalysis',\n    params: {\n      paging: false\n    }\n  },\n  // Used by the PREDICTOR job type\n  predictors: {\n    resource: 'predictors',\n    params: {\n      paging: false\n    }\n  },\n  predictorGroups: {\n    resource: 'predictorGroups',\n    params: {\n      paging: false\n    }\n  }\n};\n\nconst Store = ({\n  children\n}) => {\n  // State that should persist after a refetch\n  const jobFilterState = useState('');\n  const showSystemJobsState = useState(false);\n  const jobsFetch = useDataQuery(jobsQuery);\n  const jobTypesFetch = useDataQuery(jobTypesQuery);\n  const optionsFetch = useDataQuery(optionsQuery);\n  const loading = jobsFetch.loading || jobTypesFetch.loading || optionsFetch.loading;\n\n  if (loading) {\n    return <Layer>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  const error = jobsFetch.error || jobTypesFetch.error || optionsFetch.error;\n\n  if (error) {\n    /**\n     * The app can't continue if this fails, because it doesn't\n     * have any data, so throw the error.\n     */\n    throw error;\n  }\n\n  const {\n    jobConfigurations: jobs\n  } = jobsFetch.data.jobs;\n  const {\n    jobTypes\n  } = jobTypesFetch.data.jobTypes;\n  const {\n    skipTableTypes,\n    validationRuleGroups: {\n      validationRuleGroups\n    },\n    pushAnalysis: {\n      pushAnalysis\n    },\n    predictors: {\n      predictors\n    },\n    predictorGroups: {\n      predictorGroups\n    }\n  } = optionsFetch.data;\n  const parameterOptions = {\n    skipTableTypes,\n    validationRuleGroups,\n    pushAnalysis,\n    predictors,\n    predictorGroups\n  };\n  return <StoreContext.Provider value={{\n    jobs,\n    jobTypes,\n    parameterOptions,\n    refetchJobs: jobsFetch.refetch,\n    jobFilter: jobFilterState,\n    showSystemJobs: showSystemJobsState\n  }}>\n            {children}\n        </StoreContext.Provider>;\n};\n\nconst {\n  node\n} = PropTypes;\nStore.propTypes = {\n  children: node.isRequired\n};\nexport default Store;","import { useContext } from 'react';\nimport StoreContext from './StoreContext';\nexport const useAllJobs = () => {\n  const store = useContext(StoreContext);\n  return store.jobs;\n};\nexport const useAllParameterOptions = () => {\n  const store = useContext(StoreContext);\n  return store.parameterOptions;\n};\nexport const useAllJobTypes = () => {\n  const store = useContext(StoreContext);\n  return store.jobTypes;\n};\nexport const useRefetchJobs = () => {\n  const store = useContext(StoreContext);\n  return store.refetchJobs;\n};\n/**\n * The state for the job filter and showing system\n * jobs is used in the job list, but kept in the\n * store since it has to persist after a refetch.\n */\n\nexport const useJobFilter = () => {\n  const store = useContext(StoreContext);\n  return store.jobFilter;\n};\nexport const useShowSystemJobs = () => {\n  const store = useContext(StoreContext);\n  return store.showSystemJobs;\n};\n/**\n * This hook returns the list of jobs that's shown in the\n * job list route. The list is filtered by the job filter\n * string and the show system jobs toggle from the store\n * state.\n */\n\nexport const useJobListJobs = () => {\n  const [jobFilter] = useJobFilter();\n  const [showSystemJobs] = useShowSystemJobs();\n  const jobs = useAllJobs(); // Filter jobs by the current jobFilter\n\n  const applyJobFilter = job => job.displayName.toLowerCase().includes(jobFilter.toLowerCase()); // Filter jobs depending on the current showSystemJobs\n\n\n  const applyShowSystemJobs = job => // Jobs that are configurable are user jobs\n  showSystemJobs ? true : job.configurable;\n\n  return jobs.filter(applyJobFilter).filter(applyShowSystemJobs);\n}; // Finds a job by id\n\nexport const useJob = id => {\n  const jobs = useAllJobs();\n  return jobs.find(job => job.id === id);\n}; // Finds a jobType by the jobType string\n\nexport const useJobType = jobType => {\n  const jobTypes = useAllJobTypes();\n  return jobTypes.find(job => job.jobType === jobType);\n}; // Returns an array with all parameters for a certain jobType\n\nexport const useJobTypeParameters = jobType => {\n  const selectedJobType = useJobType(jobType);\n  const hasParameters = 'jobParameters' in selectedJobType;\n\n  if (!hasParameters) {\n    return [];\n  }\n\n  return selectedJobType.jobParameters;\n}; // Returns the parameter options for a given parameter\n\nexport const useParameterOptions = parameter => {\n  const parameterOptions = useAllParameterOptions();\n  return parameterOptions[parameter];\n};","import i18n from '@dhis2/d2-i18n';\nconst analyticsTableTypes = {\n  DATA_VALUE: i18n.t('Data value'),\n  COMPLETENESS: i18n.t('Completeness'),\n  COMPLETENESS_TARGET: i18n.t('Completeness target'),\n  ORG_UNIT_TARGET: i18n.t('Org unit target'),\n  EVENT: i18n.t('Event'),\n  ENROLLMENT: i18n.t('Enrollment'),\n  VALIDATION_RESULT: i18n.t('Validation result')\n};\nexport default analyticsTableTypes;","import i18n from '@dhis2/d2-i18n';\nconst jobTypesMap = {\n  ANALYTICS_TABLE: i18n.t('Analytics table'),\n  CONTINUOUS_ANALYTICS_TABLE: i18n.t('Continuous analytics table'),\n  CREDENTIALS_EXPIRY_ALERT: i18n.t('Credentials expiry alert'),\n  DATA_INTEGRITY: i18n.t('Data integrity'),\n  DATA_SET_NOTIFICATION: i18n.t('Dataset notification'),\n  DATA_STATISTICS: i18n.t('Data statistics'),\n  DATA_SYNC: i18n.t('Data synchronization'),\n  EVENT_PROGRAMS_DATA_SYNC: i18n.t('Event programs data sync'),\n  FILE_RESOURCE_CLEANUP: i18n.t('File resource clean up'),\n  META_DATA_SYNC: i18n.t('Metadata synchronization'),\n  MONITORING: i18n.t('Monitoring'),\n  PREDICTOR: i18n.t('Predictor'),\n  PROGRAM_NOTIFICATIONS: i18n.t('Program notifications'),\n  PUSH_ANALYSIS: i18n.t('Push analysis'),\n  REMOVE_EXPIRED_RESERVED_VALUES: i18n.t('Remove expired reserved values'),\n  RESOURCE_TABLE: i18n.t('Resource table'),\n  SEND_SCHEDULED_MESSAGE: i18n.t('Send scheduled message'),\n  TRACKER_PROGRAMS_DATA_SYNC: i18n.t('Tracker programs data sync'),\n  VALIDATION_RESULTS_NOTIFICATION: i18n.t('Validation results notification'),\n  DISABLE_INACTIVE_USERS: i18n.t('Disable inactive users')\n};\nexport default jobTypesMap;","import i18n from '@dhis2/d2-i18n';\nconst jobStatusMap = {\n  COMPLETED: i18n.t('Completed'),\n  DISABLED: i18n.t('Disabled'),\n  DONE: i18n.t('Done'),\n  FAILED: i18n.t('Failed'),\n  NOT_STARTED: i18n.t('Not started'),\n  RUNNING: i18n.t('Running'),\n  SCHEDULED: i18n.t('Scheduled'),\n  STOPPED: i18n.t('Stopped')\n};\nexport default jobStatusMap;","import React from 'react';\nimport cx from 'classnames';\nimport { PropTypes } from '@dhis2/prop-types';\nimport styles from './SwitchIcon.module.css';\n\nfunction SwitchIcon({\n  className\n}) {\n  return <svg viewBox=\"0 0 42 22\" xmlns=\"http://www.w3.org/2000/svg\" className={cx(styles.svg, className)}>\n            <path d=\"M0,11 L0,11 C0,4.92486775 4.92076837,0 11.0075657,0 L30.9924343,0 C37.071745,0 42,4.923532 42,11 L42,11 C42,17.0751322 37.0792316,22 30.9924343,22 L11.0075657,22 C4.92825504,22 0,17.0791222 0,11 L0,11 Z\" className=\"background\" fill=\"red\"></path>\n            <path d=\"M30.9924343,0 C36.975248,0 41.8432574,4.76846989 41.99629,10.7115309 L42,11 C42,17.0751322 37.0792316,22 30.9924343,22 L11.0075657,22 C5.02475203,22 0.156742552,17.2341007 0.00370995454,11.2885915 L0,11 C0,4.92486775 4.92076837,0 11.0075657,0 L30.9924343,0 Z M30.9924343,1 L11.0075657,1 C5.47559009,1 0.99991738,5.47461611 0.99991738,10.9871457 L1.00337887,11.2628608 C1.14271146,16.6761076 5.5768313,21 11.0075657,21 L30.9924343,21 C36.5244099,21 41.0000827,16.5253839 41.0000827,11.0128598 L40.9966214,10.7372722 C40.8572703,5.32553352 36.4222391,1 30.9924343,1 Z\" className=\"border\"></path>\n            <path d=\"M27.7071068,7.29289322 L30,9.585 L32.2928932,7.29289322 C32.6533772,6.93240926 33.2206082,6.90467972 33.6128994,7.20970461 L33.7071068,7.29289322 C34.0976311,7.68341751 34.0976311,8.31658249 33.7071068,8.70710678 L33.7071068,8.70710678 L31.415,11 L33.7071068,13.2928932 C34.0976311,13.6834175 34.0976311,14.3165825 33.7071068,14.7071068 C33.3165825,15.0976311 32.6834175,15.0976311 32.2928932,14.7071068 L30,12.415 L27.7071068,14.7071068 C27.3466228,15.0675907 26.7793918,15.0953203 26.3871006,14.7902954 L26.2928932,14.7071068 C25.9023689,14.3165825 25.9023689,13.6834175 26.2928932,13.2928932 L26.2928932,13.2928932 L28.585,11 L26.2928932,8.70710678 C25.9023689,8.31658249 25.9023689,7.68341751 26.2928932,7.29289322 C26.6834175,6.90236893 27.3165825,6.90236893 27.7071068,7.29289322 Z\" className=\"cross\" fill=\"#FFFFFF\"></path>\n            <path d=\"M7.74451387,10.0285252 C7.39595738,10.1198564 7.12375034,10.3923519 7.03251575,10.7412777 C6.94128115,11.0902035 7.04521722,11.4612586 7.30437605,11.7118278 L10.2982384,14.7078028 C10.6875399,15.0973991 11.3185977,15.0973991 11.7078992,14.7078028 L16.695624,8.71585285 C16.9547828,8.46528367 17.0587189,8.09422851 16.9674843,7.74530271 C16.8762497,7.39637691 16.6040426,7.12388146 16.2554861,7.0325502 C15.9069296,6.94121893 15.5362672,7.04526513 15.2859632,7.30469855 L11.0030688,12.5910713 L8.71403676,10.3006735 C8.46373279,10.0412401 8.09307036,9.9371939 7.74451387,10.0285252 Z\" className=\"checkmark\"></path>\n            <path d=\"M11,20 C15.9705627,20 20,15.9705627 20,11 C20,6.02943725 15.9705627,2 11,2 C6.02943725,2 2,6.02943725 2,11 C2,15.9705627 6.02943725,20 11,20 Z\" className=\"handle handle-unchecked\"></path>\n            <path d=\"M31,20 C35.9705627,20 40,15.9705627 40,11 C40,6.02943725 35.9705627,2 31,2 C26.0294373,2 22,6.02943725 22,11 C22,15.9705627 26.0294373,20 31,20 Z\" className=\"handle handle-checked\"></path>\n        </svg>;\n}\n\nSwitchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default SwitchIcon;","import _JSXStyle from \"styled-jsx/style\";\nimport { colors, theme, sharedPropTypes } from '@dhis2/ui-constants';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport SwitchRegular from './SwitchIcon';\n\nclass Switch extends Component {\n  ref = createRef();\n\n  componentDidMount() {\n    if (this.props.initialFocus) {\n      this.ref.current.focus();\n    }\n  }\n\n  handleChange = e => {\n    if (this.props.onChange) {\n      this.props.onChange(this.createHandlerPayload(), e);\n    }\n  };\n  handleBlur = e => {\n    if (this.props.onBlur) {\n      this.props.onBlur(this.createHandlerPayload(), e);\n    }\n  };\n  handleFocus = e => {\n    if (this.props.onFocus) {\n      this.props.onFocus(this.createHandlerPayload(), e);\n    }\n  };\n\n  createHandlerPayload() {\n    return {\n      value: this.props.value,\n      name: this.props.name,\n      checked: !this.props.checked\n    };\n  }\n\n  render() {\n    const {\n      checked = false,\n      className,\n      disabled,\n      error,\n      label,\n      name,\n      tabIndex,\n      valid,\n      value,\n      warning,\n      dense,\n      dataTest,\n      ariaLabel\n    } = this.props;\n    const classes = cx({\n      checked,\n      disabled,\n      valid,\n      error,\n      warning,\n      dense\n    });\n    return <label data-test={dataTest} className={_JSXStyle.dynamic([[\"3159185573\", [colors.grey900, theme.disabled, colors.blue600]]]) + \" \" + (cx(className, {\n      disabled,\n      dense\n    }) || \"\")}>\n                <input type=\"checkbox\" ref={this.ref} role=\"switch\" name={name} value={value} checked={checked} disabled={disabled} tabIndex={tabIndex} onChange={this.handleChange} onFocus={this.handleFocus} onBlur={this.handleBlur} aria-label={ariaLabel} className={_JSXStyle.dynamic([[\"3159185573\", [colors.grey900, theme.disabled, colors.blue600]]])} />\n\n                <div className={_JSXStyle.dynamic([[\"3159185573\", [colors.grey900, theme.disabled, colors.blue600]]]) + \" \" + (cx('icon', {\n        dense\n      }) || \"\")}>\n                    <SwitchRegular className={classes} />\n                </div>\n\n                {label}\n\n                <_JSXStyle id={\"3159185573\"} dynamic={[colors.grey900, theme.disabled, colors.blue600]}>{[`label.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;cursor:pointer;color:${colors.grey900};font-size:16px;line-height:20px;}`, \"label.dense.__jsx-style-dynamic-selector{font-size:14px;line-height:16px;}\", `label.disabled.__jsx-style-dynamic-selector{cursor:not-allowed;color:${theme.disabled};}`, \"input.__jsx-style-dynamic-selector{opacity:0;position:absolute;height:18px;width:35px;margin-left:3px;}\", \"label.dense.__jsx-style-dynamic-selector input.__jsx-style-dynamic-selector{height:14px;width:27px;}\", \".icon.__jsx-style-dynamic-selector{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;margin-right:5px;border:2px solid transparent;padding:1px;border-radius:14px;}\", \"label.dense.__jsx-style-dynamic-selector .icon.__jsx-style-dynamic-selector{margin-right:3px;border-radius:12px;}\", `input.__jsx-style-dynamic-selector:focus+.icon.__jsx-style-dynamic-selector{border-color:${colors.blue600};}`]}</_JSXStyle>\n            </label>;\n  }\n\n}\n\nSwitch.propTypes = {\n  ariaLabel: PropTypes.string,\n  checked: PropTypes.bool,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n  dense: PropTypes.bool,\n  disabled: PropTypes.bool,\n  error: sharedPropTypes.statusPropType,\n  initialFocus: PropTypes.bool,\n  label: PropTypes.node,\n  name: PropTypes.string,\n  tabIndex: PropTypes.string,\n  valid: sharedPropTypes.statusPropType,\n  value: PropTypes.string,\n  warning: sharedPropTypes.statusPropType,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default Switch;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link } from 'react-router-dom';\nimport styles from './LinkButton.module.css';\n\nconst LinkButton = ({\n  className,\n  small,\n  ...rest\n}) => {\n  return <Link className={cx(styles.linkButton, {\n    [styles.small]: small\n  }, className)} {...rest} />;\n};\n\nLinkButton.propTypes = {\n  className: PropTypes.string,\n  small: PropTypes.bool\n};\nexport default LinkButton;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { useDataMutation } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../Temporary';\nimport { hooks } from '../Store';\n/* istanbul ignore next */\n\nconst mutation = {\n  resource: 'jobConfigurations',\n  id: ({\n    id\n  }) => id,\n  type: 'update',\n  partial: true,\n  data: ({\n    enabled\n  }) => ({\n    enabled\n  })\n};\n\nconst ToggleJobSwitch = ({\n  id,\n  checked,\n  disabled\n}) => {\n  const [toggleJob, {\n    loading\n  }] = useDataMutation(mutation);\n  const refetchJobs = hooks.useRefetchJobs();\n  const enabled = !checked;\n  return <Switch name={`toggle-job-${id}`} disabled={disabled || loading} checked={checked} onChange={() => {\n    toggleJob({\n      id,\n      enabled\n    }).then(() => refetchJobs());\n  }} ariaLabel={i18n.t('Toggle job')} />;\n};\n\nconst {\n  bool,\n  string\n} = PropTypes;\nToggleJobSwitch.propTypes = {\n  checked: bool.isRequired,\n  disabled: bool.isRequired,\n  id: string.isRequired\n};\nexport default ToggleJobSwitch;","import { createHashHistory } from 'history';\nconst history = createHashHistory();\nexport default history;","import history from './history';\nexport default history;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport history from '../../services/history';\n\nconst EditJobAction = ({\n  id\n}) => <MenuItem dense onClick={() => history.push(`/edit/${id}`)} label={i18n.t('Edit')} />;\n\nconst {\n  string\n} = PropTypes;\nEditJobAction.propTypes = {\n  id: string.isRequired\n};\nexport default EditJobAction;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport history from '../../services/history';\n\nconst ViewJobAction = ({\n  id\n}) => <MenuItem dense onClick={() => history.push(`/view/${id}`)} label={i18n.t('View')} />;\n\nconst {\n  string\n} = PropTypes;\nViewJobAction.propTypes = {\n  id: string.isRequired\n};\nexport default ViewJobAction;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip, Radio } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nconst cronPresets = [{\n  label: i18n.t('Every hour'),\n  value: '0 0 * ? * *'\n}, {\n  label: i18n.t('Every day at midnight'),\n  value: '0 0 1 ? * *'\n}, {\n  label: i18n.t('Every day at 3 am'),\n  value: '0 0 3 ? * *'\n}, {\n  label: i18n.t('Every day at noon'),\n  value: '0 0 12 ? * MON-FRI'\n}, {\n  label: i18n.t('Every week'),\n  value: '0 0 3 ? * MON'\n}];\n\nconst CronPresetModal = ({\n  setCron,\n  hideModal\n}) => {\n  const [currentPreset, setCurrentPreset] = useState('');\n  return <Modal open small onClose={hideModal}>\n            <ModalTitle>{i18n.t('Choose a preset time/interval')}</ModalTitle>\n            <ModalContent>\n                {cronPresets.map(preset => <Radio {...preset} checked={currentPreset === preset.value} key={preset.value} onChange={({\n        value\n      }) => setCurrentPreset(value)} />)}\n            </ModalContent>\n            <ModalActions>\n                <ButtonStrip end>\n                    <Button secondary onClick={hideModal} name=\"hide-modal\">\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button primary name=\"insert-preset\" disabled={!currentPreset} onClick={() => {\n          hideModal();\n          setCron(currentPreset);\n        }}>\n                        {i18n.t('Insert preset')}\n                    </Button>\n                </ButtonStrip>\n            </ModalActions>\n        </Modal>;\n};\n\nconst {\n  func\n} = PropTypes;\nCronPresetModal.propTypes = {\n  hideModal: func.isRequired,\n  setCron: func.isRequired\n};\nexport default CronPresetModal;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataMutation } from '@dhis2/app-runtime';\nconst mutation = {\n  resource: 'jobConfigurations',\n  id:\n  /* istanbul ignore next */\n  ({\n    id\n  }) => id,\n  type: 'delete'\n};\n\nconst DeleteJobModal = ({\n  id,\n  hideModal,\n  onSuccess\n}) => {\n  const [deleteJob] = useDataMutation(mutation);\n  return <Modal open small onClose={hideModal}>\n            <ModalContent>\n                {i18n.t('Are you sure you want to delete this job?')}\n            </ModalContent>\n            <ModalActions>\n                <ButtonStrip end>\n                    <Button name=\"hide-modal\" secondary onClick={hideModal}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button name={`delete-job-${id}`} destructive onClick={() => {\n          deleteJob({\n            id\n          }).then(() => {\n            hideModal();\n            onSuccess();\n          });\n        }}>\n                        {i18n.t('Delete')}\n                    </Button>\n                </ButtonStrip>\n            </ModalActions>\n        </Modal>;\n};\n\nconst {\n  func,\n  string\n} = PropTypes;\nDeleteJobModal.propTypes = {\n  hideModal: func.isRequired,\n  id: string.isRequired,\n  onSuccess: func.isRequired\n};\nexport default DeleteJobModal;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport history from '../../services/history';\n\nconst DiscardFormModal = ({\n  hideModal\n}) => <Modal open small onClose={hideModal}>\n        <ModalContent>\n            {i18n.t('Are you sure you want to discard this form?')}\n        </ModalContent>\n        <ModalActions>\n            <ButtonStrip end>\n                <Button name=\"cancel-discard-form\" secondary onClick={hideModal}>\n                    {i18n.t('Cancel')}\n                </Button>\n                <Button name=\"discard-form\" destructive onClick={() => {\n        hideModal();\n        history.push('/');\n      }}>\n                    {i18n.t('Discard')}\n                </Button>\n            </ButtonStrip>\n        </ModalActions>\n    </Modal>;\n\nconst {\n  func\n} = PropTypes;\nDiscardFormModal.propTypes = {\n  hideModal: func.isRequired\n};\nexport default DiscardFormModal;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../Store';\n\nconst RunJobModal = ({\n  id,\n  hideModal\n}) => {\n  const engine = useDataEngine();\n  const query = {\n    jobs: {\n      resource: `jobConfigurations/${id}/execute`\n    }\n  };\n\n  const runJob = () => engine.query(query);\n\n  const refetchJobs = hooks.useRefetchJobs();\n  return <Modal open small onClose={hideModal}>\n            <ModalContent>\n                {i18n.t('Are you sure you want to run this job?')}\n            </ModalContent>\n            <ModalActions>\n                <ButtonStrip end>\n                    <Button name=\"hide-modal\" secondary onClick={hideModal}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button name={`run-job-${id}`} primary onClick={() => {\n          runJob().then(() => {\n            hideModal();\n            refetchJobs();\n          });\n        }}>\n                        {i18n.t('Run')}\n                    </Button>\n                </ButtonStrip>\n            </ModalActions>\n        </Modal>;\n};\n\nconst {\n  func,\n  string\n} = PropTypes;\nRunJobModal.propTypes = {\n  hideModal: func.isRequired,\n  id: string.isRequired\n};\nexport default RunJobModal;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../Store';\nimport { RunJobModal } from '../Modal';\n\nconst RunJobAction = ({\n  id\n}) => {\n  const {\n    enabled\n  } = hooks.useJob(id);\n  const [showModal, setShowModal] = useState(false);\n  return <React.Fragment>\n            <MenuItem dense onClick={() => {\n      setShowModal(true);\n    }} disabled={!enabled} label={i18n.t('Run manually')} />\n            {showModal && <RunJobModal id={id} hideModal={\n    /* istanbul ignore next */\n    () => setShowModal(false)} />}\n        </React.Fragment>;\n};\n\nconst {\n  string\n} = PropTypes;\nRunJobAction.propTypes = {\n  id: string.isRequired\n};\nexport default RunJobAction;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { DeleteJobModal } from '../Modal';\nimport { hooks } from '../Store';\n\nconst DeleteJobAction = ({\n  id\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const refetchJobs = hooks.useRefetchJobs();\n  return <React.Fragment>\n            <MenuItem dense destructive onClick={() => {\n      setShowModal(true);\n    }} label={i18n.t('Delete')} />\n            {showModal && <DeleteJobModal id={id} hideModal={\n    /* istanbul ignore next */\n    () => setShowModal(false)} onSuccess={refetchJobs} />}\n        </React.Fragment>;\n};\n\nconst {\n  string\n} = PropTypes;\nDeleteJobAction.propTypes = {\n  id: string.isRequired\n};\nexport default DeleteJobAction;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { FlyoutMenu, DropdownButton } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport EditJobAction from './EditJobAction';\nimport ViewJobAction from './ViewJobAction';\nimport RunJobAction from './RunJobAction';\nimport DeleteJobAction from './DeleteJobAction';\n\nconst Actions = ({\n  id,\n  configurable\n}) => <DropdownButton small component={<FlyoutMenu>\n                {configurable ? <EditJobAction id={id} /> : <ViewJobAction id={id} />}\n                {configurable && <RunJobAction id={id} />}\n                {configurable && <DeleteJobAction id={id} />}\n            </FlyoutMenu>}>\n        {i18n.t('Actions')}\n    </DropdownButton>;\n\nActions.defaultProps = {\n  configurable: false\n};\nconst {\n  string,\n  bool\n} = PropTypes;\nActions.propTypes = {\n  id: string.isRequired,\n  configurable: bool\n};\nexport default Actions;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Tag } from '@dhis2/ui';\nimport { jobStatusMap } from '../../services/server-translations';\n\nconst Status = ({\n  status\n}) => {\n  switch (status) {\n    case 'STOPPED':\n    case 'DISABLED':\n      return <Tag>{jobStatusMap[status]}</Tag>;\n\n    case 'RUNNING':\n    case 'NOT_STARTED':\n    case 'SCHEDULED':\n      return <Tag neutral>{jobStatusMap[status]}</Tag>;\n\n    case 'FAILED':\n      return <Tag negative>{jobStatusMap[status]}</Tag>;\n\n    case 'DONE':\n      return <Tag positive>{jobStatusMap[status]}</Tag>;\n    // Unrecognised status\n\n    default:\n      return null;\n  }\n};\n\nconst {\n  string\n} = PropTypes;\nStatus.propTypes = {\n  status: string.isRequired\n};\nexport default Status;","import moment from 'moment';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nconst NextRun = ({\n  nextExecutionTime,\n  enabled\n}) => {\n  if (!enabled || !nextExecutionTime) {\n    return '-';\n  }\n\n  const now = moment(Date.now());\n  /**\n   * The recommendation is to run dhis2 on a server set to UTC time.\n   * In that case this timestamp is also UTC. If those recommendations\n   * weren't followed the time could be off, but there's nothing\n   * we can do to detect that.\n   */\n\n  const nextRun = moment.utc(nextExecutionTime);\n  const nextRunIsInPast = nextRun.isSameOrBefore(now, 'minute');\n  /**\n   * If the time is in the past, that could mean that the task is running,\n   * and the nextExecutionTime hasn't been updated yet.\n   */\n\n  if (nextRunIsInPast) {\n    return i18n.t('Not scheduled');\n  }\n\n  return now.to(nextRun);\n};\n\nconst {\n  bool,\n  string\n} = PropTypes;\nNextRun.propTypes = {\n  enabled: bool.isRequired,\n  nextExecutionTime: string\n};\nexport default NextRun;","const WEEKDAYS = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];\nconst MONTHS = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n\nconst isValidFields = fields => fields && fields.length === 6;\n\nconst isValidNumber = (number, x, y) => number >= x && number <= y;\n\nconst isWildcard = field => field === '*';\n\nconst isUndefined = field => field === '?';\n\nconst isValidNumberRange = (range, x, y) => {\n  const boundaries = range.split('-');\n  if (!boundaries || boundaries.length !== 2) return false;\n  return isValidNumber(boundaries[0], x, y) && isValidNumber(boundaries[1], x, y) && boundaries[0] <= boundaries[1];\n};\n\nconst isValidFraction = (fraction, x, y) => {\n  const components = fraction.split('/');\n  if (!components || components.length !== 2) return false;\n  /* istanbul ignore next */\n\n  return (isWildcard(components[0]) || isValidNumber(components[0], x, y)) && isValidNumber(components[1], x, y);\n};\n\nconst isAlphabeticWeekday = field => {\n  const weekdays = field.split('-');\n  const [firstDay, secondDay] = weekdays.map(c => WEEKDAYS.indexOf(c));\n  return firstDay !== -1 && secondDay === undefined || firstDay !== -1 && secondDay !== -1 && firstDay <= secondDay;\n};\n\nconst isAlphabeticMonth = field => {\n  const months = field.split('-');\n  const [firstMonth, secondMonth] = months.map(m => MONTHS.indexOf(m));\n  /* istanbul ignore next */\n\n  return firstMonth !== -1 && secondMonth === undefined || firstMonth !== -1 && secondMonth !== -1 && firstMonth <= secondMonth;\n};\n\nconst isValidWithinRange = (field, x, y) => isWildcard(field) || isValidNumber(field, x, y) || isValidNumberRange(field, x, y) || isValidFraction(field, x, y);\n\nconst isValidSecondField = field => isValidWithinRange(field, 0, 59);\n\nconst isValidMinuteField = field => isValidWithinRange(field, 0, 59);\n\nconst isValidHourField = field => isValidWithinRange(field, 0, 23);\n\nconst isValidDayField = field => isValidWithinRange(field, 0, 31) || isUndefined(field);\n\nconst isValidMonthField = field => isValidWithinRange(field, 1, 12) || isAlphabeticMonth(field);\n\nconst isValidWeekdayField = field => isValidWithinRange(field, 1, 7) || isAlphabeticWeekday(field) || isUndefined(field);\n/**\n * Cron expression validation. Validates the Spring Scheduling pattern.\n * Format: <second> <minute> <hour> <day-of-month> <month> <day-of-week>\n * Source code: https://git.io/vpoqG\n * Documentation: https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/scheduling/support/CronSequenceGenerator.html\n */\n\n\nconst validateCron = exp => {\n  if (!exp) {\n    return false;\n  }\n\n  const fields = exp.trim().split(' ');\n\n  if (!isValidFields(fields)) {\n    return false;\n  }\n\n  return isValidSecondField(fields[0]) && isValidMinuteField(fields[1]) && isValidHourField(fields[2]) && isValidDayField(fields[3]) && isValidMonthField(fields[4]) && isValidWeekdayField(fields[5]);\n};\n\nexport default validateCron;","import i18n from '@dhis2/d2-i18n';\nimport validateCron from './validate-cron';\n\nconst requiredCron = value => {\n  const isString = typeof value === 'string';\n  const isFilled = isString && value.length > 0;\n\n  if (!isFilled) {\n    return i18n.t('A CRON expression is required');\n  }\n\n  if (!validateCron(value)) {\n    return i18n.t('Please enter a valid CRON expression');\n  }\n\n  return undefined;\n};\n\nexport default requiredCron;","import cronstrue from 'cronstrue/i18n';\nimport i18n from '@dhis2/d2-i18n';\nimport { validateCron } from '../validators';\nconst fallback = 'en';\n\nconst translateCron = cron => {\n  const locale = i18n.language || fallback;\n  const isValid = cron && validateCron(cron);\n\n  if (!isValid) {\n    return '';\n  }\n\n  return cronstrue.toString(cron, {\n    locale\n  });\n};\n\nexport default translateCron;","import translateCron from './translate-cron';\nexport default translateCron;","import { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport translateCron from '../../services/translate-cron';\n\nconst Schedule = ({\n  cronExpression,\n  schedulingType,\n  delay\n}) => {\n  switch (schedulingType) {\n    case 'CRON':\n      return translateCron(cronExpression);\n\n    case 'FIXED_DELAY':\n      return i18n.t('{{ delay }} seconds after last run', {\n        delay\n      });\n\n    default:\n      // Unrecognised or invalid type\n      return '-';\n  }\n};\n\nconst {\n  string,\n  number\n} = PropTypes;\nSchedule.propTypes = {\n  schedulingType: string.isRequired,\n  cronExpression: string,\n  delay: number\n};\nexport default Schedule;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { TableRow, TableCell } from '@dhis2/ui';\nimport { jobTypesMap } from '../../services/server-translations';\nimport { ToggleJobSwitch } from '../Switches';\nimport Actions from './Actions';\nimport Status from './Status';\nimport NextRun from './NextRun';\nimport Schedule from './Schedule';\n\nconst JobTableRow = ({\n  job: {\n    id,\n    displayName,\n    jobType,\n    cronExpression,\n    delay,\n    jobStatus,\n    nextExecutionTime,\n    schedulingType,\n    enabled,\n    configurable\n  }\n}) => <TableRow>\n        <TableCell role=\"rowheader\">{displayName}</TableCell>\n        <TableCell>{jobTypesMap[jobType]}</TableCell>\n        <TableCell>\n            <Schedule cronExpression={cronExpression} delay={delay} schedulingType={schedulingType} />\n        </TableCell>\n        <TableCell>\n            <NextRun nextExecutionTime={nextExecutionTime} enabled={enabled} />\n        </TableCell>\n        <TableCell>\n            <Status status={jobStatus} />\n        </TableCell>\n        <TableCell>\n            <ToggleJobSwitch id={id} checked={enabled} disabled={!configurable} />\n        </TableCell>\n        <TableCell>\n            <Actions id={id} configurable={configurable} />\n        </TableCell>\n    </TableRow>;\n\nconst {\n  shape,\n  string,\n  bool,\n  number\n} = PropTypes;\nJobTableRow.propTypes = {\n  job: shape({\n    displayName: string.isRequired,\n    enabled: bool.isRequired,\n    id: string.isRequired,\n    jobStatus: string.isRequired,\n    jobType: string.isRequired,\n    schedulingType: string.isRequired,\n    cronExpression: string,\n    delay: number,\n    nextExecutionTime: string\n  }).isRequired\n};\nexport default JobTableRow;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Table, TableHead, TableRowHead, TableRow, TableCell, TableCellHead, TableBody } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport JobTableRow from './JobTableRow';\n\nconst JobTable = ({\n  jobs\n}) => <Table>\n        <TableHead>\n            <TableRowHead>\n                <TableCellHead>{i18n.t('Job name')}</TableCellHead>\n                <TableCellHead>{i18n.t('Type')}</TableCellHead>\n                <TableCellHead>{i18n.t('Schedule')}</TableCellHead>\n                <TableCellHead>{i18n.t('Next run')}</TableCellHead>\n                <TableCellHead>{i18n.t('Status')}</TableCellHead>\n                <TableCellHead>{i18n.t('On/off')}</TableCellHead>\n                <TableCellHead />\n            </TableRowHead>\n        </TableHead>\n        <TableBody>\n            {jobs.length === 0 ? <TableRow>\n                    <TableCell>{i18n.t('No jobs to display')}</TableCell>\n                </TableRow> : jobs.map(job => <JobTableRow key={job.id} job={job} />)}\n        </TableBody>\n    </Table>;\n\nconst {\n  object,\n  arrayOf\n} = PropTypes;\nJobTable.propTypes = {\n  jobs: arrayOf(object).isRequired\n};\nexport default JobTable;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Card, Checkbox, InputField, IconInfo16 } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { JobTable } from '../../components/JobTable';\nimport { LinkButton } from '../../components/Temporary';\nimport styles from './JobList.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobList = ({\n  jobs,\n  showSystemJobs,\n  setShowSystemJobs,\n  jobFilter,\n  setJobFilter\n}) => <React.Fragment>\n        <header className={styles.header}>\n            <h1 className={styles.headerTitle}>{i18n.t('Scheduled jobs')}</h1>\n            <a href={infoLink} className={styles.headerLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                <span className={styles.headerLinkIcon}>\n                    <IconInfo16 />\n                </span>\n                {i18n.t('About job configuration')}\n            </a>\n        </header>\n        <Card>\n            <div className={styles.controlContainer}>\n                <InputField dataTest=\"job-filter-input\" label={i18n.t('Filter jobs')} onChange={({\n        value\n      }) => {\n        setJobFilter(value);\n      }} value={jobFilter} type=\"search\" role=\"searchbox\" name=\"job-filter\" />\n                <div className={styles.controlRight}>\n                    <Checkbox dataTest=\"job-toggle-checkbox\" checked={showSystemJobs} label={i18n.t('Include system jobs in list')} onChange={({\n          checked\n        }) => {\n          setShowSystemJobs(checked);\n        }} />\n                    <LinkButton to=\"/add\">{i18n.t('New job')}</LinkButton>\n                </div>\n            </div>\n            <JobTable jobs={jobs} />\n        </Card>\n    </React.Fragment>;\n\nconst {\n  bool,\n  object,\n  string,\n  arrayOf,\n  func\n} = PropTypes;\nJobList.propTypes = {\n  jobFilter: string.isRequired,\n  jobs: arrayOf(object).isRequired,\n  setJobFilter: func.isRequired,\n  setShowSystemJobs: func.isRequired,\n  showSystemJobs: bool.isRequired\n};\nexport default JobList;","import React from 'react';\nimport { hooks } from '../../components/Store';\nimport JobList from './JobList';\n\nconst JobListContainer = () => {\n  const [jobFilter, setJobFilter] = hooks.useJobFilter();\n  const [showSystemJobs, setShowSystemJobs] = hooks.useShowSystemJobs();\n  const jobs = hooks.useJobListJobs();\n  return <JobList jobs={jobs} showSystemJobs={showSystemJobs} setShowSystemJobs={setShowSystemJobs} jobFilter={jobFilter} setJobFilter={setJobFilter} />;\n};\n\nexport default JobListContainer;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { CronPresetModal } from '../Modal';\n\nconst CronPresetButton = ({\n  setCron,\n  small\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  return <React.Fragment>\n            <Button onClick={() => setShowModal(true)} small={small}>\n                {i18n.t('Choose from preset times')}\n            </Button>\n            {showModal && <CronPresetModal hideModal={\n    /* istanbul ignore next */\n    () => setShowModal(false)} setCron={setCron} />}\n        </React.Fragment>;\n};\n\nCronPresetButton.defaultProps = {\n  small: false\n};\nconst {\n  func,\n  bool\n} = PropTypes;\nCronPresetButton.propTypes = {\n  setCron: func.isRequired,\n  small: bool\n};\nexport default CronPresetButton;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { DeleteJobModal } from '../Modal';\n\nconst DeleteJobButton = ({\n  id,\n  onSuccess\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  return <React.Fragment>\n            <Button destructive onClick={() => setShowModal(true)}>\n                {i18n.t('Delete job')}\n            </Button>\n            {showModal && <DeleteJobModal id={id} hideModal={\n    /* istanbul ignore next */\n    () => setShowModal(false)} onSuccess={onSuccess} />}\n        </React.Fragment>;\n};\n\nconst {\n  string,\n  func\n} = PropTypes;\nDeleteJobButton.propTypes = {\n  id: string.isRequired,\n  onSuccess: func.isRequired\n};\nexport default DeleteJobButton;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button } from '@dhis2/ui';\nimport history from '../../services/history';\nimport { DiscardFormModal } from '../Modal';\n\nconst DiscardFormButton = ({\n  shouldConfirm,\n  children,\n  small,\n  className\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const onClick = shouldConfirm ? () => setShowModal(true) : () => history.push('/');\n  return <React.Fragment>\n            <Button onClick={onClick} small={small} className={className}>\n                {children}\n            </Button>\n            {showModal && <DiscardFormModal hideModal={\n    /* istanbul ignore next */\n    () => setShowModal(false)} />}\n        </React.Fragment>;\n};\n\nDiscardFormButton.defaultProps = {\n  className: '',\n  shouldConfirm: false,\n  small: false\n};\nconst {\n  string,\n  bool\n} = PropTypes;\nDiscardFormButton.propTypes = {\n  children: string.isRequired,\n  className: string,\n  shouldConfirm: bool,\n  small: bool\n};\nexport default DiscardFormButton;","import { FinalForm } from '@dhis2/ui';\nconst {\n  FORM_ERROR\n} = FinalForm;\n/**\n * Formats the errors returned by our backend to a format that final-form can parse\n */\n\nconst formatError = error => {\n  const {\n    details: {\n      response\n    }\n  } = error;\n  const validationErrors = {};\n  /**\n   * Some backend errors do not have a way for us to infer the related field,\n   * those can be put in genericErrors\n   */\n\n  const genericErrors = [];\n\n  if (response.errorReports && response.errorReports.length) {\n    response.errorReports.forEach(report => {\n      /**\n       * errorProperty is how the backend indicates the field that the error\n       * is related to. If we know this, return it as a field specific error\n       * (note that this will swallow errors if the backend indicates a field\n       * that does not exist in the frontend). Otherwise we'll push it to the\n       * generic errors.\n       */\n      if (report.errorProperty) {\n        validationErrors[report.errorProperty] = report.message;\n      } else {\n        genericErrors.push(report.message);\n      }\n    });\n  }\n\n  if (genericErrors.length > 0) {\n    validationErrors[FORM_ERROR] = genericErrors;\n  }\n\n  return validationErrors;\n};\n\nexport default formatError;","import formatError from './format-error';\nexport default formatError;","import { useContext } from 'react';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { StoreContext } from '../../components/Store';\nimport history from '../../services/history';\nimport formatError from '../../services/format-error';\nconst mutation = {\n  resource: 'jobConfigurations',\n  type: 'create',\n  data:\n  /* istanbul ignore next */\n  ({\n    job\n  }) => job\n};\n\nconst useSubmitJob = () => {\n  const {\n    refetchJobs\n  } = useContext(StoreContext);\n  const engine = useDataEngine();\n\n  const submitJob = job => engine.mutate(mutation, {\n    variables: {\n      job\n    }\n  }).then(() => {\n    history.push('/');\n    refetchJobs();\n  }).catch(error => {\n    const isValidationError = error.type === 'access'; // Potential validation error, return it in a format final-form can handle\n\n    if (isValidationError) {\n      return formatError(error);\n    } // Throw any unexpected errors\n\n\n    throw error;\n  });\n\n  return [submitJob];\n};\n\nexport default useSubmitJob;","import { useContext } from 'react';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { StoreContext } from '../../components/Store';\nimport history from '../../services/history';\nimport formatError from '../../services/format-error';\nconst mutation = {\n  resource: 'jobConfigurations',\n  type: 'update',\n  id:\n  /* istanbul ignore next */\n  ({\n    id\n  }) => id,\n  data:\n  /* istanbul ignore next */\n  ({\n    job\n  }) => job\n};\n\nconst useUpdateJob = ({\n  id\n}) => {\n  const {\n    refetchJobs\n  } = useContext(StoreContext);\n  const engine = useDataEngine();\n\n  const updateJob = job => engine.mutate(mutation, {\n    variables: {\n      job,\n      id\n    }\n  }).then(() => {\n    history.push('/');\n    refetchJobs();\n  }).catch(error => {\n    const isValidationError = error.type === 'access'; // Potential validation error, return it in a format final-form can handle\n\n    if (isValidationError) {\n      return formatError(error);\n    } // Throw any unexpected errors\n\n\n    throw error;\n  });\n\n  return [updateJob];\n};\n\nexport default useUpdateJob;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { NoticeBox } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport styles from './FormErrorBox.module.css';\n\nconst FormErrorBox = ({\n  submitError\n}) => {\n  const hasGenericSubmitErrors = submitError.length > 0;\n\n  if (!hasGenericSubmitErrors) {\n    return null;\n  }\n\n  return <NoticeBox error title={i18n.t('Something went wrong whilst creating your job')}>\n            <ul className={styles.list}>\n                {submitError.map(error => <li key={error}>{error}</li>)}\n            </ul>\n        </NoticeBox>;\n};\n\nconst {\n  array\n} = PropTypes;\nFormErrorBox.propTypes = {\n  submitError: array.isRequired\n};\nexport default FormErrorBox;","import React from 'react';\nimport { ReactFinalForm, InputFieldFF, composeValidators, hasValue, string } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nconst {\n  Field\n} = ReactFinalForm; // The key under which this field will be sent to the backend\n\nconst FIELD_NAME = 'name';\nconst VALIDATOR = composeValidators(string, hasValue);\n\nconst JobNameField = () => <Field name={FIELD_NAME} component={InputFieldFF} validate={VALIDATOR} label={i18n.t('Name')} type=\"text\" required />;\n\nexport default JobNameField;","import React from 'react';\nimport { ReactFinalForm, SingleSelectFieldFF, composeValidators, hasValue, string } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../Store';\nimport { jobTypesMap } from '../../services/server-translations';\nconst {\n  Field\n} = ReactFinalForm; // The key under which this field will be sent to the backend\n\nexport const FIELD_NAME = 'jobType';\nconst VALIDATOR = composeValidators(string, hasValue);\n\nconst JobTypeField = () => {\n  const jobTypes = hooks.useAllJobTypes();\n  const options = jobTypes.map(({\n    jobType\n  }) => ({\n    value: jobType,\n    label: jobTypesMap[jobType]\n  }));\n  return <Field name={FIELD_NAME} validate={VALIDATOR} component={SingleSelectFieldFF} options={options} label={i18n.t('Job type')} required />;\n};\n\nexport default JobTypeField;","/**\n * Our backend returns certain values as a number, but our\n * inputs expect and return a string, so we're formatting them to strings\n */\nexport const formatToString = value => {\n  if (typeof value === 'number') {\n    return value.toString();\n  }\n\n  return value;\n};","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { MultiSelectField, ReactFinalForm, MultiSelectFieldFF } from '@dhis2/ui';\nimport { hooks } from '../Store';\nimport { analyticsTableTypes } from '../../services/server-translations';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst SkipTableTypesField = ({\n  label,\n  name,\n  parameterName\n}) => {\n  const options = hooks.useParameterOptions(parameterName);\n\n  if (options.length === 0) {\n    return <MultiSelectField disabled helpText={i18n.t('No options available')} label={label} />;\n  }\n\n  const translatedOptions = options.map(option => ({\n    value: option,\n    label: analyticsTableTypes[option] || option\n  }));\n  return <Field name={name} component={MultiSelectFieldFF} options={translatedOptions} label={label} />;\n};\n\nconst {\n  string\n} = PropTypes;\nSkipTableTypesField.propTypes = {\n  label: string.isRequired,\n  name: string.isRequired,\n  parameterName: string.isRequired\n};\nexport default SkipTableTypesField;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MultiSelectFieldFF, ReactFinalForm, MultiSelectField } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../Store';\nconst {\n  Field\n} = ReactFinalForm; // A labeled options field has options that have both an id and a label.\n\nconst LabeledOptionsField = ({\n  label,\n  name,\n  parameterName\n}) => {\n  const options = hooks.useParameterOptions(parameterName);\n\n  if (options.length === 0) {\n    return <MultiSelectField disabled helpText={i18n.t('No options available')} label={label} />;\n  }\n\n  const labeledOptions = options.map(({\n    id,\n    displayName\n  }) => ({\n    value: id,\n    label: displayName\n  }));\n  return <Field name={name} component={MultiSelectFieldFF} options={labeledOptions} label={label} />;\n};\n\nconst {\n  string\n} = PropTypes;\nLabeledOptionsField.propTypes = {\n  label: string.isRequired,\n  name: string.isRequired,\n  parameterName: string.isRequired\n};\nexport default LabeledOptionsField;","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm, InputFieldFF, SwitchFieldFF, Box } from '@dhis2/ui';\nimport { hooks } from '../Store';\nimport { formatToString } from './formatters';\nimport SkipTableTypesField from './SkipTableTypesField';\nimport LabeledOptionsField from './LabeledOptionsField';\nimport styles from './ParameterFields.module.css';\nconst {\n  Field\n} = ReactFinalForm; // The key under which the parameters will be sent to the backend\n\nconst FIELD_NAME = 'jobParameters'; // Renders all parameters for a given jobtype\n\nconst ParameterFields = ({\n  jobType\n}) => {\n  const parameters = hooks.useJobTypeParameters(jobType);\n\n  if (parameters.length === 0) {\n    return null;\n  } // Map all parameters to the appropriate field types\n\n\n  const parameterComponents = parameters.map(({\n    fieldName,\n    name,\n    klass\n  }) => {\n    const defaultProps = {\n      label: fieldName,\n      name: `${FIELD_NAME}.${name}`\n    };\n    let parameterComponent = null; // Specific case, as the options here need specific translations\n\n    if (name === 'skipTableTypes') {\n      return <Box marginTop=\"16px\" key={name}>\n                    <SkipTableTypesField {...defaultProps} parameterName={name} />\n                </Box>;\n    } // Generic field rendering\n\n\n    switch (klass) {\n      case 'java.lang.String':\n        parameterComponent = <Field {...defaultProps} component={InputFieldFF} type=\"text\" />;\n        break;\n\n      case 'java.lang.Boolean':\n        parameterComponent = <Field {...defaultProps} component={SwitchFieldFF} type=\"checkbox\" />;\n        break;\n\n      case 'java.lang.Integer':\n        parameterComponent = <Field {...defaultProps} component={InputFieldFF} format={formatToString} type=\"number\" />;\n        break;\n\n      case 'java.util.List':\n        parameterComponent = <LabeledOptionsField {...defaultProps} parameterName={name} />;\n        break;\n    } // Wrap all components in a Box for spacing\n\n\n    return <Box marginTop=\"16px\" key={name}>\n                {parameterComponent}\n            </Box>;\n  });\n  return <React.Fragment>\n            <header>\n                <h4 className={styles.headerTitle}>{i18n.t('Parameters')}</h4>\n            </header>\n            {parameterComponents}\n        </React.Fragment>;\n};\n\nconst {\n  string\n} = PropTypes;\nParameterFields.propTypes = {\n  jobType: string.isRequired\n};\nexport default ParameterFields;","import React from 'react';\nimport { Box, ReactFinalForm, InputFieldFF } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { requiredCron } from '../../services/validators';\nimport { CronPresetButton } from '../Buttons';\nimport translateCron from '../../services/translate-cron';\nconst {\n  Field,\n  useFormState,\n  useForm\n} = ReactFinalForm; // The key under which this field will be sent to the backend\n\nconst FIELD_NAME = 'cronExpression';\nconst VALIDATOR = requiredCron;\n\nconst CronField = () => {\n  const form = useForm();\n  const {\n    values\n  } = useFormState({\n    subscription: {\n      values: true\n    }\n  });\n  const cronExpression = values[FIELD_NAME];\n  const helpText = translateCron(cronExpression);\n  return <React.Fragment>\n            <Field component={InputFieldFF} name={FIELD_NAME} validate={VALIDATOR} label={i18n.t('CRON Expression')} type=\"text\" helpText={helpText} required />\n            <Box marginTop=\"8px\">\n                <CronPresetButton setCron={\n      /* istanbul ignore next */\n      cron => form.change(FIELD_NAME, cron)} small />\n            </Box>\n        </React.Fragment>;\n};\n\nexport default CronField;","import React from 'react';\nimport { ReactFinalForm, InputFieldFF, composeValidators, hasValue, integer, createNumberRange } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { formatToString } from './formatters';\nconst {\n  Field\n} = ReactFinalForm; // Omitting the underscore here since it messes up i18n\n\nconst lowerbound = 1;\nconst upperbound = 86400; // The key under which this field will be sent to the backend\n\nconst FIELD_NAME = 'delay';\nconst VALIDATOR = composeValidators(integer, hasValue, createNumberRange(lowerbound, upperbound));\n\nconst DelayField = () => <Field component={InputFieldFF} name={FIELD_NAME} validate={VALIDATOR} label={i18n.t('Delay')} type=\"number\" format={formatToString} helpText={i18n.t('Delay in seconds ({{ lowerbound }} - {{ upperbound }})', {\n  lowerbound,\n  upperbound\n})} required />;\n\nexport default DelayField;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { hooks } from '../Store';\nimport CronField from './CronField';\nimport DelayField from './DelayField';\n\nconst ScheduleField = ({\n  jobType\n}) => {\n  const currentJobType = hooks.useJobType(jobType);\n  const schedulingType = currentJobType.schedulingType;\n\n  switch (schedulingType) {\n    case 'CRON':\n      return <CronField />;\n\n    case 'FIXED_DELAY':\n      return <DelayField />;\n\n    default:\n      // Unrecognised scheduling type\n      return null;\n  }\n};\n\nconst {\n  string\n} = PropTypes;\nScheduleField.propTypes = {\n  jobType: string.isRequired\n};\nexport default ScheduleField;","import JobNameField from './JobNameField';\nimport JobTypeField, { FIELD_NAME as JOB_TYPE } from './JobTypeField';\nimport ParameterFields from './ParameterFields';\nimport ScheduleField from './ScheduleField';\nconst fieldNames = {\n  JOB_TYPE\n};\nexport { JobNameField, ScheduleField, JobTypeField, ParameterFields, fieldNames };","import React, { useEffect } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, CircularLoader, Box, ReactFinalForm } from '@dhis2/ui';\nimport { DiscardFormButton } from '../Buttons';\nimport { FormErrorBox } from '../FormErrorBox';\nimport { ScheduleField, JobNameField, JobTypeField, ParameterFields, fieldNames } from '../FormFields';\nimport styles from './JobAddForm.module.css';\nconst {\n  useForm\n} = ReactFinalForm;\n\nconst JobAddForm = ({\n  handleSubmit,\n  pristine,\n  submitting,\n  submitError,\n  hasSubmitErrors,\n  values,\n  setIsPristine\n}) => {\n  const {\n    subscribe\n  } = useForm();\n  /**\n   * Lift pristine state up on changes, wrapped in useEffect because calls to setState\n   * outside of the component that owns the setState should not happen synchronously.\n   */\n\n  useEffect(() =>\n  /**\n   * The subscriber will only be called when pristine changes. It returns a\n   * cleanup function.\n   * https://final-form.org/docs/final-form/types/FormApi#subscribe\n   */\n  subscribe(({\n    pristine\n  }) => setIsPristine(pristine), {\n    pristine: true\n  })); // Check if there's currently a selected job type\n\n  const jobType = values[fieldNames.JOB_TYPE]; // Show a spinner only when submitting\n\n  const Spinner = submitting ? <CircularLoader small /> : null;\n  return <form onSubmit={handleSubmit}>\n            <Box maxWidth=\"600px\">\n                <JobNameField />\n            </Box>\n            <Box marginTop=\"16px\" maxWidth=\"400px\">\n                <JobTypeField />\n            </Box>\n            {jobType && <Box marginTop=\"16px\" maxWidth=\"400px\">\n                    <ScheduleField jobType={jobType} />\n                </Box>}\n            {jobType && <Box marginTop=\"32px\" maxWidth=\"400px\">\n                    <ParameterFields jobType={jobType} />\n                </Box>}\n            {hasSubmitErrors && <Box marginTop=\"32px\" maxWidth=\"600px\">\n                    <FormErrorBox submitError={submitError} />\n                </Box>}\n            <div className={styles.formButtonContainer}>\n                <Button primary type=\"submit\" disabled={pristine || submitting} icon={Spinner} className={styles.saveButton}>\n                    {i18n.t('Save')}\n                </Button>\n                <DiscardFormButton shouldConfirm={!pristine}>\n                    {i18n.t('Cancel')}\n                </DiscardFormButton>\n            </div>\n        </form>;\n};\n\nconst {\n  func,\n  bool,\n  object,\n  array\n} = PropTypes;\nJobAddForm.defaultProps = {\n  submitError: []\n};\nJobAddForm.propTypes = {\n  handleSubmit: func.isRequired,\n  hasSubmitErrors: bool.isRequired,\n  pristine: bool.isRequired,\n  setIsPristine: func.isRequired,\n  submitting: bool.isRequired,\n  values: object.isRequired,\n  submitError: array\n};\nexport default JobAddForm;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { useSubmitJob } from '../../hooks/jobs';\nimport JobAddForm from './JobAddForm';\nconst {\n  Form\n} = ReactFinalForm;\n\nconst JobAddFormContainer = ({\n  setIsPristine\n}) => {\n  const [submitJob] = useSubmitJob();\n  /**\n   * destroyOnUnregister is enabled so that dynamic fields will be unregistered\n   * when they're removed from the form, for instance when the jobType changes.\n   */\n\n  return <Form onSubmit={submitJob} component={JobAddForm} setIsPristine={setIsPristine} destroyOnUnregister />;\n};\n\nconst {\n  func\n} = PropTypes;\nJobAddFormContainer.propTypes = {\n  setIsPristine: func.isRequired\n};\nexport default JobAddFormContainer;","import React, { useEffect } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, CircularLoader, Box, ReactFinalForm } from '@dhis2/ui';\nimport history from '../../services/history';\nimport { DiscardFormButton, DeleteJobButton } from '../Buttons';\nimport { FormErrorBox } from '../FormErrorBox';\nimport { ScheduleField, JobNameField, JobTypeField, ParameterFields, fieldNames } from '../FormFields';\nimport styles from './JobEditForm.module.css';\nconst {\n  useForm\n} = ReactFinalForm;\n\nconst JobEditForm = ({\n  id,\n  refetchJobs,\n  handleSubmit,\n  pristine,\n  submitting,\n  submitError,\n  hasSubmitErrors,\n  values,\n  setIsPristine\n}) => {\n  const {\n    subscribe\n  } = useForm();\n  /**\n   * Lift pristine state up on changes, wrapped in useEffect because calls to setState\n   * outside of the component that owns the setState should not happen synchronously.\n   */\n\n  useEffect(() =>\n  /**\n   * The subscriber will only be called when pristine changes. It returns a\n   * cleanup function.\n   * https://final-form.org/docs/final-form/types/FormApi#subscribe\n   */\n  subscribe(({\n    pristine\n  }) => setIsPristine(pristine), {\n    pristine: true\n  })); // Check if there's currently a selected job type\n\n  const jobType = values[fieldNames.JOB_TYPE]; // Show a spinner only when submitting\n\n  const Spinner = submitting ? <CircularLoader small /> : null;\n  return <form onSubmit={handleSubmit}>\n            <Box maxWidth=\"600px\">\n                <JobNameField />\n            </Box>\n            <Box marginTop=\"16px\" maxWidth=\"400px\">\n                <JobTypeField />\n            </Box>\n            {jobType && <Box marginTop=\"16px\" maxWidth=\"400px\">\n                    <ScheduleField jobType={jobType} />\n                </Box>}\n            {jobType && <Box marginTop=\"32px\" maxWidth=\"400px\">\n                    <ParameterFields jobType={jobType} />\n                </Box>}\n            {hasSubmitErrors && <Box marginTop=\"32px\" maxWidth=\"600px\">\n                    <FormErrorBox submitError={submitError} />\n                </Box>}\n            <div className={styles.formButtonContainer}>\n                <Button primary type=\"submit\" disabled={pristine || submitting} icon={Spinner} className={styles.saveButton}>\n                    {i18n.t('Save')}\n                </Button>\n                <DiscardFormButton shouldConfirm={!pristine}>\n                    {i18n.t('Cancel')}\n                </DiscardFormButton>\n                <span className={styles.deleteButton}>\n                    <DeleteJobButton id={id} onSuccess={() => {\n          history.push('/');\n          refetchJobs();\n        }} />\n                </span>\n            </div>\n        </form>;\n};\n\nconst {\n  func,\n  bool,\n  object,\n  array,\n  string\n} = PropTypes;\nJobEditForm.defaultProps = {\n  submitError: []\n};\nJobEditForm.propTypes = {\n  handleSubmit: func.isRequired,\n  hasSubmitErrors: bool.isRequired,\n  id: string.isRequired,\n  pristine: bool.isRequired,\n  refetchJobs: func.isRequired,\n  setIsPristine: func.isRequired,\n  submitting: bool.isRequired,\n  values: object.isRequired,\n  submitError: array\n};\nexport default JobEditForm;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { useParams } from 'react-router-dom';\nimport { useUpdateJob } from '../../hooks/jobs';\nimport { hooks } from '../Store';\nimport JobEditForm from './JobEditForm';\nconst {\n  Form\n} = ReactFinalForm;\n/**\n * The fields we need for the initialValues for our form fields. Since we use\n * these values to set the initial values in final-form, if we wouldn't filter\n * them we'd end up submitting way more data than we intend to.\n */\n\nconst initialFields = ['cronExpression', 'delay', 'jobParameters', 'jobType', 'name', 'schedulingType'];\n\nconst JobEditFormContainer = ({\n  setIsPristine\n}) => {\n  const {\n    id\n  } = useParams();\n  const [updateJob] = useUpdateJob({\n    id\n  });\n  const refetchJobs = hooks.useRefetchJobs();\n  const job = hooks.useJob(id); // Creating an object with just the values we want to use as initial values\n\n  const initialValues = initialFields.reduce((filtered, key) => {\n    filtered[key] = job[key];\n    return filtered;\n  }, {});\n  /**\n   * destroyOnUnregister is enabled so that dynamic fields will be unregistered\n   * when they're removed from the form, for instance when the jobType changes.\n   */\n\n  /* istanbul ignore next: we're testing this section, but coverage reporting seems to disagree */\n\n  return <Form onSubmit={updateJob} component={JobEditForm} setIsPristine={setIsPristine} initialValues={initialValues} id={id} refetchJobs={refetchJobs} destroyOnUnregister />;\n};\n\nconst {\n  func\n} = PropTypes;\nJobEditFormContainer.propTypes = {\n  setIsPristine: func.isRequired\n};\nexport default JobEditFormContainer;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport { jobStatusMap } from '../../services/server-translations';\nimport styles from './JobDetails.module.css';\n\nconst JobDetails = ({\n  created,\n  lastExecutedStatus,\n  lastExecuted\n}) => {\n  // Using Date.now allows for easier mocking\n  const now = Date.now();\n  const createdFromNow = moment(created).from(now);\n  const translatedStatus = jobStatusMap[lastExecutedStatus];\n  const lastRunFromNow = lastExecuted ? moment(lastExecuted).from(now) : '';\n  return <div className={styles.wrapper}>\n            <h4 className={styles.title}>{i18n.t('Job details')}</h4>\n            <div className={styles.details}>\n                <div>\n                    {i18n.t('Created {{ createdFromNow }}.', {\n          createdFromNow\n        })}\n                </div>\n                {lastRunFromNow && <div>\n                        {i18n.t('Last run {{ lastRunFromNow }}.', {\n          lastRunFromNow\n        })}\n                    </div>}\n                {translatedStatus && <div>\n                        {i18n.t('Last run status: {{ translatedStatus }}.', {\n          translatedStatus,\n          nsSeparator: '>'\n        })}\n                    </div>}\n            </div>\n        </div>;\n};\n\nconst {\n  string\n} = PropTypes;\nJobDetails.propTypes = {\n  created: string.isRequired,\n  lastExecutedStatus: string.isRequired,\n  lastExecuted: string\n};\nexport default JobDetails;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Card, IconInfo16 } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { DiscardFormButton } from '../../components/Buttons';\nimport { JobEditFormContainer } from '../../components/Forms';\nimport { JobDetails } from '../../components/JobDetails';\nimport styles from './JobEdit.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobEdit = ({\n  isPristine,\n  setIsPristine,\n  name,\n  created,\n  lastExecutedStatus,\n  lastExecuted\n}) => <React.Fragment>\n        <header className={styles.pageHeader}>\n            <DiscardFormButton shouldConfirm={!isPristine} className={styles.pageHeaderButton} small>\n                {i18n.t('Back to all jobs')}\n            </DiscardFormButton>\n            <h2 className={styles.pageHeaderTitle}>\n                {i18n.t('Job: {{ name }}', {\n        name,\n        nsSeparator: '>'\n      })}\n            </h2>\n        </header>\n        <Card className={styles.card}>\n            <header className={styles.cardHeader}>\n                <h3 className={styles.cardHeaderTitle}>\n                    {i18n.t('Configuration')}\n                </h3>\n                <a href={infoLink} className={styles.cardHeaderLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <span className={styles.cardHeaderInfo}>\n                        <IconInfo16 />\n                    </span>\n                    {i18n.t('About job configuration')}\n                </a>\n            </header>\n            <div className={styles.jobDetails}>\n                <JobDetails created={created} lastExecutedStatus={lastExecutedStatus} lastExecuted={lastExecuted} />\n            </div>\n            <JobEditFormContainer setIsPristine={setIsPristine} />\n        </Card>\n    </React.Fragment>;\n\nconst {\n  bool,\n  func,\n  string\n} = PropTypes;\nJobEdit.propTypes = {\n  created: string.isRequired,\n  isPristine: bool.isRequired,\n  lastExecuted: string.isRequired,\n  lastExecutedStatus: string.isRequired,\n  name: string.isRequired,\n  setIsPristine: func.isRequired\n};\nexport default JobEdit;","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { hooks } from '../../components/Store';\nimport JobEdit from './JobEdit';\n\nconst JobEditContainer = () => {\n  const [isPristine, setIsPristine] = useState(true);\n  const {\n    id\n  } = useParams();\n  const job = hooks.useJob(id);\n  return <JobEdit isPristine={isPristine} setIsPristine={setIsPristine} name={job.name} created={job.created} lastExecutedStatus={job.lastExecutedStatus} lastExecuted={job.lastExecuted} />;\n};\n\nexport default JobEditContainer;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Card, IconInfo16, Box, SingleSelectField, SingleSelectOption, InputField } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../../components/Store';\nimport { LinkButton } from '../../components/Temporary';\nimport { JobDetails } from '../../components/JobDetails';\nimport translateCron from '../../services/translate-cron';\nimport { jobTypesMap } from '../../services/server-translations';\nimport styles from './JobView.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobView = () => {\n  const {\n    id\n  } = useParams();\n  const {\n    name,\n    created,\n    lastExecutedStatus,\n    lastExecuted,\n    jobType,\n    cronExpression\n  } = hooks.useJob(id);\n  return <React.Fragment>\n            <header className={styles.pageHeader}>\n                <LinkButton className={styles.pageHeaderButton} to=\"/\" small>\n                    {i18n.t('Back to all jobs')}\n                </LinkButton>\n                <h2 className={styles.pageHeaderTitle}>\n                    {i18n.t('System job: {{ name }}', {\n          name,\n          nsSeparator: '>'\n        })}\n                </h2>\n            </header>\n            <Card className={styles.card}>\n                <header className={styles.cardHeader}>\n                    <h3 className={styles.cardHeaderTitle}>\n                        {i18n.t('Configuration')}\n                    </h3>\n                    <a href={infoLink} className={styles.cardHeaderLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <span className={styles.cardHeaderInfo}>\n                            <IconInfo16 />\n                        </span>\n                        {i18n.t('About job configuration')}\n                    </a>\n                </header>\n                <div className={styles.jobDetails}>\n                    <JobDetails created={created} lastExecutedStatus={lastExecutedStatus} lastExecuted={lastExecuted} />\n                </div>\n                <Box maxWidth=\"600px\">\n                    <InputField label={i18n.t('Name')} disabled value={name} name=\"name\" />\n                </Box>\n                <Box marginTop=\"16px\" maxWidth=\"400px\">\n                    <SingleSelectField name=\"jobType\" label={i18n.t('Job type')} disabled selected={jobType}>\n                        <SingleSelectOption value={jobType} label={jobTypesMap[jobType]} />\n                    </SingleSelectField>\n                </Box>\n                <Box marginTop=\"16px\" maxWidth=\"400px\">\n                    <InputField label={i18n.t('CRON Expression')} name=\"cronExpression\" disabled value={cronExpression} helpText={translateCron(cronExpression)} />\n                </Box>\n                <Box marginTop=\"24px\">\n                    <LinkButton className={styles.pageHeaderButton} to=\"/\">\n                        {i18n.t('Back to all jobs')}\n                    </LinkButton>\n                </Box>\n            </Card>\n        </React.Fragment>;\n};\n\nexport default JobView;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Card, IconInfo16 } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { DiscardFormButton } from '../../components/Buttons';\nimport { JobAddFormContainer } from '../../components/Forms';\nimport styles from './JobAdd.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobAdd = ({\n  isPristine,\n  setIsPristine\n}) => <React.Fragment>\n        <header className={styles.pageHeader}>\n            <DiscardFormButton shouldConfirm={!isPristine} className={styles.pageHeaderButton} small>\n                {i18n.t('Back to all jobs')}\n            </DiscardFormButton>\n            <h2 className={styles.pageHeaderTitle}>{i18n.t('New Job')}</h2>\n        </header>\n        <Card className={styles.card}>\n            <header className={styles.cardHeader}>\n                <h3 className={styles.cardHeaderTitle}>\n                    {i18n.t('Configuration')}\n                </h3>\n                <a href={infoLink} className={styles.cardHeaderLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <span className={styles.cardHeaderInfo}>\n                        <IconInfo16 />\n                    </span>\n                    {i18n.t('About job configuration')}\n                </a>\n            </header>\n            <JobAddFormContainer setIsPristine={setIsPristine} />\n        </Card>\n    </React.Fragment>;\n\nconst {\n  bool,\n  func\n} = PropTypes;\nJobAdd.propTypes = {\n  isPristine: bool.isRequired,\n  setIsPristine: func.isRequired\n};\nexport default JobAdd;","import React, { useState } from 'react';\nimport JobAdd from './JobAdd';\n\nconst JobAddContainer = () => {\n  const [isPristine, setIsPristine] = useState(true);\n  return <JobAdd isPristine={isPristine} setIsPristine={setIsPristine} />;\n};\n\nexport default JobAddContainer;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Router } from 'react-router';\nimport { JobListContainer } from '../../pages/JobList';\nimport { JobEditContainer } from '../../pages/JobEdit';\nimport { JobView } from '../../pages/JobView';\nimport { JobAddContainer } from '../../pages/JobAdd';\nimport history from '../../services/history';\n\nconst Routes = () => <Router history={history}>\n        <Route exact path=\"/\" component={JobListContainer} />\n        <Route path=\"/edit/:id\" component={JobEditContainer} />\n        <Route path=\"/view/:id\" component={JobView} />\n        <Route path=\"/add\" component={JobAddContainer} />\n    </Router>;\n\nexport default Routes;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { CircularLoader, Layer, CenteredContent, NoticeBox } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport { getAuthorized } from './selectors';\nimport styles from './AuthWall.module.css';\nconst query = {\n  me: {\n    resource: 'me'\n  }\n};\n\nconst AuthWall = ({\n  children\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useDataQuery(query);\n\n  if (loading) {\n    return <Layer>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (error) {\n    /**\n     * The app can't continue if this fails, because it doesn't\n     * know if the user is authorized, so throw the error.\n     */\n    throw error;\n  }\n\n  const isAuthorized = getAuthorized(data.me);\n\n  if (!isAuthorized) {\n    return <div className={styles.noticeBoxWrapper}>\n                <NoticeBox error title={i18n.t('Not authorized')}>\n                    {i18n.t(\"You don't have access to the Job Scheduler. Contact a system administrator to request access.\")}\n                </NoticeBox>\n            </div>;\n  }\n\n  return <React.Fragment>{children}</React.Fragment>;\n};\n\nconst {\n  node\n} = PropTypes;\nAuthWall.propTypes = {\n  children: node.isRequired\n};\nexport default AuthWall;","export const getAuthorized = me => {\n  const {\n    authorities\n  } = me;\n\n  if (!authorities) {\n    return false;\n  }\n\n  const isAuthorized = authorities.includes('ALL') || authorities.includes('F_SCHEDULING_ADMIN');\n  return isAuthorized;\n};","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport styles from './PageWrapper.module.css';\n\nconst PageWrapper = ({\n  children\n}) => <div className={styles.wrapper}>{children}</div>;\n\nconst {\n  node\n} = PropTypes;\nPageWrapper.propTypes = {\n  children: node.isRequired\n};\nexport default PageWrapper;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport bnTranslations from './bn/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('bn', namespace, bnTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { CssVariables } from '@dhis2/ui';\nimport { Routes } from '../Routes';\nimport { AuthWall } from '../AuthWall';\nimport { Store } from '../Store';\nimport { PageWrapper } from '../PageWrapper';\nimport './App.css'; // eslint-disable-next-line import/no-unassigned-import, import/no-unresolved\n\nimport '../../locales'; // The above is necessary for translations to work\n\nconst App = () => <React.Fragment>\n        <CssVariables spacers colors />\n        <PageWrapper>\n            <AuthWall>\n                <Store>\n                    <Routes />\n                </Store>\n            </AuthWall>\n        </PageWrapper>\n    </React.Fragment>;\n\nexport default App;","export { default } from './App';"],"sourceRoot":""}