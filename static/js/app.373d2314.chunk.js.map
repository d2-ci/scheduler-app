{"version":3,"sources":["D2App/pages/JobList/JobList.module.css","D2App/components/FormErrorBox/FormErrorBox.module.css","D2App/components/FormFields/ParameterFields.module.css","D2App/components/Forms/JobAddForm.module.css","D2App/components/Forms/JobEditForm.module.css","D2App/components/JobDetails/JobDetails.module.css","D2App/pages/JobEdit/JobEdit.module.css","D2App/pages/JobView/JobView.module.css","D2App/pages/JobAdd/JobAdd.module.css","D2App/components/AuthWall/AuthWall.module.css","D2App/components/PageWrapper/PageWrapper.module.css","D2App/components/Store/StoreContext.js","D2App/components/Store/Store.js","D2App/components/Store/hooks.js","D2App/services/history/history.js","D2App/services/history/index.js","D2App/services/server-translations/analyticsTableTypes.js","D2App/services/server-translations/jobTypesMap.js","D2App/services/server-translations/jobStatusMap.js","D2App/components/Switches/ToggleJobSwitch.js","D2App/components/JobTable/EditJobAction.js","D2App/components/JobTable/ViewJobAction.js","D2App/components/Modal/CronPresetModal.js","D2App/components/Modal/DeleteJobModal.js","D2App/components/Modal/DiscardFormModal.js","D2App/components/Modal/RunJobModal.js","D2App/components/JobTable/RunJobAction.js","D2App/components/JobTable/DeleteJobAction.js","D2App/components/JobTable/Actions.js","D2App/components/JobTable/Status.js","D2App/components/JobTable/NextRun.js","D2App/services/validators/validate-cron.js","D2App/services/validators/required-cron.js","D2App/services/translate-cron/translate-cron.js","D2App/services/translate-cron/index.js","D2App/components/JobTable/Schedule.js","D2App/components/JobTable/JobTableRow.js","D2App/components/JobTable/JobTable.js","D2App/pages/JobList/JobList.js","D2App/pages/JobList/JobListContainer.js","D2App/components/Buttons/CronPresetButton.js","D2App/components/Buttons/DeleteJobButton.js","D2App/components/Buttons/DiscardFormButton.js","D2App/services/format-error/format-error.js","D2App/services/format-error/index.js","D2App/hooks/jobs/use-submit-job.js","D2App/hooks/jobs/use-update-job.js","D2App/components/FormErrorBox/FormErrorBox.js","D2App/components/FormFields/JobNameField.js","D2App/components/FormFields/JobTypeField.js","D2App/components/FormFields/formatters.js","D2App/components/FormFields/SkipTableTypesField.js","D2App/components/FormFields/LabeledOptionsField.js","D2App/components/FormFields/ParameterFields.js","D2App/components/FormFields/CronField.js","D2App/components/FormFields/DelayField.js","D2App/components/FormFields/ScheduleField.js","D2App/components/FormFields/index.js","D2App/components/Forms/JobAddForm.js","D2App/components/Forms/JobAddFormContainer.js","D2App/components/Forms/JobEditForm.js","D2App/components/Forms/JobEditFormContainer.js","D2App/components/JobDetails/JobDetails.js","D2App/pages/JobEdit/JobEdit.js","D2App/pages/JobEdit/JobEditContainer.js","D2App/pages/JobView/JobView.js","D2App/pages/JobAdd/JobAdd.js","D2App/pages/JobAdd/JobAddContainer.js","D2App/components/Routes/Routes.js","D2App/components/AuthWall/AuthWall.js","D2App/components/AuthWall/selectors.js","D2App/components/PageWrapper/PageWrapper.js","D2App/locales/index.js","D2App/components/App/App.js"],"names":["module","exports","StoreContext","createContext","jobs","jobTypes","parameterOptions","refetchJobs","Error","jobsQuery","resource","params","fields","paging","jobTypesQuery","optionsQuery","skipTableTypes","validationRuleGroups","pushAnalysis","predictors","predictorGroups","node","PropTypes","Store","children","jobFilterState","useState","showSystemJobsState","jobsFetch","useDataQuery","jobTypesFetch","optionsFetch","loading","React","createElement","Layer","CenteredContent","CircularLoader","error","jobConfigurations","data","Provider","value","refetch","jobFilter","showSystemJobs","useAllJobs","useContext","useAllParameterOptions","useAllJobTypes","useRefetchJobs","useJobFilter","useShowSystemJobs","useJobListJobs","filter","job","name","toLowerCase","includes","configurable","useJob","id","find","useJobType","jobType","useJobTypeParameters","selectedJobType","jobParameters","useParameterOptions","parameter","history","createHashHistory","analyticsTableTypes","DATA_VALUE","i18n","t","COMPLETENESS","COMPLETENESS_TARGET","ORG_UNIT_TARGET","EVENT","ENROLLMENT","VALIDATION_RESULT","jobTypesMap","ANALYTICS_TABLE","CONTINUOUS_ANALYTICS_TABLE","CREDENTIALS_EXPIRY_ALERT","DATA_INTEGRITY","DATA_SET_NOTIFICATION","DATA_STATISTICS","DATA_SYNC","EVENT_PROGRAMS_DATA_SYNC","FILE_RESOURCE_CLEANUP","META_DATA_SYNC","MONITORING","PREDICTOR","PROGRAM_NOTIFICATIONS","PUSH_ANALYSIS","REMOVE_EXPIRED_RESERVED_VALUES","RESOURCE_TABLE","SEND_SCHEDULED_MESSAGE","TRACKER_PROGRAMS_DATA_SYNC","VALIDATION_RESULTS_NOTIFICATION","DISABLE_INACTIVE_USERS","jobStatusMap","COMPLETED","DISABLED","DONE","FAILED","NOT_STARTED","RUNNING","SCHEDULED","STOPPED","mutation","type","partial","enabled","bool","string","ToggleJobSwitch","checked","disabled","toggleJob","useDataMutation","hooks","Switch","concat","onChange","then","EditJobAction","MenuItem","dense","onClick","push","label","ViewJobAction","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","cronPresets","func","CronPresetModal","setCron","hideModal","currentPreset","setCurrentPreset","Modal","open","small","onClose","ModalTitle","ModalContent","map","preset","Radio","ModalActions","ButtonStrip","end","Button","secondary","primary","DeleteJobModal","onSuccess","deleteJob","destructive","DiscardFormModal","RunJobModal","engine","useDataEngine","query","RunJobAction","showModal","setShowModal","Fragment","DeleteJobAction","Actions","DropdownButton","component","FlyoutMenu","defaultProps","Status","status","Tag","neutral","negative","positive","NextRun","nextExecutionTime","now","moment","Date","nextRun","utc","isSameOrBefore","to","propTypes","isRequired","WEEKDAYS","MONTHS","isValidNumber","number","x","y","isWildcard","field","isUndefined","isValidWithinRange","range","boundaries","split","isValidNumberRange","fraction","components","isValidFraction","isValidMonthField","months","firstMonth","secondMonth","m","indexOf","undefined","isAlphabeticMonth","isValidWeekdayField","weekdays","firstDay","secondDay","c","isAlphabeticWeekday","validateCron","exp","trim","isValidFields","isValidMinuteField","isValidHourField","isValidDayField","requiredCron","translateCron","cron","locale","language","cronstrue","toString","Schedule","cronExpression","schedulingType","delay","shape","JobTableRow","displayName","jobStatus","TableRow","TableCell","object","arrayOf","JobTable","Table","TableHead","TableRowHead","TableCellHead","TableBody","JobList","setShowSystemJobs","setJobFilter","className","styles","header","headerTitle","href","headerLink","rel","headerLinkIcon","IconInfo16","Card","controlContainer","Input","dataTest","placeholder","controlRight","Checkbox","JobListContainer","CronPresetButton","DeleteJobButton","DiscardFormButton","shouldConfirm","FORM_ERROR","FinalForm","formatError","details","response","validationErrors","genericErrors","errorReports","forEach","report","errorProperty","message","useSubmitJob","mutate","variables","catch","useUpdateJob","array","FormErrorBox","submitError","NoticeBox","title","list","Field","ReactFinalForm","VALIDATOR","composeValidators","hasValue","JobNameField","InputFieldFF","validate","required","FIELD_NAME","JobTypeField","options","SingleSelectFieldFF","formatToString","SkipTableTypesField","parameterName","MultiSelectField","helpText","translatedOptions","option","MultiSelectFieldFF","LabeledOptionsField","labeledOptions","ParameterFields","parameters","parameterComponents","fieldName","klass","parameterComponent","Box","marginTop","SwitchFieldFF","format","useFormState","useForm","CronField","form","values","subscription","change","integer","createNumberRange","DelayField","lowerbound","upperbound","ScheduleField","fieldNames","JOB_TYPE","JobAddForm","handleSubmit","pristine","submitting","hasSubmitErrors","setIsPristine","subscribe","useEffect","Spinner","onSubmit","maxWidth","formButtonContainer","icon","saveButton","Form","JobAddFormContainer","submitJob","destroyOnUnregister","JobEditForm","deleteButton","initialFields","JobEditFormContainer","useParams","updateJob","initialValues","reduce","filtered","JobDetails","created","lastExecutedStatus","lastExecuted","createdFromNow","from","translatedStatus","lastRunFromNow","wrapper","nsSeparator","JobEdit","isPristine","pageHeader","pageHeaderButton","pageHeaderTitle","card","cardHeader","cardHeaderTitle","cardHeaderLink","cardHeaderInfo","jobDetails","JobEditContainer","JobView","InputField","SingleSelectField","selected","SingleSelectOption","JobAdd","JobAddContainer","Routes","Router","Route","exact","path","me","AuthWall","authorities","getAuthorized","noticeBoxWrapper","PageWrapper","namespace","addResources","arTranslations","ar_IQTranslations","bnTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","App","CssVariables","spacers","colors"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,OAAS,wBAAwB,YAAc,6BAA6B,WAAa,4BAA4B,eAAiB,gCAAgC,iBAAmB,kCAAkC,aAAe,gC,oBCA5PD,EAAOC,QAAU,CAAC,KAAO,6B,oBCAzBD,EAAOC,QAAU,CAAC,YAAc,uC,oBCAhCD,EAAOC,QAAU,CAAC,oBAAsB,wCAAwC,WAAa,iC,oBCA7FD,EAAOC,QAAU,CAAC,oBAAsB,yCAAyC,aAAe,kCAAkC,WAAa,kC,oBCA/ID,EAAOC,QAAU,CAAC,QAAU,4BAA4B,MAAQ,0BAA0B,QAAU,8B,oBCApGD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,iBAAmB,kCAAkC,gBAAkB,iCAAiC,KAAO,sBAAsB,WAAa,4BAA4B,gBAAkB,iCAAiC,eAAiB,gCAAgC,eAAiB,gCAAgC,WAAa,8B,oBCA3YD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,iBAAmB,kCAAkC,gBAAkB,iCAAiC,KAAO,sBAAsB,WAAa,4BAA4B,gBAAkB,iCAAiC,eAAiB,gCAAgC,eAAiB,gCAAgC,WAAa,8B,oBCA3YD,EAAOC,QAAU,CAAC,WAAa,2BAA2B,iBAAmB,iCAAiC,gBAAkB,gCAAgC,KAAO,qBAAqB,WAAa,2BAA2B,gBAAkB,gCAAgC,eAAiB,+BAA+B,eAAiB,iC,oBCAvVD,EAAOC,QAAU,CAAC,iBAAmB,qC,oBCArCD,EAAOC,QAAU,CAAC,QAAU,+B,ommFCQbC,MARMC,wBAAc,CACjCC,KAAM,GACNC,SAAU,GACVC,iBAAkB,GAClBC,YAAa,KACX,MAAM,IAAIC,MAAM,2CCDpB,MAAMC,EAAY,CAChBL,KAAM,CACJM,SAAU,oBACVC,OAAQ,CACNC,OAAQ,IACRC,QAAQ,KAIRC,EAAgB,CACpBT,SAAU,CACRK,SAAU,6BACVC,OAAQ,CACNC,OAAQ,IACRC,QAAQ,KAIRE,EAAe,CAEnBC,eAAgB,CACdN,SAAU,wBAGZO,qBAAsB,CACpBP,SAAU,uBACVC,OAAQ,CACNE,QAAQ,IAIZK,aAAc,CACZR,SAAU,eACVC,OAAQ,CACNE,QAAQ,IAIZM,WAAY,CACVT,SAAU,aACVC,OAAQ,CACNE,QAAQ,IAGZO,gBAAiB,CACfV,SAAU,kBACVC,OAAQ,CACNE,QAAQ,MAsER,KACJQ,GACEC,IAIWC,MAvED,EACZC,eAGA,MAAMC,EAAiBC,mBAAS,IAC1BC,EAAsBD,oBAAS,GAC/BE,EAAYC,YAAapB,GACzBqB,EAAgBD,YAAaf,GAC7BiB,EAAeF,YAAad,GAGlC,GAFgBa,EAAUI,SAAWF,EAAcE,SAAWD,EAAaC,QAGzE,OAAOC,IAAMC,cAAcC,IAAO,KAAMF,IAAMC,cAAcE,IAAiB,KAAMH,IAAMC,cAAcG,IAAgB,QAGzH,MAAMC,EAAQV,EAAUU,OAASR,EAAcQ,OAASP,EAAaO,MAErE,GAAIA,EAKF,MAAMA,EAGR,MACEC,kBAAmBnC,GACjBwB,EAAUY,KAAKpC,MACb,SACJC,GACEyB,EAAcU,KAAKnC,UACjB,eACJW,EACAC,sBAAsB,qBACpBA,GAEFC,cAAc,aACZA,GAEFC,YAAY,WACVA,GAEFC,iBAAiB,gBACfA,IAEAW,EAAaS,KACXlC,EAAmB,CACvBU,iBACAC,uBACAC,eACAC,aACAC,mBAEF,OAAOa,IAAMC,cAAchC,EAAauC,SAAU,CAChDC,MAAO,CACLtC,OACAC,WACAC,mBACAC,YAAaqB,EAAUe,QACvBC,UAAWnB,EACXoB,eAAgBlB,IAEjBH,ICrHE,MAAMsB,EAAa,IACVC,qBAAW7C,GACZE,KAEF4C,EAAyB,IACtBD,qBAAW7C,GACZI,iBAEF2C,EAAiB,IACdF,qBAAW7C,GACZG,SAEF6C,EAAiB,IACdH,qBAAW7C,GACZK,YAQF4C,EAAe,IACZJ,qBAAW7C,GACZ0C,UAEFQ,EAAoB,IACjBL,qBAAW7C,GACZ2C,eASFQ,EAAiB,KAC5B,MAAOT,GAAaO,KACbN,GAAkBO,IASzB,OARaN,IAQDQ,QANWC,GAAOA,EAAIC,KAAKC,cAAcC,SAASd,EAAUa,iBAMrCH,QAHPC,KAC5BV,GAAwBU,EAAII,gBAKjBC,EAASC,GACPf,IACDgB,MAAKP,GAAOA,EAAIM,KAAOA,IAGxBE,EAAaC,GACPf,IACDa,MAAKP,GAAOA,EAAIS,UAAYA,IAGjCC,EAAuBD,IAClC,MAAME,EAAkBH,EAAWC,GAGnC,MAFsB,kBAAmBE,EAMlCA,EAAgBC,cAHd,IAMEC,EAAsBC,GACRrB,IACDqB,G,oBC1EXC,ICDAA,EDACC,cESDC,MATa,CAC1BC,WAAYC,IAAKC,EAAE,cACnBC,aAAcF,IAAKC,EAAE,gBACrBE,oBAAqBH,IAAKC,EAAE,uBAC5BG,gBAAiBJ,IAAKC,EAAE,mBACxBI,MAAOL,IAAKC,EAAE,SACdK,WAAYN,IAAKC,EAAE,cACnBM,kBAAmBP,IAAKC,EAAE,sBCebO,MAtBK,CAClBC,gBAAiBT,IAAKC,EAAE,mBACxBS,2BAA4BV,IAAKC,EAAE,8BACnCU,yBAA0BX,IAAKC,EAAE,4BACjCW,eAAgBZ,IAAKC,EAAE,kBACvBY,sBAAuBb,IAAKC,EAAE,wBAC9Ba,gBAAiBd,IAAKC,EAAE,mBACxBc,UAAWf,IAAKC,EAAE,wBAClBe,yBAA0BhB,IAAKC,EAAE,4BACjCgB,sBAAuBjB,IAAKC,EAAE,0BAC9BiB,eAAgBlB,IAAKC,EAAE,4BACvBkB,WAAYnB,IAAKC,EAAE,cACnBmB,UAAWpB,IAAKC,EAAE,aAClBoB,sBAAuBrB,IAAKC,EAAE,yBAC9BqB,cAAetB,IAAKC,EAAE,iBACtBsB,+BAAgCvB,IAAKC,EAAE,kCACvCuB,eAAgBxB,IAAKC,EAAE,kBACvBwB,uBAAwBzB,IAAKC,EAAE,0BAC/ByB,2BAA4B1B,IAAKC,EAAE,8BACnC0B,gCAAiC3B,IAAKC,EAAE,mCACxC2B,uBAAwB5B,IAAKC,EAAE,2BCVlB4B,MAVM,CACnBC,UAAW9B,IAAKC,EAAE,aAClB8B,SAAU/B,IAAKC,EAAE,YACjB+B,KAAMhC,IAAKC,EAAE,QACbgC,OAAQjC,IAAKC,EAAE,UACfiC,YAAalC,IAAKC,EAAE,eACpBkC,QAASnC,IAAKC,EAAE,WAChBmC,UAAWpC,IAAKC,EAAE,aAClBoC,QAASrC,IAAKC,EAAE,YCFlB,MAAMqC,EAAW,CACftG,SAAU,oBACVmD,GAAI,EACFA,QACIA,EACNoD,KAAM,SACNC,SAAS,EACT1E,KAAM,EACJ2E,cADI,CAGJA,cA2BE,KACJC,EADI,OAEJC,GACE/F,IAMWgG,MAhCS,EACtBzD,KACA0D,UACAC,eAEA,MAAOC,GAAW,QAChBzF,IACG0F,YAAgBV,GACfzG,EAAcoH,EAAMzE,iBACpBiE,GAAWI,EACjB,OAAOtF,IAAMC,cAAc0F,IAAQ,CACjCpE,KAAM,cAAcqE,OAAOhE,GAC3B2D,SAAUA,GAAYxF,EACtBuF,QAASA,EACTO,SAAU,KACRL,EAAU,CACR5D,KACAsD,YACCY,MAAK,IAAMxH,UCjCpB,MASE8G,OADI,GAEF/F,IAIW0G,MAdO,EACpBnE,QACI5B,IAAMC,cAAc+F,IAAU,CAClCC,OAAO,EACPC,QAAS,IAAM7D,EAAQ8D,KAAK,SAASP,OAAOhE,IAC5CwE,MAAO3D,IAAKC,EAAE,UCLhB,MASE0C,OADI,GAEF/F,IAIWgH,MAdO,EACpBzE,QACI5B,IAAMC,cAAc+F,IAAU,CAClCC,OAAO,EACPC,QAAS,IAAM7D,EAAQ8D,KAAK,SAASP,OAAOhE,IAC5CwE,MAAO3D,IAAKC,EAAE,UCXhB,SAAS4D,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAMhT,MAAMS,EAAc,CAAC,CACnBhB,MAAO3D,IAAKC,EAAE,cACdjC,MAAO,eACN,CACD2F,MAAO3D,IAAKC,EAAE,yBACdjC,MAAO,eACN,CACD2F,MAAO3D,IAAKC,EAAE,qBACdjC,MAAO,eACN,CACD2F,MAAO3D,IAAKC,EAAE,qBACdjC,MAAO,sBACN,CACD2F,MAAO3D,IAAKC,EAAE,cACdjC,MAAO,mBAmCH,KACJ4G,GACEhI,IAKWiI,MAvCS,EACtBC,UACAC,gBAEA,MAAOC,EAAeC,GAAoBjI,mBAAS,IACnD,OAAOO,IAAMC,cAAc0H,IAAO,CAChCC,MAAM,EACNC,OAAO,EACPC,QAASN,GACRxH,IAAMC,cAAc8H,IAAY,KAAMtF,IAAKC,EAAE,kCAAmC1C,IAAMC,cAAc+H,IAAc,KAAMZ,EAAYa,KAAIC,GAAUlI,IAAMC,cAAckI,IAAO7B,EAAS,GAAI4B,EAAQ,CACnM5C,QAASmC,IAAkBS,EAAOzH,MAClCqG,IAAKoB,EAAOzH,MACZoF,SAAU,EACRpF,WACIiH,EAAiBjH,SAClBT,IAAMC,cAAcmI,IAAc,KAAMpI,IAAMC,cAAcoI,IAAa,CAC9EC,KAAK,GACJtI,IAAMC,cAAcsI,IAAQ,CAC7BC,WAAW,EACXtC,QAASsB,EACTjG,KAAM,cACLkB,IAAKC,EAAE,WAAY1C,IAAMC,cAAcsI,IAAQ,CAChDE,SAAS,EACTlH,KAAM,gBACNgE,UAAWkC,EACXvB,QAAS,KACPsB,IACAD,EAAQE,KAEThF,IAAKC,EAAE,sBC/CZ,MAAMqC,EAAW,CACftG,SAAU,oBACVmD,GAEA,EACEA,QACIA,EACNoD,KAAM,WAkCNqC,KADI,EAEJjC,OAFI,GAGF/F,IAMWqJ,MAvCQ,EACrB9G,KACA4F,YACAmB,gBAEA,MAAOC,GAAanD,YAAgBV,GACpC,OAAO/E,IAAMC,cAAc0H,IAAO,CAChCC,MAAM,EACNC,OAAO,EACPC,QAASN,GACRxH,IAAMC,cAAc+H,IAAc,KAAMvF,IAAKC,EAAE,8CAA+C1C,IAAMC,cAAcmI,IAAc,KAAMpI,IAAMC,cAAcoI,IAAa,CACxKC,KAAK,GACJtI,IAAMC,cAAcsI,IAAQ,CAC7BhH,KAAM,aACNiH,WAAW,EACXtC,QAASsB,GACR/E,IAAKC,EAAE,WAAY1C,IAAMC,cAAcsI,IAAQ,CAChDhH,KAAM,cAAcqE,OAAOhE,GAC3BiH,aAAa,EACb3C,QAAS,KACP0C,EAAU,CACRhH,OACCkE,MAAK,KACN0B,IACAmB,SAGHlG,IAAKC,EAAE,eCpCZ,MAsBE2E,KADI,GAEFhI,IAIWyJ,MA3BU,EACvBtB,eACIxH,IAAMC,cAAc0H,IAAO,CAC/BC,MAAM,EACNC,OAAO,EACPC,QAASN,GACRxH,IAAMC,cAAc+H,IAAc,KAAMvF,IAAKC,EAAE,gDAAiD1C,IAAMC,cAAcmI,IAAc,KAAMpI,IAAMC,cAAcoI,IAAa,CAC1KC,KAAK,GACJtI,IAAMC,cAAcsI,IAAQ,CAC7BhH,KAAM,sBACNiH,WAAW,EACXtC,QAASsB,GACR/E,IAAKC,EAAE,WAAY1C,IAAMC,cAAcsI,IAAQ,CAChDhH,KAAM,eACNsH,aAAa,EACb3C,QAAS,KACPsB,IACAnF,EAAQ8D,KAAK,OAEd1D,IAAKC,EAAE,eClBV,MAqCE2E,KADI,EAEJjC,OAFI,GAGF/F,IAKW0J,OA5CK,EAClBnH,KACA4F,gBAEA,MAAMwB,EAASC,cACTC,EAAQ,CACZ/K,KAAM,CACJM,SAAU,qBAAqBmH,OAAOhE,EAAI,cAMxCtD,EAAcoH,EAAMzE,iBAC1B,OAAOjB,IAAMC,cAAc0H,IAAO,CAChCC,MAAM,EACNC,OAAO,EACPC,QAASN,GACRxH,IAAMC,cAAc+H,IAAc,KAAMvF,IAAKC,EAAE,2CAA4C1C,IAAMC,cAAcmI,IAAc,KAAMpI,IAAMC,cAAcoI,IAAa,CACrKC,KAAK,GACJtI,IAAMC,cAAcsI,IAAQ,CAC7BhH,KAAM,aACNiH,WAAW,EACXtC,QAASsB,GACR/E,IAAKC,EAAE,WAAY1C,IAAMC,cAAcsI,IAAQ,CAChDhH,KAAM,WAAWqE,OAAOhE,GACxB6G,SAAS,EACTvC,QAAS,KAhBU8C,EAAOE,MAAMA,GAiBrBpD,MAAK,KACZ0B,IACAlJ,SAGHmE,IAAKC,EAAE,YCjCZ,MAuBE0C,OADI,IAEF/F,IAIW8J,OA5BM,EACnBvH,SAEA,MAAM,QACJsD,GACEQ,EAAM/D,OAAOC,IACVwH,EAAWC,GAAgB5J,oBAAS,GAC3C,OAAOO,IAAMC,cAAcD,IAAMsJ,SAAU,KAAMtJ,IAAMC,cAAc+F,IAAU,CAC7EC,OAAO,EACPC,QAAS,KACPmD,GAAa,IAEf9D,UAAWL,EACXkB,MAAO3D,IAAKC,EAAE,kBACZ0G,GAAapJ,IAAMC,cAAc8I,GAAa,CAChDnH,GAAIA,EACJ4F,UAEA,IAAM6B,GAAa,OClBvB,MAsBEjE,OADI,IAEF/F,IAIWkK,OA3BS,EACtB3H,SAEA,MAAOwH,EAAWC,GAAgB5J,oBAAS,GACrCnB,EAAcoH,EAAMzE,iBAC1B,OAAOjB,IAAMC,cAAcD,IAAMsJ,SAAU,KAAMtJ,IAAMC,cAAc+F,IAAU,CAC7EC,OAAO,EACP4C,aAAa,EACb3C,QAAS,KACPmD,GAAa,IAEfjD,MAAO3D,IAAKC,EAAE,YACZ0G,GAAapJ,IAAMC,cAAcyI,EAAgB,CACnD9G,GAAIA,EACJ4F,UAEA,IAAM6B,GAAa,GACnBV,UAAWrK,MCff,MAAMkL,GAAU,EACd5H,KACAF,kBACI1B,IAAMC,cAAcwJ,IAAgB,CACxC5B,OAAO,EACP6B,UAAW1J,IAAMC,cAAc0J,IAAY,KAAMjI,EAAe1B,IAAMC,cAAc8F,EAAe,CACjGnE,GAAIA,IACD5B,IAAMC,cAAcoG,EAAe,CACtCzE,GAAIA,IACFF,GAAgB1B,IAAMC,cAAckJ,GAAc,CACpDvH,GAAIA,IACFF,GAAgB1B,IAAMC,cAAcsJ,GAAiB,CACvD3H,GAAIA,MAELa,IAAKC,EAAE,YAEV8G,GAAQI,aAAe,CACrBlI,cAAc,GAEhB,MACE0D,OADI,GAEJD,KAFI,IAGF9F,IAKWmK,UC/Bf,MAgCEpE,OADI,IAEF/F,IAIWwK,OArCA,EACbC,aAEA,OAAQA,GACN,IAAK,UACL,IAAK,WACH,OAAO9J,IAAMC,cAAc8J,IAAK,KAAMzF,EAAawF,IAErD,IAAK,UACL,IAAK,cACL,IAAK,YACH,OAAO9J,IAAMC,cAAc8J,IAAK,CAC9BC,SAAS,GACR1F,EAAawF,IAElB,IAAK,SACH,OAAO9J,IAAMC,cAAc8J,IAAK,CAC9BE,UAAU,GACT3F,EAAawF,IAElB,IAAK,OACH,OAAO9J,IAAMC,cAAc8J,IAAK,CAC9BG,UAAU,GACT5F,EAAawF,IAGlB,QACE,OAAO,O,oBC5Bb,MAAMK,GAAU,EACdC,oBACAlF,cAEA,IAAKA,IAAYkF,EACf,MAAO,IAGT,MAAMC,EAAMC,KAAOC,KAAKF,OAQlBG,EAAUF,KAAOG,IAAIL,GAO3B,OANwBI,EAAQE,eAAeL,EAAK,UAO3C5H,IAAKC,EAAE,iBAGT2H,EAAIM,GAAGH,KAIdrF,KADI,GAEJC,OAFI,IAGF/F,IACJ8K,GAAQS,UAAY,CAClB1F,QAASC,GAAK0F,WACdT,kBAAmBhF,IAEN+E,U,qBC1Cf,MAAMW,GAAW,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtDC,GAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAIvFC,GAAgB,CAACC,EAAQC,EAAGC,IAAMF,GAAUC,GAAKD,GAAUE,EAE3DC,GAAaC,GAAmB,MAAVA,EAEtBC,GAAcD,GAAmB,MAAVA,EA8BvBE,GAAqB,CAACF,EAAOH,EAAGC,IAAMC,GAAWC,IAAUL,GAAcK,EAAOH,EAAGC,IA5B9D,EAACK,EAAON,EAAGC,KACpC,MAAMM,EAAaD,EAAME,MAAM,KAC/B,SAAKD,GAAoC,IAAtBA,EAAW7E,SACvBoE,GAAcS,EAAW,GAAIP,EAAGC,IAAMH,GAAcS,EAAW,GAAIP,EAAGC,IAAMM,EAAW,IAAMA,EAAW,IAyBlBE,CAAmBN,EAAOH,EAAGC,IAtBpG,EAACS,EAAUV,EAAGC,KACpC,MAAMU,EAAaD,EAASF,MAAM,KAClC,SAAKG,GAAoC,IAAtBA,EAAWjF,UAGtBwE,GAAWS,EAAW,KAAOb,GAAca,EAAW,GAAIX,EAAGC,KAAOH,GAAca,EAAW,GAAIX,EAAGC,IAiBoBW,CAAgBT,EAAOH,EAAGC,GAUtJY,GAAoBV,GAASE,GAAmBF,EAAO,EAAG,KAlBtCA,KACxB,MAAMW,EAASX,EAAMK,MAAM,MACpBO,EAAYC,GAAeF,EAAO/D,KAAIkE,GAAKpB,GAAOqB,QAAQD,KAGjE,OAAuB,IAAhBF,QAAqCI,IAAhBH,IAA6C,IAAhBD,IAAsC,IAAjBC,GAAsBD,GAAcC,GAa7CI,CAAkBjB,GAEnFkB,GAAsBlB,GAASE,GAAmBF,EAAO,EAAG,IA1BtCA,KAC1B,MAAMmB,EAAWnB,EAAMK,MAAM,MACtBe,EAAUC,GAAaF,EAASvE,KAAI0E,GAAK7B,GAASsB,QAAQO,KACjE,OAAqB,IAAdF,QAAiCJ,IAAdK,IAAyC,IAAdD,IAAkC,IAAfC,GAAoBD,GAAYC,GAuBlCE,CAAoBvB,IAAUC,GAAYD,GAuBnGwB,OAdMC,IACnB,IAAKA,EACH,OAAO,EAGT,MAAMnO,EAASmO,EAAIC,OAAOrB,MAAM,KAEhC,QAhEoB/M,IAAUA,GAA4B,IAAlBA,EAAOiI,OAgE1CoG,CAAcrO,KA1BM0M,EA8BC1M,EAAO,GA9BC4M,GAAmBF,EAAO,EAAG,KAEtCA,IAASE,GAAmBF,EAAO,EAAG,IA4BvB4B,CAAmBtO,EAAO,KA1B3C0M,IAASE,GAAmBF,EAAO,EAAG,IA0BY6B,CAAiBvO,EAAO,KAxB3E0M,IAASE,GAAmBF,EAAO,EAAG,KAAOC,GAAYD,GAwByB8B,CAAgBxO,EAAO,KAAOoN,GAAkBpN,EAAO,KAAO4N,GAAoB5N,EAAO,KA9BxK0M,OCvBZ+B,OAfM3M,GACe,kBAAVA,GACKA,EAAMmG,OAAS,EAMvCiG,GAAapM,QAAlB,EACSgC,IAAKC,EAAE,wCAJPD,IAAKC,EAAE,iCCUH2K,ICjBAA,GDIOC,IACpB,MAAMC,EAAS9K,IAAK+K,UAHL,KAMf,OAFgBF,GAAQT,GAAaS,GAM9BG,KAAUC,SAASJ,EAAM,CAC9BC,WAJO,IENX,MAAMI,GAAW,EACfC,iBACAC,iBACAC,YAEA,OAAQD,GACN,IAAK,OACH,OAAOR,GAAcO,GAEvB,IAAK,cACH,OAAOnL,IAAKC,EAAE,qCAAsC,CAClDoL,UAGJ,QAEE,MAAO,OAKX1I,OADI,UAEJ6F,IACE5L,IACJsO,GAAS/C,UAAY,CACnBiD,eAAgBzI,GAAOyF,WACvB+C,eAAgBxI,GAChB0I,MAAO7C,IAEM0C,UCvBf,MA+BM,MACJI,GACA3I,OAFI,GAGJD,KAHI,GAIJ8F,OAJI,IAKF5L,IAcW2O,OAlDK,EAClB1M,KACEM,KACAqM,cACAlM,UACA6L,iBACAE,QACAI,YACA9D,oBACAyD,iBACA3I,UACAxD,mBAEE1B,IAAMC,cAAckO,IAAU,KAAMnO,IAAMC,cAAcmO,IAAW,KAAMH,GAAcjO,IAAMC,cAAcmO,IAAW,KAAMnL,EAAYlB,IAAW/B,IAAMC,cAAcmO,IAAW,KAAMpO,IAAMC,cAAc0N,GAAU,CAC1NC,eAAgBA,EAChBE,MAAOA,EACPD,eAAgBA,KACb7N,IAAMC,cAAcmO,IAAW,KAAMpO,IAAMC,cAAckK,GAAS,CACrEC,kBAAmBA,EACnBlF,QAASA,KACNlF,IAAMC,cAAcmO,IAAW,KAAMpO,IAAMC,cAAc4J,GAAQ,CACpEC,OAAQoE,KACLlO,IAAMC,cAAcmO,IAAW,KAAMpO,IAAMC,cAAcoF,EAAiB,CAC7EzD,GAAIA,EACJ0D,QAASJ,EACTK,UAAW7D,KACR1B,IAAMC,cAAcmO,IAAW,KAAMpO,IAAMC,cAAcuJ,GAAS,CACrE5H,GAAIA,EACJF,aAAcA,MChChB,MAOM,OACJ2M,GADI,QAEJC,IACEjP,IAIWkP,OAdE,EACfpQ,UACI6B,IAAMC,cAAcuO,IAAO,KAAMxO,IAAMC,cAAcwO,IAAW,KAAMzO,IAAMC,cAAcyO,IAAc,KAAM1O,IAAMC,cAAc0O,IAAe,KAAMlM,IAAKC,EAAE,aAAc1C,IAAMC,cAAc0O,IAAe,KAAMlM,IAAKC,EAAE,SAAU1C,IAAMC,cAAc0O,IAAe,KAAMlM,IAAKC,EAAE,aAAc1C,IAAMC,cAAc0O,IAAe,KAAMlM,IAAKC,EAAE,aAAc1C,IAAMC,cAAc0O,IAAe,KAAMlM,IAAKC,EAAE,WAAY1C,IAAMC,cAAc0O,IAAe,KAAMlM,IAAKC,EAAE,WAAY1C,IAAMC,cAAc0O,IAAe,QAAS3O,IAAMC,cAAc2O,IAAW,KAAsB,IAAhBzQ,EAAKyI,OAAe5G,IAAMC,cAAckO,IAAU,KAAMnO,IAAMC,cAAcmO,IAAW,KAAM3L,IAAKC,EAAE,wBAA0BvE,EAAK8J,KAAI3G,GAAOtB,IAAMC,cAAc+N,GAAa,CAC9tBlH,IAAKxF,EAAIM,GACTN,IAAKA,Q,qBCHP,MAqDE6D,KADI,GAEJkJ,OAFI,GAGJjJ,OAHI,GAIJkJ,QAJI,GAKJjH,KALI,IAMFhI,IAQWwP,OAhEC,EACd1Q,OACAyC,iBACAkO,oBACAnO,YACAoO,kBAEO/O,IAAMC,cAAcD,IAAMsJ,SAAU,KAAMtJ,IAAMC,cAAc,SAAU,CAC7E+O,UAAWC,KAAOC,QACjBlP,IAAMC,cAAc,KAAM,CAC3B+O,UAAWC,KAAOE,aACjB1M,IAAKC,EAAE,mBAAoB1C,IAAMC,cAAc,IAAK,CACrDmP,KAda,yGAebJ,UAAWC,KAAOI,WAClB5I,OAAQ,SACR6I,IAAK,uBACJtP,IAAMC,cAAc,OAAQ,CAC7B+O,UAAWC,KAAOM,gBACjBvP,IAAMC,cAAcuP,IAAY,OAAQ/M,IAAKC,EAAE,6BAA8B1C,IAAMC,cAAcwP,IAAM,KAAMzP,IAAMC,cAAc,MAAO,CACzI+O,UAAWC,KAAOS,kBACjB1P,IAAMC,cAAc0P,IAAO,CAC5BC,SAAU,mBACVC,YAAapN,IAAKC,EAAE,eACpBmD,SAAU,EACRpF,YAEAsO,EAAatO,IAEfA,MAAOE,IACLX,IAAMC,cAAc,MAAO,CAC7B+O,UAAWC,KAAOa,cACjB9P,IAAMC,cAAc8P,IAAU,CAC/BH,SAAU,sBACVtK,QAAS1E,EACTwF,MAAO3D,IAAKC,EAAE,+BACdmD,SAAU,EACRP,cAEAwJ,EAAkBxJ,MAElBtF,IAAMC,cAAcsI,IAAQ,CAC9BqH,SAAU,iBACV1J,QAAS,KACP7D,EAAQ8D,KAAK,UAEd1D,IAAKC,EAAE,cAAe1C,IAAMC,cAAcsO,GAAU,CACrDpQ,KAAMA,MCtCK6R,OAbU,KACvB,MAAOrP,EAAWoO,GAAgBrJ,EAAMxE,gBACjCN,EAAgBkO,GAAqBpJ,EAAMvE,oBAC5ChD,EAAOuH,EAAMtE,iBACnB,OAAOpB,IAAMC,cAAc4O,GAAS,CAClC1Q,KAAMA,EACNyC,eAAgBA,EAChBkO,kBAAmBA,EACnBnO,UAAWA,EACXoO,aAAcA,KCPlB,MAAMkB,GAAmB,EACvB1I,UACAM,YAEA,MAAOuB,EAAWC,GAAgB5J,oBAAS,GAC3C,OAAOO,IAAMC,cAAcD,IAAMsJ,SAAU,KAAMtJ,IAAMC,cAAcsI,IAAQ,CAC3ErC,QAAS,IAAMmD,GAAa,GAC5BxB,MAAOA,GACNpF,IAAKC,EAAE,6BAA8B0G,GAAapJ,IAAMC,cAAcqH,EAAiB,CACxFE,UAEA,IAAM6B,GAAa,GACnB9B,QAASA,MAIb0I,GAAiBrG,aAAe,CAC9B/B,OAAO,GAET,MACER,KADI,GAEJlC,KAFI,IAGF9F,IAKW4Q,UC3Bf,MAkBE7K,OADI,GAEJiC,KAFI,IAGFhI,IAKW6Q,OAzBS,EACtBtO,KACA+G,gBAEA,MAAOS,EAAWC,GAAgB5J,oBAAS,GAC3C,OAAOO,IAAMC,cAAcD,IAAMsJ,SAAU,KAAMtJ,IAAMC,cAAcsI,IAAQ,CAC3EM,aAAa,EACb3C,QAAS,IAAMmD,GAAa,IAC3B5G,IAAKC,EAAE,eAAgB0G,GAAapJ,IAAMC,cAAcyI,EAAgB,CACzE9G,GAAIA,EACJ4F,UAEA,IAAM6B,GAAa,GACnBV,UAAWA,MCbf,MAAMwH,GAAoB,EACxBC,gBACA7Q,WACAsI,QACAmH,gBAEA,MAAO5F,EAAWC,GAAgB5J,oBAAS,GACrCyG,EAAUkK,EAAgB,IAAM/G,GAAa,GAAQ,IAAMhH,EAAQ8D,KAAK,KAC9E,OAAOnG,IAAMC,cAAcD,IAAMsJ,SAAU,KAAMtJ,IAAMC,cAAcsI,IAAQ,CAC3ErC,QAASA,EACT2B,MAAOA,EACPmH,UAAWA,GACVzP,GAAW6J,GAAapJ,IAAMC,cAAc6I,EAAkB,CAC/DtB,UAEA,IAAM6B,GAAa,OAIvB8G,GAAkBvG,aAAe,CAC/BoF,UAAW,GACXoB,eAAe,EACfvI,OAAO,GAET,MACEzC,OADI,GAEJD,KAFI,IAGF9F,IAOW8Q,UCvCf,MAAM,WACJE,IACEC,IA2CWC,IC7CAA,GDOKlQ,IAClB,MACEmQ,SAAS,SACPC,IAEApQ,EACEqQ,EAAmB,GAMnBC,EAAgB,GAuBtB,OArBIF,EAASG,cAAgBH,EAASG,aAAahK,QACjD6J,EAASG,aAAaC,SAAQC,IAQxBA,EAAOC,cACTL,EAAiBI,EAAOC,eAAiBD,EAAOE,QAEhDL,EAAcxK,KAAK2K,EAAOE,YAK5BL,EAAc/J,OAAS,IACzB8J,EAAiBL,IAAcM,GAG1BD,GEtCT,MAAM3L,GAAW,CACftG,SAAU,oBACVuG,KAAM,SACNzE,KAEA,EACEe,SACIA,GA8BO2P,OA3BM,KACnB,MAAM,YACJ3S,GACEwC,qBAAW7C,GACT+K,EAASC,cAoBf,MAAO,CAlBW3H,GAAO0H,EAAOkI,OAAOnM,GAAU,CAC/CoM,UAAW,CACT7P,SAEDwE,MAAK,KACNzD,EAAQ8D,KAAK,KACb7H,OACC8S,OAAM/Q,IAGP,GAFyC,WAAfA,EAAM2E,KAG9B,OAAOuL,GAAYlQ,GAIrB,MAAMA,OC/BV,MAAM0E,GAAW,CACftG,SAAU,oBACVuG,KAAM,SACNpD,GAEA,EACEA,QACIA,EACNrB,KAEA,EACEe,SACIA,GAiCO+P,OA9BM,EACnBzP,SAEA,MAAM,YACJtD,GACEwC,qBAAW7C,GACT+K,EAASC,cAqBf,MAAO,CAnBW3H,GAAO0H,EAAOkI,OAAOnM,GAAU,CAC/CoM,UAAW,CACT7P,MACAM,QAEDkE,MAAK,KACNzD,EAAQ8D,KAAK,KACb7H,OACC8S,OAAM/Q,IAGP,GAFyC,WAAfA,EAAM2E,KAG9B,OAAOuL,GAAYlQ,GAIrB,MAAMA,O,qBCtCV,MAmBM,MACJiR,IACEjS,IAIWkS,OAzBM,EACnBC,iBAE+BA,EAAY5K,OAAS,EAM7C5G,IAAMC,cAAcwR,IAAW,CACpCpR,OAAO,EACPqR,MAAOjP,IAAKC,EAAE,kDACb1C,IAAMC,cAAc,KAAM,CAC3B+O,UAAWC,KAAO0C,MACjBH,EAAYvJ,KAAI5H,GAASL,IAAMC,cAAc,KAAM,CACpD6G,IAAKzG,GACJA,OAVM,KCTX,MAAM,MACJuR,IACEC,IAGEC,GAAYC,YAAkB3M,IAAQ4M,KAW7BC,OATM,IAAMjS,IAAMC,cAAc2R,GAAO,CACpDrQ,KAJiB,OAKjBmI,UAAWwI,IACXC,SAAUL,GACV1L,MAAO3D,IAAKC,EAAE,QACdsC,KAAM,OACNoN,UAAU,ICXZ,MACER,MADI,IAEFC,IAESQ,GAAa,UACpBP,GAAYC,YAAkB3M,IAAQ4M,KAoB7BM,OAlBM,KACnB,MACMC,EADW7M,EAAM1E,iBACEiH,KAAI,EAC3BlG,cAD2B,CAG3BtB,MAAOsB,EACPqE,MAAOnD,EAAYlB,OAErB,OAAO/B,IAAMC,cAAc2R,GAAO,CAChCrQ,KAAM8Q,GACNF,SAAUL,GACVpI,UAAW8I,IACXD,QAASA,EACTnM,MAAO3D,IAAKC,EAAE,YACd0P,UAAU,KCtBP,MAAMK,GAAiBhS,GACP,kBAAVA,EACFA,EAAMiN,WAGRjN,GCFPmR,MADI,IAEFC,KA8BFzM,OADI,IAEF/F,IAMWqT,OAnCa,EAC1BtM,QACA7E,OACAoR,oBAEA,MAAMJ,EAAU7M,EAAMvD,oBAAoBwQ,GAE1C,GAAuB,IAAnBJ,EAAQ3L,OACV,OAAO5G,IAAMC,cAAc2S,IAAkB,CAC3CrN,UAAU,EACVsN,SAAUpQ,IAAKC,EAAE,wBACjB0D,MAAOA,IAIX,MAAM0M,EAAoBP,EAAQtK,KAAI8K,IAAM,CAC1CtS,MAAOsS,EACP3M,MAAO7D,EAAoBwQ,IAAWA,MAExC,OAAO/S,IAAMC,cAAc2R,GAAO,CAChCrQ,KAAMA,EACNmI,UAAWsJ,IACXT,QAASO,EACT1M,MAAOA,KC5BX,MACEwL,MADI,IAEFC,KAiCFzM,OADI,IAEF/F,IAMW4T,OAtCa,EAC1B7M,QACA7E,OACAoR,oBAEA,MAAMJ,EAAU7M,EAAMvD,oBAAoBwQ,GAE1C,GAAuB,IAAnBJ,EAAQ3L,OACV,OAAO5G,IAAMC,cAAc2S,IAAkB,CAC3CrN,UAAU,EACVsN,SAAUpQ,IAAKC,EAAE,wBACjB0D,MAAOA,IAIX,MAAM8M,EAAiBX,EAAQtK,KAAI,EACjCrG,KACAqM,kBAFiC,CAIjCxN,MAAOmB,EACPwE,MAAO6H,MAET,OAAOjO,IAAMC,cAAc2R,GAAO,CAChCrQ,KAAMA,EACNmI,UAAWsJ,IACXT,QAASW,EACT9M,MAAOA,K,qBCnCX,SAASE,KAA2Q,OAA9PA,GAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAWhT,MACEiL,MADI,IAEFC,KA6EFzM,OADI,IAEF/F,IAIW8T,OA9ES,EACtBpR,cAEA,MAAMqR,EAAa1N,EAAM1D,qBAAqBD,GAE9C,GAA0B,IAAtBqR,EAAWxM,OACb,OAAO,KAIT,MAAMyM,EAAsBD,EAAWnL,KAAI,EACzCqL,YACA/R,OACAgS,YAEA,MAAM3J,EAAe,CACnBxD,MAAOkN,EACP/R,KAAM,GAAGqE,OAnBI,gBAmBe,KAAKA,OAAOrE,IAE1C,IAAIiS,EAAqB,KAEzB,GAAa,mBAATjS,EACF,OAAOvB,IAAMC,cAAcwT,IAAK,CAC9BC,UAAW,OACX5M,IAAKvF,GACJvB,IAAMC,cAAcyS,GAAqBpM,GAAS,GAAIsD,EAAc,CACrE+I,cAAepR,MAKnB,OAAQgS,GACN,IAAK,mBACHC,EAAqBxT,IAAMC,cAAc2R,GAAOtL,GAAS,GAAIsD,EAAc,CACzEF,UAAWwI,IACXlN,KAAM,UAER,MAEF,IAAK,oBACHwO,EAAqBxT,IAAMC,cAAc2R,GAAOtL,GAAS,GAAIsD,EAAc,CACzEF,UAAWiK,IACX3O,KAAM,cAER,MAEF,IAAK,oBACHwO,EAAqBxT,IAAMC,cAAc2R,GAAOtL,GAAS,GAAIsD,EAAc,CACzEF,UAAWwI,IACX0B,OAAQnB,GACRzN,KAAM,YAER,MAEF,IAAK,iBACHwO,EAAqBxT,IAAMC,cAAcgT,GAAqB3M,GAAS,GAAIsD,EAAc,CACvF+I,cAAepR,KAMrB,OAAOvB,IAAMC,cAAcwT,IAAK,CAC9BC,UAAW,OACX5M,IAAKvF,GACJiS,MAEL,OAAOxT,IAAMC,cAAcD,IAAMsJ,SAAU,KAAMtJ,IAAMC,cAAc,SAAU,KAAMD,IAAMC,cAAc,KAAM,CAC7G+O,UAAWC,KAAOE,aACjB1M,IAAKC,EAAE,gBAAiB2Q,IChF7B,MACEzB,MADI,gBAEJiC,GAFI,QAGJC,IACEjC,IAEEQ,GAAa,iBACbP,GAAY1E,GA+BH2G,OA7BG,KAChB,MAAMC,EAAOF,MACP,OACJG,GACEJ,GAAa,CACfK,aAAc,CACZD,QAAQ,KAGNrG,EAAiBqG,EAAM,eACvBpB,EAAWxF,GAAcO,GAC/B,OAAO5N,IAAMC,cAAcD,IAAMsJ,SAAU,KAAMtJ,IAAMC,cAAc2R,GAAO,CAC1ElI,UAAWwI,IACX3Q,KAAM8Q,GACNF,SAAUL,GACV1L,MAAO3D,IAAKC,EAAE,mBACdsC,KAAM,OACN6N,SAAUA,EACVT,UAAU,IACRpS,IAAMC,cAAcwT,IAAK,CAC3BC,UAAW,OACV1T,IAAMC,cAAcgQ,GAAkB,CACvC1I,QAEA+F,GAAQ0G,EAAKG,OAAO9B,GAAY/E,GAChCzF,OAAO,OCpCX,MACE+J,MADI,IAEFC,IAMEC,GAAYC,YAAkBqC,IAASpC,IAAUqC,YAJpC,EACA,QAmBJC,OAdI,IAAMtU,IAAMC,cAAc2R,GAAO,CAClDlI,UAAWwI,IACX3Q,KALiB,QAMjB4Q,SAAUL,GACV1L,MAAO3D,IAAKC,EAAE,SACdsC,KAAM,SACN4O,OAAQnB,GACRI,SAAUpQ,IAAKC,EAAE,yDAA0D,CACzE6R,WAde,EAefC,WAde,QAgBjBpC,UAAU,ICnBZ,MAoBEhN,OADI,IAEF/F,IAIWoV,OAzBO,EACpB1S,cAKA,OAHuB2D,EAAM5D,WAAWC,GACF8L,gBAGpC,IAAK,OACH,OAAO7N,IAAMC,cAAc8T,GAAW,MAExC,IAAK,cACH,OAAO/T,IAAMC,cAAcqU,GAAY,MAEzC,QAEE,OAAO,OCjBb,MAAMI,GACJC,G,yBCGF,MACEb,QADI,IAEFjC,IAEE+C,GAAa,EACjBC,eACAC,WACAC,aACAvD,cACAwD,kBACAf,SACAgB,oBAEA,MAAM,UACJC,GACEpB,KAMJqB,qBAAU,IAMVD,GAAU,EACRJ,cACIG,EAAcH,IAAW,CAC7BA,UAAU,MAGZ,MAAM/S,EAAUkS,EAAOS,IAEjBU,EAAUL,EAAa/U,IAAMC,cAAcG,IAAgB,CAC/DyH,OAAO,IACJ,KACL,OAAO7H,IAAMC,cAAc,OAAQ,CACjCoV,SAAUR,GACT7U,IAAMC,cAAcwT,IAAK,CAC1B6B,SAAU,SACTtV,IAAMC,cAAcgS,GAAc,OAAQjS,IAAMC,cAAcwT,IAAK,CACpEC,UAAW,OACX4B,SAAU,SACTtV,IAAMC,cAAcqS,GAAc,OAAQvQ,GAAW/B,IAAMC,cAAcwT,IAAK,CAC/EC,UAAW,OACX4B,SAAU,SACTtV,IAAMC,cAAcwU,GAAe,CACpC1S,QAASA,KACNA,GAAW/B,IAAMC,cAAcwT,IAAK,CACvCC,UAAW,OACX4B,SAAU,SACTtV,IAAMC,cAAckT,GAAiB,CACtCpR,QAASA,KACNiT,GAAmBhV,IAAMC,cAAcwT,IAAK,CAC/CC,UAAW,OACX4B,SAAU,SACTtV,IAAMC,cAAcsR,GAAc,CACnCC,YAAaA,KACVxR,IAAMC,cAAc,MAAO,CAC9B+O,UAAWC,KAAOsG,qBACjBvV,IAAMC,cAAcsI,IAAQ,CAC7BE,SAAS,EACTzD,KAAM,SACNO,SAAUuP,GAAYC,EACtBS,KAAMJ,EACNpG,UAAWC,KAAOwG,YACjBhT,IAAKC,EAAE,SAAU1C,IAAMC,cAAckQ,GAAmB,CACzDC,eAAgB0E,GACfrS,IAAKC,EAAE,eAIV2E,KADI,GAEJlC,KAFI,GAGJkJ,OAHI,GAIJiD,MAJI,IAKFjS,IACJuV,GAAWhL,aAAe,CACxB4H,YAAa,IAWAoD,UC9Ff,MAAM,KACJc,IACE7D,KAoBFxK,KADI,IAEFhI,IAIWsW,OAvBa,EAC1BV,oBAEA,MAAOW,GAAa3E,KAMpB,OAAOjR,IAAMC,cAAcyV,GAAM,CAC/BL,SAAUO,EACVlM,UAAWkL,GACXK,cAAeA,EACfY,qBAAqB,K,qBCbzB,MACE/B,QADI,IAEFjC,IAEEiE,GAAc,EAClBlU,KACAtD,cACAuW,eACAC,WACAC,aACAvD,cACAwD,kBACAf,SACAgB,oBAEA,MAAM,UACJC,GACEpB,KAMJqB,qBAAU,IAMVD,GAAU,EACRJ,cACIG,EAAcH,IAAW,CAC7BA,UAAU,MAGZ,MAAM/S,EAAUkS,EAAOS,IAEjBU,EAAUL,EAAa/U,IAAMC,cAAcG,IAAgB,CAC/DyH,OAAO,IACJ,KACL,OAAO7H,IAAMC,cAAc,OAAQ,CACjCoV,SAAUR,GACT7U,IAAMC,cAAcwT,IAAK,CAC1B6B,SAAU,SACTtV,IAAMC,cAAcgS,GAAc,OAAQjS,IAAMC,cAAcwT,IAAK,CACpEC,UAAW,OACX4B,SAAU,SACTtV,IAAMC,cAAcqS,GAAc,OAAQvQ,GAAW/B,IAAMC,cAAcwT,IAAK,CAC/EC,UAAW,OACX4B,SAAU,SACTtV,IAAMC,cAAcwU,GAAe,CACpC1S,QAASA,KACNA,GAAW/B,IAAMC,cAAcwT,IAAK,CACvCC,UAAW,OACX4B,SAAU,SACTtV,IAAMC,cAAckT,GAAiB,CACtCpR,QAASA,KACNiT,GAAmBhV,IAAMC,cAAcwT,IAAK,CAC/CC,UAAW,OACX4B,SAAU,SACTtV,IAAMC,cAAcsR,GAAc,CACnCC,YAAaA,KACVxR,IAAMC,cAAc,MAAO,CAC9B+O,UAAWC,KAAOsG,qBACjBvV,IAAMC,cAAcsI,IAAQ,CAC7BE,SAAS,EACTzD,KAAM,SACNO,SAAUuP,GAAYC,EACtBS,KAAMJ,EACNpG,UAAWC,KAAOwG,YACjBhT,IAAKC,EAAE,SAAU1C,IAAMC,cAAckQ,GAAmB,CACzDC,eAAgB0E,GACfrS,IAAKC,EAAE,WAAY1C,IAAMC,cAAc,OAAQ,CAChD+O,UAAWC,KAAO8G,cACjB/V,IAAMC,cAAciQ,GAAiB,CACtCtO,GAAIA,EACJ+G,UAAW,KACTtG,EAAQ8D,KAAK,KACb7H,YAMJ+I,KADI,GAEJlC,KAFI,GAGJkJ,OAHI,GAIJiD,MAJI,GAKJlM,OALI,IAMF/F,IACJyW,GAAYlM,aAAe,CACzB4H,YAAa,IAaAsE,UC1Gf,MACEJ,KADI,IAEF7D,IAOEmE,GAAgB,CAAC,iBAAkB,QAAS,gBAAiB,UAAW,OAAQ,mBAqCpF3O,KADI,IAEFhI,IAIW4W,OAxCc,EAC3BhB,oBAEA,MAAM,GACJrT,GACEsU,eACGC,GAAa9E,GAAa,CAC/BzP,OAEItD,EAAcoH,EAAMzE,iBACpBK,EAAMoE,EAAM/D,OAAOC,GAEnBwU,EAAgBJ,GAAcK,QAAO,CAACC,EAAUxP,KACpDwP,EAASxP,GAAOxF,EAAIwF,GACbwP,IACN,IAQH,OAAOtW,IAAMC,cAAcyV,GAAM,CAC/BL,SAAUc,EACVzM,UAAWoM,GACXb,cAAeA,EACfmB,cAAeA,EACfxU,GAAIA,EACJtD,YAAaA,EACbuX,qBAAqB,K,qBCzCzB,MA2BEzQ,OADI,IAEF/F,IAMWkX,OAlCI,EACjBC,UACAC,qBACAC,mBAGA,MAAMrM,EAAME,KAAKF,MACXsM,EAAiBrM,KAAOkM,GAASI,KAAKvM,GACtCwM,EAAmBvS,EAAamS,GAChCK,EAAiBJ,EAAepM,KAAOoM,GAAcE,KAAKvM,GAAO,GACvE,OAAOrK,IAAMC,cAAc,MAAO,CAChC+O,UAAWC,KAAO8H,SACjB/W,IAAMC,cAAc,KAAM,CAC3B+O,UAAWC,KAAOyC,OACjBjP,IAAKC,EAAE,gBAAiB1C,IAAMC,cAAc,MAAO,CACpD+O,UAAWC,KAAOuB,SACjBxQ,IAAMC,cAAc,MAAO,KAAMwC,IAAKC,EAAE,gCAAiC,CAC1EiU,oBACGG,GAAkB9W,IAAMC,cAAc,MAAO,KAAMwC,IAAKC,EAAE,iCAAkC,CAC/FoU,oBACGD,GAAoB7W,IAAMC,cAAc,MAAO,KAAMwC,IAAKC,EAAE,2CAA4C,CAC3GmU,mBACAG,YAAa,U,qBCrBjB,MA4CE7R,KADI,GAEJkC,KAFI,GAGJjC,OAHI,IAIF/F,IASW4X,OAtDC,EACdC,aACAjC,gBACA1T,OACAiV,UACAC,qBACAC,kBACI1W,IAAMC,cAAcD,IAAMsJ,SAAU,KAAMtJ,IAAMC,cAAc,SAAU,CAC5E+O,UAAWC,KAAOkI,YACjBnX,IAAMC,cAAckQ,GAAmB,CACxCC,eAAgB8G,EAChBlI,UAAWC,KAAOmI,iBAClBvP,OAAO,GACNpF,IAAKC,EAAE,qBAAsB1C,IAAMC,cAAc,KAAM,CACxD+O,UAAWC,KAAOoI,iBACjB5U,IAAKC,EAAE,kBAAmB,CAC3BnB,OACAyV,YAAa,QACThX,IAAMC,cAAcwP,IAAM,CAC9BT,UAAWC,KAAOqI,MACjBtX,IAAMC,cAAc,SAAU,CAC/B+O,UAAWC,KAAOsI,YACjBvX,IAAMC,cAAc,KAAM,CAC3B+O,UAAWC,KAAOuI,iBACjB/U,IAAKC,EAAE,kBAAmB1C,IAAMC,cAAc,IAAK,CACpDmP,KA3Be,yGA4BfJ,UAAWC,KAAOwI,eAClBhR,OAAQ,SACR6I,IAAK,uBACJtP,IAAMC,cAAc,OAAQ,CAC7B+O,UAAWC,KAAOyI,gBACjB1X,IAAMC,cAAcuP,IAAY,OAAQ/M,IAAKC,EAAE,6BAA8B1C,IAAMC,cAAc,MAAO,CACzG+O,UAAWC,KAAO0I,YACjB3X,IAAMC,cAAcsW,GAAY,CACjCC,QAASA,EACTC,mBAAoBA,EACpBC,aAAcA,KACX1W,IAAMC,cAAcgW,GAAsB,CAC7ChB,cAAeA,MC3BF2C,OAhBU,KACvB,MAAOV,EAAYjC,GAAiBxV,oBAAS,IACvC,GACJmC,GACEsU,cACE5U,EAAMoE,EAAM/D,OAAOC,GACzB,OAAO5B,IAAMC,cAAcgX,GAAS,CAClCC,WAAYA,EACZjC,cAAeA,EACf1T,KAAMD,EAAIC,KACViV,QAASlV,EAAIkV,QACbC,mBAAoBnV,EAAImV,mBACxBC,aAAcpV,EAAIoV,gB,qBCiEPmB,OAtEC,KACd,MAAM,GACJjW,GACEsU,eACE,KACJ3U,EADI,QAEJiV,EAFI,mBAGJC,EAHI,aAIJC,EAJI,QAKJ3U,EALI,eAMJ6L,GACElI,EAAM/D,OAAOC,GACjB,OAAO5B,IAAMC,cAAcD,IAAMsJ,SAAU,KAAMtJ,IAAMC,cAAc,SAAU,CAC7E+O,UAAWC,KAAOkI,YACjBnX,IAAMC,cAAckQ,GAAmB,CACxCnB,UAAWC,KAAOmI,iBAClBvP,OAAO,GACNpF,IAAKC,EAAE,qBAAsB1C,IAAMC,cAAc,KAAM,CACxD+O,UAAWC,KAAOoI,iBACjB5U,IAAKC,EAAE,yBAA0B,CAClCnB,OACAyV,YAAa,QACThX,IAAMC,cAAcwP,IAAM,CAC9BT,UAAWC,KAAOqI,MACjBtX,IAAMC,cAAc,SAAU,CAC/B+O,UAAWC,KAAOsI,YACjBvX,IAAMC,cAAc,KAAM,CAC3B+O,UAAWC,KAAOuI,iBACjB/U,IAAKC,EAAE,kBAAmB1C,IAAMC,cAAc,IAAK,CACpDmP,KA/Ba,yGAgCbJ,UAAWC,KAAOwI,eAClBhR,OAAQ,SACR6I,IAAK,uBACJtP,IAAMC,cAAc,OAAQ,CAC7B+O,UAAWC,KAAOyI,gBACjB1X,IAAMC,cAAcuP,IAAY,OAAQ/M,IAAKC,EAAE,6BAA8B1C,IAAMC,cAAc,MAAO,CACzG+O,UAAWC,KAAO0I,YACjB3X,IAAMC,cAAcsW,GAAY,CACjCC,QAASA,EACTC,mBAAoBA,EACpBC,aAAcA,KACX1W,IAAMC,cAAcwT,IAAK,CAC5B6B,SAAU,SACTtV,IAAMC,cAAc6X,IAAY,CACjC1R,MAAO3D,IAAKC,EAAE,QACd6C,UAAU,EACV9E,MAAOc,KACJvB,IAAMC,cAAcwT,IAAK,CAC5BC,UAAW,OACX4B,SAAU,SACTtV,IAAMC,cAAc8X,IAAmB,CACxC3R,MAAO3D,IAAKC,EAAE,YACd6C,UAAU,EACVyS,SAAUjW,GACT/B,IAAMC,cAAcgY,IAAoB,CACzCxX,MAAOsB,EACPqE,MAAOnD,EAAYlB,OACf/B,IAAMC,cAAcwT,IAAK,CAC7BC,UAAW,OACX4B,SAAU,SACTtV,IAAMC,cAAc6X,IAAY,CACjC1R,MAAO3D,IAAKC,EAAE,mBACd6C,UAAU,EACV9E,MAAOmN,EACPiF,SAAUxF,GAAcO,MACrB5N,IAAMC,cAAcwT,IAAK,CAC5BC,UAAW,QACV1T,IAAMC,cAAckQ,GAAmB,KAAM1N,IAAKC,EAAE,yB,qBCxEzD,MA+BEyC,KADI,GAEJkC,KAFI,IAGFhI,IAKW6Y,OApCA,EACbhB,aACAjC,mBACIjV,IAAMC,cAAcD,IAAMsJ,SAAU,KAAMtJ,IAAMC,cAAc,SAAU,CAC5E+O,UAAWC,KAAOkI,YACjBnX,IAAMC,cAAckQ,GAAmB,CACxCC,eAAgB8G,EAChBlI,UAAWC,KAAOmI,iBAClBvP,OAAO,GACNpF,IAAKC,EAAE,qBAAsB1C,IAAMC,cAAc,KAAM,CACxD+O,UAAWC,KAAOoI,iBACjB5U,IAAKC,EAAE,aAAc1C,IAAMC,cAAcwP,IAAM,CAChDT,UAAWC,KAAOqI,MACjBtX,IAAMC,cAAc,SAAU,CAC/B+O,UAAWC,KAAOsI,YACjBvX,IAAMC,cAAc,KAAM,CAC3B+O,UAAWC,KAAOuI,iBACjB/U,IAAKC,EAAE,kBAAmB1C,IAAMC,cAAc,IAAK,CACpDmP,KApBe,yGAqBfJ,UAAWC,KAAOwI,eAClBhR,OAAQ,SACR6I,IAAK,uBACJtP,IAAMC,cAAc,OAAQ,CAC7B+O,UAAWC,KAAOyI,gBACjB1X,IAAMC,cAAcuP,IAAY,OAAQ/M,IAAKC,EAAE,6BAA8B1C,IAAMC,cAAc0V,GAAqB,CACvHV,cAAeA,MCvBFkD,OARS,KACtB,MAAOjB,EAAYjC,GAAiBxV,oBAAS,GAC7C,OAAOO,IAAMC,cAAciY,GAAQ,CACjChB,WAAYA,EACZjC,cAAeA,KCmBJmD,OAjBA,IAAMpY,IAAMC,cAAcoY,IAAQ,CAC/ChW,QAASA,GACRrC,IAAMC,cAAcqY,IAAO,CAC5BC,OAAO,EACPC,KAAM,IACN9O,UAAWsG,KACThQ,IAAMC,cAAcqY,IAAO,CAC7BE,KAAM,YACN9O,UAAWkO,KACT5X,IAAMC,cAAcqY,IAAO,CAC7BE,KAAM,YACN9O,UAAWmO,KACT7X,IAAMC,cAAcqY,IAAO,CAC7BE,KAAM,OACN9O,UAAWyO,M,yBChBb,MAAMjP,GAAQ,CACZuP,GAAI,CACFha,SAAU,QAwCZW,KADI,IAEFC,IAIWqZ,OAzCE,EACfnZ,eAEA,MAAM,QACJQ,EADI,MAEJM,EAFI,KAGJE,GACEX,YAAasJ,IAEjB,GAAInJ,EACF,OAAOC,IAAMC,cAAcC,IAAO,KAAMF,IAAMC,cAAcE,IAAiB,KAAMH,IAAMC,cAAcG,IAAgB,QAGzH,GAAIC,EAKF,MAAMA,EAKR,MCpC2BoY,KAC3B,MAAM,YACJE,GACEF,EAEJ,QAAKE,IAIgBA,EAAYlX,SAAS,QAAUkX,EAAYlX,SAAS,wBDyBpDmX,CAAcrY,EAAKkY,IAWjCzY,IAAMC,cAAcD,IAAMsJ,SAAU,KAAM/J,GARxCS,IAAMC,cAAc,MAAO,CAChC+O,UAAWC,KAAO4J,kBACjB7Y,IAAMC,cAAcwR,IAAW,CAChCpR,OAAO,EACPqR,MAAOjP,IAAKC,EAAE,mBACbD,IAAKC,EAAE,oG,qBEtCd,MAOEtD,KADI,IAEFC,IAIWyZ,OAZK,EAClBvZ,cACIS,IAAMC,cAAc,MAAO,CAC/B+O,UAAWC,KAAO8H,SACjBxX,G,2SC8BH,MAAMwZ,GAAY,UAClBtW,IAAKuW,aAAa,KAAMD,GAAWE,IACnCxW,IAAKuW,aAAa,QAASD,GAAWG,IACtCzW,IAAKuW,aAAa,KAAMD,GAAWI,IACnC1W,IAAKuW,aAAa,MAAOD,GAAWK,IACpC3W,IAAKuW,aAAa,KAAMD,GAAWM,IACnC5W,IAAKuW,aAAa,KAAMD,GAAWO,IACnC7W,IAAKuW,aAAa,KAAMD,GAAWQ,IACnC9W,IAAKuW,aAAa,KAAMD,GAAWS,IACnC/W,IAAKuW,aAAa,KAAMD,GAAWU,IACnChX,IAAKuW,aAAa,KAAMD,GAAWW,IACnCjX,IAAKuW,aAAa,KAAMD,GAAWY,IACnClX,IAAKuW,aAAa,KAAMD,GAAWa,IACnCnX,IAAKuW,aAAa,KAAMD,GAAWc,IACnCpX,IAAKuW,aAAa,KAAMD,GAAWe,IACnCrX,IAAKuW,aAAa,MAAOD,GAAWgB,IACpCtX,IAAKuW,aAAa,KAAMD,GAAWiB,IACnCvX,IAAKuW,aAAa,KAAMD,GAAWkB,IACnCxX,IAAKuW,aAAa,QAASD,GAAWmB,IACtCzX,IAAKuW,aAAa,KAAMD,GAAWoB,IACnC1X,IAAKuW,aAAa,KAAMD,GAAWqB,IACnC3X,IAAKuW,aAAa,MAAOD,GAAWsB,IACpC5X,IAAKuW,aAAa,KAAMD,GAAWuB,IACnC7X,IAAKuW,aAAa,KAAMD,GAAWwB,IACnC9X,IAAKuW,aAAa,KAAMD,GAAWyB,IACnC/X,IAAKuW,aAAa,KAAMD,GAAW0B,IACnChY,IAAKuW,aAAa,UAAWD,GAAW2B,IACxCjY,IAAKuW,aAAa,KAAMD,GAAW4B,IACnClY,IAAKuW,aAAa,KAAMD,GAAW6B,IACnCnY,IAAKuW,aAAa,QAASD,GAAW8B,IACvBpY,EAAf,ECrDeqY,OALH,IAAM9a,IAAMC,cAAcD,IAAMsJ,SAAU,KAAMtJ,IAAMC,cAAc8a,IAAc,CAC5FC,SAAS,EACTC,QAAQ,IACNjb,IAAMC,cAAc6Y,GAAa,KAAM9Y,IAAMC,cAAcyY,GAAU,KAAM1Y,IAAMC,cAAcX,EAAO,KAAMU,IAAMC,cAAcmY,GAAQ","file":"static/js/app.373d2314.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"JobList_header__23tFt\",\"headerTitle\":\"JobList_headerTitle__21D__\",\"headerLink\":\"JobList_headerLink__2zepi\",\"headerLinkIcon\":\"JobList_headerLinkIcon__XdfBB\",\"controlContainer\":\"JobList_controlContainer__3Yzj_\",\"controlRight\":\"JobList_controlRight__38lfB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FormErrorBox_list__3BejY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerTitle\":\"ParameterFields_headerTitle__IBF76\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButtonContainer\":\"JobAddForm_formButtonContainer__1MLSp\",\"saveButton\":\"JobAddForm_saveButton__RfxZ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButtonContainer\":\"JobEditForm_formButtonContainer__2b6Fi\",\"deleteButton\":\"JobEditForm_deleteButton__VQxBE\",\"saveButton\":\"JobEditForm_saveButton__278Ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"JobDetails_wrapper__1-YkO\",\"title\":\"JobDetails_title__1Cht7\",\"details\":\"JobDetails_details__2HITJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"JobEdit_pageHeader__3Fywp\",\"pageHeaderButton\":\"JobEdit_pageHeaderButton__29yjJ\",\"pageHeaderTitle\":\"JobEdit_pageHeaderTitle__jZrIG\",\"card\":\"JobEdit_card__2QqEg\",\"cardHeader\":\"JobEdit_cardHeader__Mv_cj\",\"cardHeaderTitle\":\"JobEdit_cardHeaderTitle__29Y64\",\"cardHeaderInfo\":\"JobEdit_cardHeaderInfo__3VWZt\",\"cardHeaderLink\":\"JobEdit_cardHeaderLink__2frj7\",\"jobDetails\":\"JobEdit_jobDetails__194v-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"JobView_pageHeader__3d3IR\",\"pageHeaderButton\":\"JobView_pageHeaderButton__2VF9Z\",\"pageHeaderTitle\":\"JobView_pageHeaderTitle__3wHyg\",\"card\":\"JobView_card__3LlD0\",\"cardHeader\":\"JobView_cardHeader__3v0pX\",\"cardHeaderTitle\":\"JobView_cardHeaderTitle__tPEnV\",\"cardHeaderInfo\":\"JobView_cardHeaderInfo__j1GsD\",\"cardHeaderLink\":\"JobView_cardHeaderLink__86M36\",\"jobDetails\":\"JobView_jobDetails__3cu4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"JobAdd_pageHeader__2NZzc\",\"pageHeaderButton\":\"JobAdd_pageHeaderButton__Xg_R9\",\"pageHeaderTitle\":\"JobAdd_pageHeaderTitle__1RMl0\",\"card\":\"JobAdd_card__1HH6H\",\"cardHeader\":\"JobAdd_cardHeader__1D3sS\",\"cardHeaderTitle\":\"JobAdd_cardHeaderTitle__2TG9a\",\"cardHeaderInfo\":\"JobAdd_cardHeaderInfo__vq_Y1\",\"cardHeaderLink\":\"JobAdd_cardHeaderLink__2CzPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeBoxWrapper\":\"AuthWall_noticeBoxWrapper__1ums5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PageWrapper_wrapper__t-CJy\"};","import { createContext } from 'react';\nconst StoreContext = createContext({\n  jobs: {},\n  jobTypes: {},\n  parameterOptions: {},\n  refetchJobs: () => {\n    throw new Error('Store context needs a valid provider');\n  }\n});\nexport default StoreContext;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { CircularLoader, Layer, CenteredContent } from '@dhis2/ui';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport StoreContext from './StoreContext';\nconst jobsQuery = {\n  jobs: {\n    resource: 'jobConfigurations',\n    params: {\n      fields: '*',\n      paging: false\n    }\n  }\n};\nconst jobTypesQuery = {\n  jobTypes: {\n    resource: 'jobConfigurations/jobTypes',\n    params: {\n      fields: '*',\n      paging: false\n    }\n  }\n};\nconst optionsQuery = {\n  // Used by the ANALYTICS_TABLE and CONTINUOUS_ANALYTICS_TABLE job types\n  skipTableTypes: {\n    resource: 'analytics/tableTypes'\n  },\n  // Used by the MONITORING job type\n  validationRuleGroups: {\n    resource: 'validationRuleGroups',\n    params: {\n      paging: false\n    }\n  },\n  // Used by the PUSH_ANALYSIS job type\n  pushAnalysis: {\n    resource: 'pushAnalysis',\n    params: {\n      paging: false\n    }\n  },\n  // Used by the PREDICTOR job type\n  predictors: {\n    resource: 'predictors',\n    params: {\n      paging: false\n    }\n  },\n  predictorGroups: {\n    resource: 'predictorGroups',\n    params: {\n      paging: false\n    }\n  }\n};\n\nconst Store = ({\n  children\n}) => {\n  // State that should persist after a refetch\n  const jobFilterState = useState('');\n  const showSystemJobsState = useState(false);\n  const jobsFetch = useDataQuery(jobsQuery);\n  const jobTypesFetch = useDataQuery(jobTypesQuery);\n  const optionsFetch = useDataQuery(optionsQuery);\n  const loading = jobsFetch.loading || jobTypesFetch.loading || optionsFetch.loading;\n\n  if (loading) {\n    return React.createElement(Layer, null, React.createElement(CenteredContent, null, React.createElement(CircularLoader, null)));\n  }\n\n  const error = jobsFetch.error || jobTypesFetch.error || optionsFetch.error;\n\n  if (error) {\n    /**\n     * The app can't continue if this fails, because it doesn't\n     * have any data, so throw the error.\n     */\n    throw error;\n  }\n\n  const {\n    jobConfigurations: jobs\n  } = jobsFetch.data.jobs;\n  const {\n    jobTypes\n  } = jobTypesFetch.data.jobTypes;\n  const {\n    skipTableTypes,\n    validationRuleGroups: {\n      validationRuleGroups\n    },\n    pushAnalysis: {\n      pushAnalysis\n    },\n    predictors: {\n      predictors\n    },\n    predictorGroups: {\n      predictorGroups\n    }\n  } = optionsFetch.data;\n  const parameterOptions = {\n    skipTableTypes,\n    validationRuleGroups,\n    pushAnalysis,\n    predictors,\n    predictorGroups\n  };\n  return React.createElement(StoreContext.Provider, {\n    value: {\n      jobs,\n      jobTypes,\n      parameterOptions,\n      refetchJobs: jobsFetch.refetch,\n      jobFilter: jobFilterState,\n      showSystemJobs: showSystemJobsState\n    }\n  }, children);\n};\n\nconst {\n  node\n} = PropTypes;\nStore.propTypes = {\n  children: node.isRequired\n};\nexport default Store;","import { useContext } from 'react';\nimport StoreContext from './StoreContext';\nexport const useAllJobs = () => {\n  const store = useContext(StoreContext);\n  return store.jobs;\n};\nexport const useAllParameterOptions = () => {\n  const store = useContext(StoreContext);\n  return store.parameterOptions;\n};\nexport const useAllJobTypes = () => {\n  const store = useContext(StoreContext);\n  return store.jobTypes;\n};\nexport const useRefetchJobs = () => {\n  const store = useContext(StoreContext);\n  return store.refetchJobs;\n};\n/**\n * The state for the job filter and showing system\n * jobs is used in the job list, but kept in the\n * store since it has to persist after a refetch.\n */\n\nexport const useJobFilter = () => {\n  const store = useContext(StoreContext);\n  return store.jobFilter;\n};\nexport const useShowSystemJobs = () => {\n  const store = useContext(StoreContext);\n  return store.showSystemJobs;\n};\n/**\n * This hook returns the list of jobs that's shown in the\n * job list route. The list is filtered by the job filter\n * string and the show system jobs toggle from the store\n * state.\n */\n\nexport const useJobListJobs = () => {\n  const [jobFilter] = useJobFilter();\n  const [showSystemJobs] = useShowSystemJobs();\n  const jobs = useAllJobs(); // Filter jobs by the current jobFilter\n\n  const applyJobFilter = job => job.name.toLowerCase().includes(jobFilter.toLowerCase()); // Filter jobs depending on the current showSystemJobs\n\n\n  const applyShowSystemJobs = job => // Jobs that are configurable are user jobs\n  showSystemJobs ? true : job.configurable;\n\n  return jobs.filter(applyJobFilter).filter(applyShowSystemJobs);\n}; // Finds a job by id\n\nexport const useJob = id => {\n  const jobs = useAllJobs();\n  return jobs.find(job => job.id === id);\n}; // Finds a jobType by the jobType string\n\nexport const useJobType = jobType => {\n  const jobTypes = useAllJobTypes();\n  return jobTypes.find(job => job.jobType === jobType);\n}; // Returns an array with all parameters for a certain jobType\n\nexport const useJobTypeParameters = jobType => {\n  const selectedJobType = useJobType(jobType);\n  const hasParameters = 'jobParameters' in selectedJobType;\n\n  if (!hasParameters) {\n    return [];\n  }\n\n  return selectedJobType.jobParameters;\n}; // Returns the parameter options for a given parameter\n\nexport const useParameterOptions = parameter => {\n  const parameterOptions = useAllParameterOptions();\n  return parameterOptions[parameter];\n};","import { createHashHistory } from 'history';\nconst history = createHashHistory();\nexport default history;","import history from './history';\nexport default history;","import i18n from '@dhis2/d2-i18n';\nconst analyticsTableTypes = {\n  DATA_VALUE: i18n.t('Data value'),\n  COMPLETENESS: i18n.t('Completeness'),\n  COMPLETENESS_TARGET: i18n.t('Completeness target'),\n  ORG_UNIT_TARGET: i18n.t('Org unit target'),\n  EVENT: i18n.t('Event'),\n  ENROLLMENT: i18n.t('Enrollment'),\n  VALIDATION_RESULT: i18n.t('Validation result')\n};\nexport default analyticsTableTypes;","import i18n from '@dhis2/d2-i18n';\nconst jobTypesMap = {\n  ANALYTICS_TABLE: i18n.t('Analytics table'),\n  CONTINUOUS_ANALYTICS_TABLE: i18n.t('Continuous analytics table'),\n  CREDENTIALS_EXPIRY_ALERT: i18n.t('Credentials expiry alert'),\n  DATA_INTEGRITY: i18n.t('Data integrity'),\n  DATA_SET_NOTIFICATION: i18n.t('Dataset notification'),\n  DATA_STATISTICS: i18n.t('Data statistics'),\n  DATA_SYNC: i18n.t('Data synchronization'),\n  EVENT_PROGRAMS_DATA_SYNC: i18n.t('Event programs data sync'),\n  FILE_RESOURCE_CLEANUP: i18n.t('File resource clean up'),\n  META_DATA_SYNC: i18n.t('Metadata synchronization'),\n  MONITORING: i18n.t('Monitoring'),\n  PREDICTOR: i18n.t('Predictor'),\n  PROGRAM_NOTIFICATIONS: i18n.t('Program notifications'),\n  PUSH_ANALYSIS: i18n.t('Push analysis'),\n  REMOVE_EXPIRED_RESERVED_VALUES: i18n.t('Remove expired reserved values'),\n  RESOURCE_TABLE: i18n.t('Resource table'),\n  SEND_SCHEDULED_MESSAGE: i18n.t('Send scheduled message'),\n  TRACKER_PROGRAMS_DATA_SYNC: i18n.t('Tracker programs data sync'),\n  VALIDATION_RESULTS_NOTIFICATION: i18n.t('Validation results notification'),\n  DISABLE_INACTIVE_USERS: i18n.t('Disable inactive users')\n};\nexport default jobTypesMap;","import i18n from '@dhis2/d2-i18n';\nconst jobStatusMap = {\n  COMPLETED: i18n.t('Completed'),\n  DISABLED: i18n.t('Disabled'),\n  DONE: i18n.t('Done'),\n  FAILED: i18n.t('Failed'),\n  NOT_STARTED: i18n.t('Not started'),\n  RUNNING: i18n.t('Running'),\n  SCHEDULED: i18n.t('Scheduled'),\n  STOPPED: i18n.t('Stopped')\n};\nexport default jobStatusMap;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Switch } from '@dhis2/ui';\nimport { useDataMutation } from '@dhis2/app-runtime';\nimport { hooks } from '../Store';\n/* istanbul ignore next */\n\nconst mutation = {\n  resource: 'jobConfigurations',\n  id: ({\n    id\n  }) => id,\n  type: 'update',\n  partial: true,\n  data: ({\n    enabled\n  }) => ({\n    enabled\n  })\n};\n\nconst ToggleJobSwitch = ({\n  id,\n  checked,\n  disabled\n}) => {\n  const [toggleJob, {\n    loading\n  }] = useDataMutation(mutation);\n  const refetchJobs = hooks.useRefetchJobs();\n  const enabled = !checked;\n  return React.createElement(Switch, {\n    name: \"toggle-job-\".concat(id),\n    disabled: disabled || loading,\n    checked: checked,\n    onChange: () => {\n      toggleJob({\n        id,\n        enabled\n      }).then(() => refetchJobs());\n    }\n  });\n};\n\nconst {\n  bool,\n  string\n} = PropTypes;\nToggleJobSwitch.propTypes = {\n  checked: bool.isRequired,\n  disabled: bool.isRequired,\n  id: string.isRequired\n};\nexport default ToggleJobSwitch;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport history from '../../services/history';\n\nconst EditJobAction = ({\n  id\n}) => React.createElement(MenuItem, {\n  dense: true,\n  onClick: () => history.push(\"/edit/\".concat(id)),\n  label: i18n.t('Edit')\n});\n\nconst {\n  string\n} = PropTypes;\nEditJobAction.propTypes = {\n  id: string.isRequired\n};\nexport default EditJobAction;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport history from '../../services/history';\n\nconst ViewJobAction = ({\n  id\n}) => React.createElement(MenuItem, {\n  dense: true,\n  onClick: () => history.push(\"/view/\".concat(id)),\n  label: i18n.t('View')\n});\n\nconst {\n  string\n} = PropTypes;\nViewJobAction.propTypes = {\n  id: string.isRequired\n};\nexport default ViewJobAction;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip, Radio } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nconst cronPresets = [{\n  label: i18n.t('Every hour'),\n  value: '0 0 * ? * *'\n}, {\n  label: i18n.t('Every day at midnight'),\n  value: '0 0 1 ? * *'\n}, {\n  label: i18n.t('Every day at 3 am'),\n  value: '0 0 3 ? * *'\n}, {\n  label: i18n.t('Every day at noon'),\n  value: '0 0 12 ? * MON-FRI'\n}, {\n  label: i18n.t('Every week'),\n  value: '0 0 3 ? * MON'\n}];\n\nconst CronPresetModal = ({\n  setCron,\n  hideModal\n}) => {\n  const [currentPreset, setCurrentPreset] = useState('');\n  return React.createElement(Modal, {\n    open: true,\n    small: true,\n    onClose: hideModal\n  }, React.createElement(ModalTitle, null, i18n.t('Choose a preset time/interval')), React.createElement(ModalContent, null, cronPresets.map(preset => React.createElement(Radio, _extends({}, preset, {\n    checked: currentPreset === preset.value,\n    key: preset.value,\n    onChange: ({\n      value\n    }) => setCurrentPreset(value)\n  })))), React.createElement(ModalActions, null, React.createElement(ButtonStrip, {\n    end: true\n  }, React.createElement(Button, {\n    secondary: true,\n    onClick: hideModal,\n    name: \"hide-modal\"\n  }, i18n.t('Cancel')), React.createElement(Button, {\n    primary: true,\n    name: \"insert-preset\",\n    disabled: !currentPreset,\n    onClick: () => {\n      hideModal();\n      setCron(currentPreset);\n    }\n  }, i18n.t('Insert preset')))));\n};\n\nconst {\n  func\n} = PropTypes;\nCronPresetModal.propTypes = {\n  hideModal: func.isRequired,\n  setCron: func.isRequired\n};\nexport default CronPresetModal;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataMutation } from '@dhis2/app-runtime';\nconst mutation = {\n  resource: 'jobConfigurations',\n  id:\n  /* istanbul ignore next */\n  ({\n    id\n  }) => id,\n  type: 'delete'\n};\n\nconst DeleteJobModal = ({\n  id,\n  hideModal,\n  onSuccess\n}) => {\n  const [deleteJob] = useDataMutation(mutation);\n  return React.createElement(Modal, {\n    open: true,\n    small: true,\n    onClose: hideModal\n  }, React.createElement(ModalContent, null, i18n.t('Are you sure you want to delete this job?')), React.createElement(ModalActions, null, React.createElement(ButtonStrip, {\n    end: true\n  }, React.createElement(Button, {\n    name: \"hide-modal\",\n    secondary: true,\n    onClick: hideModal\n  }, i18n.t('Cancel')), React.createElement(Button, {\n    name: \"delete-job-\".concat(id),\n    destructive: true,\n    onClick: () => {\n      deleteJob({\n        id\n      }).then(() => {\n        hideModal();\n        onSuccess();\n      });\n    }\n  }, i18n.t('Delete')))));\n};\n\nconst {\n  func,\n  string\n} = PropTypes;\nDeleteJobModal.propTypes = {\n  hideModal: func.isRequired,\n  id: string.isRequired,\n  onSuccess: func.isRequired\n};\nexport default DeleteJobModal;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport history from '../../services/history';\n\nconst DiscardFormModal = ({\n  hideModal\n}) => React.createElement(Modal, {\n  open: true,\n  small: true,\n  onClose: hideModal\n}, React.createElement(ModalContent, null, i18n.t('Are you sure you want to discard this form?')), React.createElement(ModalActions, null, React.createElement(ButtonStrip, {\n  end: true\n}, React.createElement(Button, {\n  name: \"cancel-discard-form\",\n  secondary: true,\n  onClick: hideModal\n}, i18n.t('Cancel')), React.createElement(Button, {\n  name: \"discard-form\",\n  destructive: true,\n  onClick: () => {\n    hideModal();\n    history.push('/');\n  }\n}, i18n.t('Discard')))));\n\nconst {\n  func\n} = PropTypes;\nDiscardFormModal.propTypes = {\n  hideModal: func.isRequired\n};\nexport default DiscardFormModal;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../Store';\n\nconst RunJobModal = ({\n  id,\n  hideModal\n}) => {\n  const engine = useDataEngine();\n  const query = {\n    jobs: {\n      resource: \"jobConfigurations/\".concat(id, \"/execute\")\n    }\n  };\n\n  const runJob = () => engine.query(query);\n\n  const refetchJobs = hooks.useRefetchJobs();\n  return React.createElement(Modal, {\n    open: true,\n    small: true,\n    onClose: hideModal\n  }, React.createElement(ModalContent, null, i18n.t('Are you sure you want to run this job?')), React.createElement(ModalActions, null, React.createElement(ButtonStrip, {\n    end: true\n  }, React.createElement(Button, {\n    name: \"hide-modal\",\n    secondary: true,\n    onClick: hideModal\n  }, i18n.t('Cancel')), React.createElement(Button, {\n    name: \"run-job-\".concat(id),\n    primary: true,\n    onClick: () => {\n      runJob().then(() => {\n        hideModal();\n        refetchJobs();\n      });\n    }\n  }, i18n.t('Run')))));\n};\n\nconst {\n  func,\n  string\n} = PropTypes;\nRunJobModal.propTypes = {\n  hideModal: func.isRequired,\n  id: string.isRequired\n};\nexport default RunJobModal;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../Store';\nimport { RunJobModal } from '../Modal';\n\nconst RunJobAction = ({\n  id\n}) => {\n  const {\n    enabled\n  } = hooks.useJob(id);\n  const [showModal, setShowModal] = useState(false);\n  return React.createElement(React.Fragment, null, React.createElement(MenuItem, {\n    dense: true,\n    onClick: () => {\n      setShowModal(true);\n    },\n    disabled: !enabled,\n    label: i18n.t('Run manually')\n  }), showModal && React.createElement(RunJobModal, {\n    id: id,\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false)\n  }));\n};\n\nconst {\n  string\n} = PropTypes;\nRunJobAction.propTypes = {\n  id: string.isRequired\n};\nexport default RunJobAction;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { DeleteJobModal } from '../Modal';\nimport { hooks } from '../Store';\n\nconst DeleteJobAction = ({\n  id\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const refetchJobs = hooks.useRefetchJobs();\n  return React.createElement(React.Fragment, null, React.createElement(MenuItem, {\n    dense: true,\n    destructive: true,\n    onClick: () => {\n      setShowModal(true);\n    },\n    label: i18n.t('Delete')\n  }), showModal && React.createElement(DeleteJobModal, {\n    id: id,\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false),\n    onSuccess: refetchJobs\n  }));\n};\n\nconst {\n  string\n} = PropTypes;\nDeleteJobAction.propTypes = {\n  id: string.isRequired\n};\nexport default DeleteJobAction;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { FlyoutMenu, DropdownButton } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport EditJobAction from './EditJobAction';\nimport ViewJobAction from './ViewJobAction';\nimport RunJobAction from './RunJobAction';\nimport DeleteJobAction from './DeleteJobAction';\n\nconst Actions = ({\n  id,\n  configurable\n}) => React.createElement(DropdownButton, {\n  small: true,\n  component: React.createElement(FlyoutMenu, null, configurable ? React.createElement(EditJobAction, {\n    id: id\n  }) : React.createElement(ViewJobAction, {\n    id: id\n  }), configurable && React.createElement(RunJobAction, {\n    id: id\n  }), configurable && React.createElement(DeleteJobAction, {\n    id: id\n  }))\n}, i18n.t('Actions'));\n\nActions.defaultProps = {\n  configurable: false\n};\nconst {\n  string,\n  bool\n} = PropTypes;\nActions.propTypes = {\n  id: string.isRequired,\n  configurable: bool\n};\nexport default Actions;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Tag } from '@dhis2/ui';\nimport { jobStatusMap } from '../../services/server-translations';\n\nconst Status = ({\n  status\n}) => {\n  switch (status) {\n    case 'STOPPED':\n    case 'DISABLED':\n      return React.createElement(Tag, null, jobStatusMap[status]);\n\n    case 'RUNNING':\n    case 'NOT_STARTED':\n    case 'SCHEDULED':\n      return React.createElement(Tag, {\n        neutral: true\n      }, jobStatusMap[status]);\n\n    case 'FAILED':\n      return React.createElement(Tag, {\n        negative: true\n      }, jobStatusMap[status]);\n\n    case 'DONE':\n      return React.createElement(Tag, {\n        positive: true\n      }, jobStatusMap[status]);\n    // Unrecognised status\n\n    default:\n      return null;\n  }\n};\n\nconst {\n  string\n} = PropTypes;\nStatus.propTypes = {\n  status: string.isRequired\n};\nexport default Status;","import moment from 'moment';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nconst NextRun = ({\n  nextExecutionTime,\n  enabled\n}) => {\n  if (!enabled || !nextExecutionTime) {\n    return '-';\n  }\n\n  const now = moment(Date.now());\n  /**\n   * The recommendation is to run dhis2 on a server set to UTC time.\n   * In that case this timestamp is also UTC. If those recommendations\n   * weren't followed the time could be off, but there's nothing\n   * we can do to detect that.\n   */\n\n  const nextRun = moment.utc(nextExecutionTime);\n  const nextRunIsInPast = nextRun.isSameOrBefore(now, 'minute');\n  /**\n   * If the time is in the past, that could mean that the task is running,\n   * and the nextExecutionTime hasn't been updated yet.\n   */\n\n  if (nextRunIsInPast) {\n    return i18n.t('Not scheduled');\n  }\n\n  return now.to(nextRun);\n};\n\nconst {\n  bool,\n  string\n} = PropTypes;\nNextRun.propTypes = {\n  enabled: bool.isRequired,\n  nextExecutionTime: string\n};\nexport default NextRun;","const WEEKDAYS = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];\nconst MONTHS = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n\nconst isValidFields = fields => fields && fields.length === 6;\n\nconst isValidNumber = (number, x, y) => number >= x && number <= y;\n\nconst isWildcard = field => field === '*';\n\nconst isUndefined = field => field === '?';\n\nconst isValidNumberRange = (range, x, y) => {\n  const boundaries = range.split('-');\n  if (!boundaries || boundaries.length !== 2) return false;\n  return isValidNumber(boundaries[0], x, y) && isValidNumber(boundaries[1], x, y) && boundaries[0] <= boundaries[1];\n};\n\nconst isValidFraction = (fraction, x, y) => {\n  const components = fraction.split('/');\n  if (!components || components.length !== 2) return false;\n  /* istanbul ignore next */\n\n  return (isWildcard(components[0]) || isValidNumber(components[0], x, y)) && isValidNumber(components[1], x, y);\n};\n\nconst isAlphabeticWeekday = field => {\n  const weekdays = field.split('-');\n  const [firstDay, secondDay] = weekdays.map(c => WEEKDAYS.indexOf(c));\n  return firstDay !== -1 && secondDay === undefined || firstDay !== -1 && secondDay !== -1 && firstDay <= secondDay;\n};\n\nconst isAlphabeticMonth = field => {\n  const months = field.split('-');\n  const [firstMonth, secondMonth] = months.map(m => MONTHS.indexOf(m));\n  /* istanbul ignore next */\n\n  return firstMonth !== -1 && secondMonth === undefined || firstMonth !== -1 && secondMonth !== -1 && firstMonth <= secondMonth;\n};\n\nconst isValidWithinRange = (field, x, y) => isWildcard(field) || isValidNumber(field, x, y) || isValidNumberRange(field, x, y) || isValidFraction(field, x, y);\n\nconst isValidSecondField = field => isValidWithinRange(field, 0, 59);\n\nconst isValidMinuteField = field => isValidWithinRange(field, 0, 59);\n\nconst isValidHourField = field => isValidWithinRange(field, 0, 23);\n\nconst isValidDayField = field => isValidWithinRange(field, 0, 31) || isUndefined(field);\n\nconst isValidMonthField = field => isValidWithinRange(field, 1, 12) || isAlphabeticMonth(field);\n\nconst isValidWeekdayField = field => isValidWithinRange(field, 1, 7) || isAlphabeticWeekday(field) || isUndefined(field);\n/**\n * Cron expression validation. Validates the Spring Scheduling pattern.\n * Format: <second> <minute> <hour> <day-of-month> <month> <day-of-week>\n * Source code: https://git.io/vpoqG\n * Documentation: https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/scheduling/support/CronSequenceGenerator.html\n */\n\n\nconst validateCron = exp => {\n  if (!exp) {\n    return false;\n  }\n\n  const fields = exp.trim().split(' ');\n\n  if (!isValidFields(fields)) {\n    return false;\n  }\n\n  return isValidSecondField(fields[0]) && isValidMinuteField(fields[1]) && isValidHourField(fields[2]) && isValidDayField(fields[3]) && isValidMonthField(fields[4]) && isValidWeekdayField(fields[5]);\n};\n\nexport default validateCron;","import i18n from '@dhis2/d2-i18n';\nimport validateCron from './validate-cron';\n\nconst requiredCron = value => {\n  const isString = typeof value === 'string';\n  const isFilled = isString && value.length > 0;\n\n  if (!isFilled) {\n    return i18n.t('A CRON expression is required');\n  }\n\n  if (!validateCron(value)) {\n    return i18n.t('Please enter a valid CRON expression');\n  }\n\n  return undefined;\n};\n\nexport default requiredCron;","import cronstrue from 'cronstrue/i18n';\nimport i18n from '@dhis2/d2-i18n';\nimport { validateCron } from '../validators';\nconst fallback = 'en';\n\nconst translateCron = cron => {\n  const locale = i18n.language || fallback;\n  const isValid = cron && validateCron(cron);\n\n  if (!isValid) {\n    return '';\n  }\n\n  return cronstrue.toString(cron, {\n    locale\n  });\n};\n\nexport default translateCron;","import translateCron from './translate-cron';\nexport default translateCron;","import { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport translateCron from '../../services/translate-cron';\n\nconst Schedule = ({\n  cronExpression,\n  schedulingType,\n  delay\n}) => {\n  switch (schedulingType) {\n    case 'CRON':\n      return translateCron(cronExpression);\n\n    case 'FIXED_DELAY':\n      return i18n.t('{{ delay }} seconds after last run', {\n        delay\n      });\n\n    default:\n      // Unrecognised or invalid type\n      return '-';\n  }\n};\n\nconst {\n  string,\n  number\n} = PropTypes;\nSchedule.propTypes = {\n  schedulingType: string.isRequired,\n  cronExpression: string,\n  delay: number\n};\nexport default Schedule;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { TableRow, TableCell } from '@dhis2/ui';\nimport { jobTypesMap } from '../../services/server-translations';\nimport { ToggleJobSwitch } from '../Switches';\nimport Actions from './Actions';\nimport Status from './Status';\nimport NextRun from './NextRun';\nimport Schedule from './Schedule';\n\nconst JobTableRow = ({\n  job: {\n    id,\n    displayName,\n    jobType,\n    cronExpression,\n    delay,\n    jobStatus,\n    nextExecutionTime,\n    schedulingType,\n    enabled,\n    configurable\n  }\n}) => React.createElement(TableRow, null, React.createElement(TableCell, null, displayName), React.createElement(TableCell, null, jobTypesMap[jobType]), React.createElement(TableCell, null, React.createElement(Schedule, {\n  cronExpression: cronExpression,\n  delay: delay,\n  schedulingType: schedulingType\n})), React.createElement(TableCell, null, React.createElement(NextRun, {\n  nextExecutionTime: nextExecutionTime,\n  enabled: enabled\n})), React.createElement(TableCell, null, React.createElement(Status, {\n  status: jobStatus\n})), React.createElement(TableCell, null, React.createElement(ToggleJobSwitch, {\n  id: id,\n  checked: enabled,\n  disabled: !configurable\n})), React.createElement(TableCell, null, React.createElement(Actions, {\n  id: id,\n  configurable: configurable\n})));\n\nconst {\n  shape,\n  string,\n  bool,\n  number\n} = PropTypes;\nJobTableRow.propTypes = {\n  job: shape({\n    displayName: string.isRequired,\n    enabled: bool.isRequired,\n    id: string.isRequired,\n    jobStatus: string.isRequired,\n    jobType: string.isRequired,\n    schedulingType: string.isRequired,\n    cronExpression: string,\n    delay: number,\n    nextExecutionTime: string\n  }).isRequired\n};\nexport default JobTableRow;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Table, TableHead, TableRowHead, TableRow, TableCell, TableCellHead, TableBody } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport JobTableRow from './JobTableRow';\n\nconst JobTable = ({\n  jobs\n}) => React.createElement(Table, null, React.createElement(TableHead, null, React.createElement(TableRowHead, null, React.createElement(TableCellHead, null, i18n.t('Job name')), React.createElement(TableCellHead, null, i18n.t('Type')), React.createElement(TableCellHead, null, i18n.t('Schedule')), React.createElement(TableCellHead, null, i18n.t('Next run')), React.createElement(TableCellHead, null, i18n.t('Status')), React.createElement(TableCellHead, null, i18n.t('On/off')), React.createElement(TableCellHead, null))), React.createElement(TableBody, null, jobs.length === 0 ? React.createElement(TableRow, null, React.createElement(TableCell, null, i18n.t('No jobs to display'))) : jobs.map(job => React.createElement(JobTableRow, {\n  key: job.id,\n  job: job\n}))));\n\nconst {\n  object,\n  arrayOf\n} = PropTypes;\nJobTable.propTypes = {\n  jobs: arrayOf(object).isRequired\n};\nexport default JobTable;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Card, Checkbox, Input, Button, IconInfo16 } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport history from '../../services/history';\nimport { JobTable } from '../../components/JobTable';\nimport styles from './JobList.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobList = ({\n  jobs,\n  showSystemJobs,\n  setShowSystemJobs,\n  jobFilter,\n  setJobFilter\n}) => {\n  return React.createElement(React.Fragment, null, React.createElement(\"header\", {\n    className: styles.header\n  }, React.createElement(\"h1\", {\n    className: styles.headerTitle\n  }, i18n.t('Scheduled jobs')), React.createElement(\"a\", {\n    href: infoLink,\n    className: styles.headerLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, React.createElement(\"span\", {\n    className: styles.headerLinkIcon\n  }, React.createElement(IconInfo16, null)), i18n.t('About job configuration'))), React.createElement(Card, null, React.createElement(\"div\", {\n    className: styles.controlContainer\n  }, React.createElement(Input, {\n    dataTest: \"job-filter-input\",\n    placeholder: i18n.t('Filter jobs'),\n    onChange: ({\n      value\n    }) => {\n      setJobFilter(value);\n    },\n    value: jobFilter\n  }), React.createElement(\"div\", {\n    className: styles.controlRight\n  }, React.createElement(Checkbox, {\n    dataTest: \"job-toggle-checkbox\",\n    checked: showSystemJobs,\n    label: i18n.t('Include system jobs in list'),\n    onChange: ({\n      checked\n    }) => {\n      setShowSystemJobs(checked);\n    }\n  }), React.createElement(Button, {\n    dataTest: \"new-job-button\",\n    onClick: () => {\n      history.push('/add');\n    }\n  }, i18n.t('New job')))), React.createElement(JobTable, {\n    jobs: jobs\n  })));\n};\n\nconst {\n  bool,\n  object,\n  string,\n  arrayOf,\n  func\n} = PropTypes;\nJobList.propTypes = {\n  jobFilter: string.isRequired,\n  jobs: arrayOf(object).isRequired,\n  setJobFilter: func.isRequired,\n  setShowSystemJobs: func.isRequired,\n  showSystemJobs: bool.isRequired\n};\nexport default JobList;","import React from 'react';\nimport { hooks } from '../../components/Store';\nimport JobList from './JobList';\n\nconst JobListContainer = () => {\n  const [jobFilter, setJobFilter] = hooks.useJobFilter();\n  const [showSystemJobs, setShowSystemJobs] = hooks.useShowSystemJobs();\n  const jobs = hooks.useJobListJobs();\n  return React.createElement(JobList, {\n    jobs: jobs,\n    showSystemJobs: showSystemJobs,\n    setShowSystemJobs: setShowSystemJobs,\n    jobFilter: jobFilter,\n    setJobFilter: setJobFilter\n  });\n};\n\nexport default JobListContainer;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { CronPresetModal } from '../Modal';\n\nconst CronPresetButton = ({\n  setCron,\n  small\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    onClick: () => setShowModal(true),\n    small: small\n  }, i18n.t('Choose from preset times')), showModal && React.createElement(CronPresetModal, {\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false),\n    setCron: setCron\n  }));\n};\n\nCronPresetButton.defaultProps = {\n  small: false\n};\nconst {\n  func,\n  bool\n} = PropTypes;\nCronPresetButton.propTypes = {\n  setCron: func.isRequired,\n  small: bool\n};\nexport default CronPresetButton;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { DeleteJobModal } from '../Modal';\n\nconst DeleteJobButton = ({\n  id,\n  onSuccess\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    destructive: true,\n    onClick: () => setShowModal(true)\n  }, i18n.t('Delete job')), showModal && React.createElement(DeleteJobModal, {\n    id: id,\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false),\n    onSuccess: onSuccess\n  }));\n};\n\nconst {\n  string,\n  func\n} = PropTypes;\nDeleteJobButton.propTypes = {\n  id: string.isRequired,\n  onSuccess: func.isRequired\n};\nexport default DeleteJobButton;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button } from '@dhis2/ui';\nimport history from '../../services/history';\nimport { DiscardFormModal } from '../Modal';\n\nconst DiscardFormButton = ({\n  shouldConfirm,\n  children,\n  small,\n  className\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const onClick = shouldConfirm ? () => setShowModal(true) : () => history.push('/');\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    onClick: onClick,\n    small: small,\n    className: className\n  }, children), showModal && React.createElement(DiscardFormModal, {\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false)\n  }));\n};\n\nDiscardFormButton.defaultProps = {\n  className: '',\n  shouldConfirm: false,\n  small: false\n};\nconst {\n  string,\n  bool\n} = PropTypes;\nDiscardFormButton.propTypes = {\n  children: string.isRequired,\n  className: string,\n  shouldConfirm: bool,\n  small: bool\n};\nexport default DiscardFormButton;","import { FinalForm } from '@dhis2/ui';\nconst {\n  FORM_ERROR\n} = FinalForm;\n/**\n * Formats the errors returned by our backend to a format that final-form can parse\n */\n\nconst formatError = error => {\n  const {\n    details: {\n      response\n    }\n  } = error;\n  const validationErrors = {};\n  /**\n   * Some backend errors do not have a way for us to infer the related field,\n   * those can be put in genericErrors\n   */\n\n  const genericErrors = [];\n\n  if (response.errorReports && response.errorReports.length) {\n    response.errorReports.forEach(report => {\n      /**\n       * errorProperty is how the backend indicates the field that the error\n       * is related to. If we know this, return it as a field specific error\n       * (note that this will swallow errors if the backend indicates a field\n       * that does not exist in the frontend). Otherwise we'll push it to the\n       * generic errors.\n       */\n      if (report.errorProperty) {\n        validationErrors[report.errorProperty] = report.message;\n      } else {\n        genericErrors.push(report.message);\n      }\n    });\n  }\n\n  if (genericErrors.length > 0) {\n    validationErrors[FORM_ERROR] = genericErrors;\n  }\n\n  return validationErrors;\n};\n\nexport default formatError;","import formatError from './format-error';\nexport default formatError;","import { useContext } from 'react';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { StoreContext } from '../../components/Store';\nimport history from '../../services/history';\nimport formatError from '../../services/format-error';\nconst mutation = {\n  resource: 'jobConfigurations',\n  type: 'create',\n  data:\n  /* istanbul ignore next */\n  ({\n    job\n  }) => job\n};\n\nconst useSubmitJob = () => {\n  const {\n    refetchJobs\n  } = useContext(StoreContext);\n  const engine = useDataEngine();\n\n  const submitJob = job => engine.mutate(mutation, {\n    variables: {\n      job\n    }\n  }).then(() => {\n    history.push('/');\n    refetchJobs();\n  }).catch(error => {\n    const isValidationError = error.type === 'access'; // Potential validation error, return it in a format final-form can handle\n\n    if (isValidationError) {\n      return formatError(error);\n    } // Throw any unexpected errors\n\n\n    throw error;\n  });\n\n  return [submitJob];\n};\n\nexport default useSubmitJob;","import { useContext } from 'react';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { StoreContext } from '../../components/Store';\nimport history from '../../services/history';\nimport formatError from '../../services/format-error';\nconst mutation = {\n  resource: 'jobConfigurations',\n  type: 'update',\n  id:\n  /* istanbul ignore next */\n  ({\n    id\n  }) => id,\n  data:\n  /* istanbul ignore next */\n  ({\n    job\n  }) => job\n};\n\nconst useUpdateJob = ({\n  id\n}) => {\n  const {\n    refetchJobs\n  } = useContext(StoreContext);\n  const engine = useDataEngine();\n\n  const updateJob = job => engine.mutate(mutation, {\n    variables: {\n      job,\n      id\n    }\n  }).then(() => {\n    history.push('/');\n    refetchJobs();\n  }).catch(error => {\n    const isValidationError = error.type === 'access'; // Potential validation error, return it in a format final-form can handle\n\n    if (isValidationError) {\n      return formatError(error);\n    } // Throw any unexpected errors\n\n\n    throw error;\n  });\n\n  return [updateJob];\n};\n\nexport default useUpdateJob;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { NoticeBox } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport styles from './FormErrorBox.module.css';\n\nconst FormErrorBox = ({\n  submitError\n}) => {\n  const hasGenericSubmitErrors = submitError.length > 0;\n\n  if (!hasGenericSubmitErrors) {\n    return null;\n  }\n\n  return React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst creating your job')\n  }, React.createElement(\"ul\", {\n    className: styles.list\n  }, submitError.map(error => React.createElement(\"li\", {\n    key: error\n  }, error))));\n};\n\nconst {\n  array\n} = PropTypes;\nFormErrorBox.propTypes = {\n  submitError: array.isRequired\n};\nexport default FormErrorBox;","import React from 'react';\nimport { ReactFinalForm, InputFieldFF, composeValidators, hasValue, string } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nconst {\n  Field\n} = ReactFinalForm; // The key under which this field will be sent to the backend\n\nconst FIELD_NAME = 'name';\nconst VALIDATOR = composeValidators(string, hasValue);\n\nconst JobNameField = () => React.createElement(Field, {\n  name: FIELD_NAME,\n  component: InputFieldFF,\n  validate: VALIDATOR,\n  label: i18n.t('Name'),\n  type: \"text\",\n  required: true\n});\n\nexport default JobNameField;","import React from 'react';\nimport { ReactFinalForm, SingleSelectFieldFF, composeValidators, hasValue, string } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../Store';\nimport { jobTypesMap } from '../../services/server-translations';\nconst {\n  Field\n} = ReactFinalForm; // The key under which this field will be sent to the backend\n\nexport const FIELD_NAME = 'jobType';\nconst VALIDATOR = composeValidators(string, hasValue);\n\nconst JobTypeField = () => {\n  const jobTypes = hooks.useAllJobTypes();\n  const options = jobTypes.map(({\n    jobType\n  }) => ({\n    value: jobType,\n    label: jobTypesMap[jobType]\n  }));\n  return React.createElement(Field, {\n    name: FIELD_NAME,\n    validate: VALIDATOR,\n    component: SingleSelectFieldFF,\n    options: options,\n    label: i18n.t('Job type'),\n    required: true\n  });\n};\n\nexport default JobTypeField;","/**\n * Our backend returns certain values as a number, but our\n * inputs expect and return a string, so we're formatting them to strings\n */\nexport const formatToString = value => {\n  if (typeof value === 'number') {\n    return value.toString();\n  }\n\n  return value;\n};","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { MultiSelectField, ReactFinalForm, MultiSelectFieldFF } from '@dhis2/ui';\nimport { hooks } from '../Store';\nimport { analyticsTableTypes } from '../../services/server-translations';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst SkipTableTypesField = ({\n  label,\n  name,\n  parameterName\n}) => {\n  const options = hooks.useParameterOptions(parameterName);\n\n  if (options.length === 0) {\n    return React.createElement(MultiSelectField, {\n      disabled: true,\n      helpText: i18n.t('No options available'),\n      label: label\n    });\n  }\n\n  const translatedOptions = options.map(option => ({\n    value: option,\n    label: analyticsTableTypes[option] || option\n  }));\n  return React.createElement(Field, {\n    name: name,\n    component: MultiSelectFieldFF,\n    options: translatedOptions,\n    label: label\n  });\n};\n\nconst {\n  string\n} = PropTypes;\nSkipTableTypesField.propTypes = {\n  label: string.isRequired,\n  name: string.isRequired,\n  parameterName: string.isRequired\n};\nexport default SkipTableTypesField;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MultiSelectFieldFF, ReactFinalForm, MultiSelectField } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../Store';\nconst {\n  Field\n} = ReactFinalForm; // A labeled options field has options that have both an id and a label.\n\nconst LabeledOptionsField = ({\n  label,\n  name,\n  parameterName\n}) => {\n  const options = hooks.useParameterOptions(parameterName);\n\n  if (options.length === 0) {\n    return React.createElement(MultiSelectField, {\n      disabled: true,\n      helpText: i18n.t('No options available'),\n      label: label\n    });\n  }\n\n  const labeledOptions = options.map(({\n    id,\n    displayName\n  }) => ({\n    value: id,\n    label: displayName\n  }));\n  return React.createElement(Field, {\n    name: name,\n    component: MultiSelectFieldFF,\n    options: labeledOptions,\n    label: label\n  });\n};\n\nconst {\n  string\n} = PropTypes;\nLabeledOptionsField.propTypes = {\n  label: string.isRequired,\n  name: string.isRequired,\n  parameterName: string.isRequired\n};\nexport default LabeledOptionsField;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm, InputFieldFF, SwitchFieldFF, Box } from '@dhis2/ui';\nimport { hooks } from '../Store';\nimport { formatToString } from './formatters';\nimport SkipTableTypesField from './SkipTableTypesField';\nimport LabeledOptionsField from './LabeledOptionsField';\nimport styles from './ParameterFields.module.css';\nconst {\n  Field\n} = ReactFinalForm; // The key under which the parameters will be sent to the backend\n\nconst FIELD_NAME = 'jobParameters'; // Renders all parameters for a given jobtype\n\nconst ParameterFields = ({\n  jobType\n}) => {\n  const parameters = hooks.useJobTypeParameters(jobType);\n\n  if (parameters.length === 0) {\n    return null;\n  } // Map all parameters to the appropriate field types\n\n\n  const parameterComponents = parameters.map(({\n    fieldName,\n    name,\n    klass\n  }) => {\n    const defaultProps = {\n      label: fieldName,\n      name: \"\".concat(FIELD_NAME, \".\").concat(name)\n    };\n    let parameterComponent = null; // Specific case, as the options here need specific translations\n\n    if (name === 'skipTableTypes') {\n      return React.createElement(Box, {\n        marginTop: \"16px\",\n        key: name\n      }, React.createElement(SkipTableTypesField, _extends({}, defaultProps, {\n        parameterName: name\n      })));\n    } // Generic field rendering\n\n\n    switch (klass) {\n      case 'java.lang.String':\n        parameterComponent = React.createElement(Field, _extends({}, defaultProps, {\n          component: InputFieldFF,\n          type: \"text\"\n        }));\n        break;\n\n      case 'java.lang.Boolean':\n        parameterComponent = React.createElement(Field, _extends({}, defaultProps, {\n          component: SwitchFieldFF,\n          type: \"checkbox\"\n        }));\n        break;\n\n      case 'java.lang.Integer':\n        parameterComponent = React.createElement(Field, _extends({}, defaultProps, {\n          component: InputFieldFF,\n          format: formatToString,\n          type: \"number\"\n        }));\n        break;\n\n      case 'java.util.List':\n        parameterComponent = React.createElement(LabeledOptionsField, _extends({}, defaultProps, {\n          parameterName: name\n        }));\n        break;\n    } // Wrap all components in a Box for spacing\n\n\n    return React.createElement(Box, {\n      marginTop: \"16px\",\n      key: name\n    }, parameterComponent);\n  });\n  return React.createElement(React.Fragment, null, React.createElement(\"header\", null, React.createElement(\"h4\", {\n    className: styles.headerTitle\n  }, i18n.t('Parameters'))), parameterComponents);\n};\n\nconst {\n  string\n} = PropTypes;\nParameterFields.propTypes = {\n  jobType: string.isRequired\n};\nexport default ParameterFields;","import React from 'react';\nimport { Box, ReactFinalForm, InputFieldFF } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { requiredCron } from '../../services/validators';\nimport { CronPresetButton } from '../Buttons';\nimport translateCron from '../../services/translate-cron';\nconst {\n  Field,\n  useFormState,\n  useForm\n} = ReactFinalForm; // The key under which this field will be sent to the backend\n\nconst FIELD_NAME = 'cronExpression';\nconst VALIDATOR = requiredCron;\n\nconst CronField = () => {\n  const form = useForm();\n  const {\n    values\n  } = useFormState({\n    subscription: {\n      values: true\n    }\n  });\n  const cronExpression = values[FIELD_NAME];\n  const helpText = translateCron(cronExpression);\n  return React.createElement(React.Fragment, null, React.createElement(Field, {\n    component: InputFieldFF,\n    name: FIELD_NAME,\n    validate: VALIDATOR,\n    label: i18n.t('CRON Expression'),\n    type: \"text\",\n    helpText: helpText,\n    required: true\n  }), React.createElement(Box, {\n    marginTop: \"8px\"\n  }, React.createElement(CronPresetButton, {\n    setCron:\n    /* istanbul ignore next */\n    cron => form.change(FIELD_NAME, cron),\n    small: true\n  })));\n};\n\nexport default CronField;","import React from 'react';\nimport { ReactFinalForm, InputFieldFF, composeValidators, hasValue, integer, createNumberRange } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { formatToString } from './formatters';\nconst {\n  Field\n} = ReactFinalForm; // Omitting the underscore here since it messes up i18n\n\nconst lowerbound = 1;\nconst upperbound = 86400; // The key under which this field will be sent to the backend\n\nconst FIELD_NAME = 'delay';\nconst VALIDATOR = composeValidators(integer, hasValue, createNumberRange(lowerbound, upperbound));\n\nconst DelayField = () => React.createElement(Field, {\n  component: InputFieldFF,\n  name: FIELD_NAME,\n  validate: VALIDATOR,\n  label: i18n.t('Delay'),\n  type: \"number\",\n  format: formatToString,\n  helpText: i18n.t('Delay in seconds ({{ lowerbound }} - {{ upperbound }})', {\n    lowerbound,\n    upperbound\n  }),\n  required: true\n});\n\nexport default DelayField;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { hooks } from '../Store';\nimport CronField from './CronField';\nimport DelayField from './DelayField';\n\nconst ScheduleField = ({\n  jobType\n}) => {\n  const currentJobType = hooks.useJobType(jobType);\n  const schedulingType = currentJobType.schedulingType;\n\n  switch (schedulingType) {\n    case 'CRON':\n      return React.createElement(CronField, null);\n\n    case 'FIXED_DELAY':\n      return React.createElement(DelayField, null);\n\n    default:\n      // Unrecognised scheduling type\n      return null;\n  }\n};\n\nconst {\n  string\n} = PropTypes;\nScheduleField.propTypes = {\n  jobType: string.isRequired\n};\nexport default ScheduleField;","import JobNameField from './JobNameField';\nimport JobTypeField, { FIELD_NAME as JOB_TYPE } from './JobTypeField';\nimport ParameterFields from './ParameterFields';\nimport ScheduleField from './ScheduleField';\nconst fieldNames = {\n  JOB_TYPE\n};\nexport { JobNameField, ScheduleField, JobTypeField, ParameterFields, fieldNames };","import React, { useEffect } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, CircularLoader, Box, ReactFinalForm } from '@dhis2/ui';\nimport { DiscardFormButton } from '../Buttons';\nimport { FormErrorBox } from '../FormErrorBox';\nimport { ScheduleField, JobNameField, JobTypeField, ParameterFields, fieldNames } from '../FormFields';\nimport styles from './JobAddForm.module.css';\nconst {\n  useForm\n} = ReactFinalForm;\n\nconst JobAddForm = ({\n  handleSubmit,\n  pristine,\n  submitting,\n  submitError,\n  hasSubmitErrors,\n  values,\n  setIsPristine\n}) => {\n  const {\n    subscribe\n  } = useForm();\n  /**\n   * Lift pristine state up on changes, wrapped in useEffect because calls to setState\n   * outside of the component that owns the setState should not happen synchronously.\n   */\n\n  useEffect(() =>\n  /**\n   * The subscriber will only be called when pristine changes. It returns a\n   * cleanup function.\n   * https://final-form.org/docs/final-form/types/FormApi#subscribe\n   */\n  subscribe(({\n    pristine\n  }) => setIsPristine(pristine), {\n    pristine: true\n  })); // Check if there's currently a selected job type\n\n  const jobType = values[fieldNames.JOB_TYPE]; // Show a spinner only when submitting\n\n  const Spinner = submitting ? React.createElement(CircularLoader, {\n    small: true\n  }) : null;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, React.createElement(Box, {\n    maxWidth: \"600px\"\n  }, React.createElement(JobNameField, null)), React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, React.createElement(JobTypeField, null)), jobType && React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, React.createElement(ScheduleField, {\n    jobType: jobType\n  })), jobType && React.createElement(Box, {\n    marginTop: \"32px\",\n    maxWidth: \"400px\"\n  }, React.createElement(ParameterFields, {\n    jobType: jobType\n  })), hasSubmitErrors && React.createElement(Box, {\n    marginTop: \"32px\",\n    maxWidth: \"600px\"\n  }, React.createElement(FormErrorBox, {\n    submitError: submitError\n  })), React.createElement(\"div\", {\n    className: styles.formButtonContainer\n  }, React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    disabled: pristine || submitting,\n    icon: Spinner,\n    className: styles.saveButton\n  }, i18n.t('Save')), React.createElement(DiscardFormButton, {\n    shouldConfirm: !pristine\n  }, i18n.t('Cancel'))));\n};\n\nconst {\n  func,\n  bool,\n  object,\n  array\n} = PropTypes;\nJobAddForm.defaultProps = {\n  submitError: []\n};\nJobAddForm.propTypes = {\n  handleSubmit: func.isRequired,\n  hasSubmitErrors: bool.isRequired,\n  pristine: bool.isRequired,\n  setIsPristine: func.isRequired,\n  submitting: bool.isRequired,\n  values: object.isRequired,\n  submitError: array\n};\nexport default JobAddForm;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { useSubmitJob } from '../../hooks/jobs';\nimport JobAddForm from './JobAddForm';\nconst {\n  Form\n} = ReactFinalForm;\n\nconst JobAddFormContainer = ({\n  setIsPristine\n}) => {\n  const [submitJob] = useSubmitJob();\n  /**\n   * destroyOnUnregister is enabled so that dynamic fields will be unregistered\n   * when they're removed from the form, for instance when the jobType changes.\n   */\n\n  return React.createElement(Form, {\n    onSubmit: submitJob,\n    component: JobAddForm,\n    setIsPristine: setIsPristine,\n    destroyOnUnregister: true\n  });\n};\n\nconst {\n  func\n} = PropTypes;\nJobAddFormContainer.propTypes = {\n  setIsPristine: func.isRequired\n};\nexport default JobAddFormContainer;","import React, { useEffect } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, CircularLoader, Box, ReactFinalForm } from '@dhis2/ui';\nimport history from '../../services/history';\nimport { DiscardFormButton, DeleteJobButton } from '../Buttons';\nimport { FormErrorBox } from '../FormErrorBox';\nimport { ScheduleField, JobNameField, JobTypeField, ParameterFields, fieldNames } from '../FormFields';\nimport styles from './JobEditForm.module.css';\nconst {\n  useForm\n} = ReactFinalForm;\n\nconst JobEditForm = ({\n  id,\n  refetchJobs,\n  handleSubmit,\n  pristine,\n  submitting,\n  submitError,\n  hasSubmitErrors,\n  values,\n  setIsPristine\n}) => {\n  const {\n    subscribe\n  } = useForm();\n  /**\n   * Lift pristine state up on changes, wrapped in useEffect because calls to setState\n   * outside of the component that owns the setState should not happen synchronously.\n   */\n\n  useEffect(() =>\n  /**\n   * The subscriber will only be called when pristine changes. It returns a\n   * cleanup function.\n   * https://final-form.org/docs/final-form/types/FormApi#subscribe\n   */\n  subscribe(({\n    pristine\n  }) => setIsPristine(pristine), {\n    pristine: true\n  })); // Check if there's currently a selected job type\n\n  const jobType = values[fieldNames.JOB_TYPE]; // Show a spinner only when submitting\n\n  const Spinner = submitting ? React.createElement(CircularLoader, {\n    small: true\n  }) : null;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, React.createElement(Box, {\n    maxWidth: \"600px\"\n  }, React.createElement(JobNameField, null)), React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, React.createElement(JobTypeField, null)), jobType && React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, React.createElement(ScheduleField, {\n    jobType: jobType\n  })), jobType && React.createElement(Box, {\n    marginTop: \"32px\",\n    maxWidth: \"400px\"\n  }, React.createElement(ParameterFields, {\n    jobType: jobType\n  })), hasSubmitErrors && React.createElement(Box, {\n    marginTop: \"32px\",\n    maxWidth: \"600px\"\n  }, React.createElement(FormErrorBox, {\n    submitError: submitError\n  })), React.createElement(\"div\", {\n    className: styles.formButtonContainer\n  }, React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    disabled: pristine || submitting,\n    icon: Spinner,\n    className: styles.saveButton\n  }, i18n.t('Save')), React.createElement(DiscardFormButton, {\n    shouldConfirm: !pristine\n  }, i18n.t('Cancel')), React.createElement(\"span\", {\n    className: styles.deleteButton\n  }, React.createElement(DeleteJobButton, {\n    id: id,\n    onSuccess: () => {\n      history.push('/');\n      refetchJobs();\n    }\n  }))));\n};\n\nconst {\n  func,\n  bool,\n  object,\n  array,\n  string\n} = PropTypes;\nJobEditForm.defaultProps = {\n  submitError: []\n};\nJobEditForm.propTypes = {\n  handleSubmit: func.isRequired,\n  hasSubmitErrors: bool.isRequired,\n  id: string.isRequired,\n  pristine: bool.isRequired,\n  refetchJobs: func.isRequired,\n  setIsPristine: func.isRequired,\n  submitting: bool.isRequired,\n  values: object.isRequired,\n  submitError: array\n};\nexport default JobEditForm;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { useParams } from 'react-router-dom';\nimport { useUpdateJob } from '../../hooks/jobs';\nimport { hooks } from '../Store';\nimport JobEditForm from './JobEditForm';\nconst {\n  Form\n} = ReactFinalForm;\n/**\n * The fields we need for the initialValues for our form fields. Since we use\n * these values to set the initial values in final-form, if we wouldn't filter\n * them we'd end up submitting way more data than we intend to.\n */\n\nconst initialFields = ['cronExpression', 'delay', 'jobParameters', 'jobType', 'name', 'schedulingType'];\n\nconst JobEditFormContainer = ({\n  setIsPristine\n}) => {\n  const {\n    id\n  } = useParams();\n  const [updateJob] = useUpdateJob({\n    id\n  });\n  const refetchJobs = hooks.useRefetchJobs();\n  const job = hooks.useJob(id); // Creating an object with just the values we want to use as initial values\n\n  const initialValues = initialFields.reduce((filtered, key) => {\n    filtered[key] = job[key];\n    return filtered;\n  }, {});\n  /**\n   * destroyOnUnregister is enabled so that dynamic fields will be unregistered\n   * when they're removed from the form, for instance when the jobType changes.\n   */\n\n  /* istanbul ignore next: we're testing this section, but coverage reporting seems to disagree */\n\n  return React.createElement(Form, {\n    onSubmit: updateJob,\n    component: JobEditForm,\n    setIsPristine: setIsPristine,\n    initialValues: initialValues,\n    id: id,\n    refetchJobs: refetchJobs,\n    destroyOnUnregister: true\n  });\n};\n\nconst {\n  func\n} = PropTypes;\nJobEditFormContainer.propTypes = {\n  setIsPristine: func.isRequired\n};\nexport default JobEditFormContainer;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport { jobStatusMap } from '../../services/server-translations';\nimport styles from './JobDetails.module.css';\n\nconst JobDetails = ({\n  created,\n  lastExecutedStatus,\n  lastExecuted\n}) => {\n  // Using Date.now allows for easier mocking\n  const now = Date.now();\n  const createdFromNow = moment(created).from(now);\n  const translatedStatus = jobStatusMap[lastExecutedStatus];\n  const lastRunFromNow = lastExecuted ? moment(lastExecuted).from(now) : '';\n  return React.createElement(\"div\", {\n    className: styles.wrapper\n  }, React.createElement(\"h4\", {\n    className: styles.title\n  }, i18n.t('Job details')), React.createElement(\"div\", {\n    className: styles.details\n  }, React.createElement(\"div\", null, i18n.t('Created {{ createdFromNow }}.', {\n    createdFromNow\n  })), lastRunFromNow && React.createElement(\"div\", null, i18n.t('Last run {{ lastRunFromNow }}.', {\n    lastRunFromNow\n  })), translatedStatus && React.createElement(\"div\", null, i18n.t('Last run status: {{ translatedStatus }}.', {\n    translatedStatus,\n    nsSeparator: '>'\n  }))));\n};\n\nconst {\n  string\n} = PropTypes;\nJobDetails.propTypes = {\n  created: string.isRequired,\n  lastExecutedStatus: string.isRequired,\n  lastExecuted: string\n};\nexport default JobDetails;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Card, IconInfo16 } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { DiscardFormButton } from '../../components/Buttons';\nimport { JobEditFormContainer } from '../../components/Forms';\nimport { JobDetails } from '../../components/JobDetails';\nimport styles from './JobEdit.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobEdit = ({\n  isPristine,\n  setIsPristine,\n  name,\n  created,\n  lastExecutedStatus,\n  lastExecuted\n}) => React.createElement(React.Fragment, null, React.createElement(\"header\", {\n  className: styles.pageHeader\n}, React.createElement(DiscardFormButton, {\n  shouldConfirm: !isPristine,\n  className: styles.pageHeaderButton,\n  small: true\n}, i18n.t('Back to all jobs')), React.createElement(\"h2\", {\n  className: styles.pageHeaderTitle\n}, i18n.t('Job: {{ name }}', {\n  name,\n  nsSeparator: '>'\n}))), React.createElement(Card, {\n  className: styles.card\n}, React.createElement(\"header\", {\n  className: styles.cardHeader\n}, React.createElement(\"h3\", {\n  className: styles.cardHeaderTitle\n}, i18n.t('Configuration')), React.createElement(\"a\", {\n  href: infoLink,\n  className: styles.cardHeaderLink,\n  target: \"_blank\",\n  rel: \"noopener noreferrer\"\n}, React.createElement(\"span\", {\n  className: styles.cardHeaderInfo\n}, React.createElement(IconInfo16, null)), i18n.t('About job configuration'))), React.createElement(\"div\", {\n  className: styles.jobDetails\n}, React.createElement(JobDetails, {\n  created: created,\n  lastExecutedStatus: lastExecutedStatus,\n  lastExecuted: lastExecuted\n})), React.createElement(JobEditFormContainer, {\n  setIsPristine: setIsPristine\n})));\n\nconst {\n  bool,\n  func,\n  string\n} = PropTypes;\nJobEdit.propTypes = {\n  created: string.isRequired,\n  isPristine: bool.isRequired,\n  lastExecuted: string.isRequired,\n  lastExecutedStatus: string.isRequired,\n  name: string.isRequired,\n  setIsPristine: func.isRequired\n};\nexport default JobEdit;","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { hooks } from '../../components/Store';\nimport JobEdit from './JobEdit';\n\nconst JobEditContainer = () => {\n  const [isPristine, setIsPristine] = useState(true);\n  const {\n    id\n  } = useParams();\n  const job = hooks.useJob(id);\n  return React.createElement(JobEdit, {\n    isPristine: isPristine,\n    setIsPristine: setIsPristine,\n    name: job.name,\n    created: job.created,\n    lastExecutedStatus: job.lastExecutedStatus,\n    lastExecuted: job.lastExecuted\n  });\n};\n\nexport default JobEditContainer;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Card, IconInfo16, Box, SingleSelectField, SingleSelectOption, InputField } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../../components/Store';\nimport { DiscardFormButton } from '../../components/Buttons';\nimport { JobDetails } from '../../components/JobDetails';\nimport translateCron from '../../services/translate-cron';\nimport { jobTypesMap } from '../../services/server-translations';\nimport styles from './JobView.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobView = () => {\n  const {\n    id\n  } = useParams();\n  const {\n    name,\n    created,\n    lastExecutedStatus,\n    lastExecuted,\n    jobType,\n    cronExpression\n  } = hooks.useJob(id);\n  return React.createElement(React.Fragment, null, React.createElement(\"header\", {\n    className: styles.pageHeader\n  }, React.createElement(DiscardFormButton, {\n    className: styles.pageHeaderButton,\n    small: true\n  }, i18n.t('Back to all jobs')), React.createElement(\"h2\", {\n    className: styles.pageHeaderTitle\n  }, i18n.t('System job: {{ name }}', {\n    name,\n    nsSeparator: '>'\n  }))), React.createElement(Card, {\n    className: styles.card\n  }, React.createElement(\"header\", {\n    className: styles.cardHeader\n  }, React.createElement(\"h3\", {\n    className: styles.cardHeaderTitle\n  }, i18n.t('Configuration')), React.createElement(\"a\", {\n    href: infoLink,\n    className: styles.cardHeaderLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, React.createElement(\"span\", {\n    className: styles.cardHeaderInfo\n  }, React.createElement(IconInfo16, null)), i18n.t('About job configuration'))), React.createElement(\"div\", {\n    className: styles.jobDetails\n  }, React.createElement(JobDetails, {\n    created: created,\n    lastExecutedStatus: lastExecutedStatus,\n    lastExecuted: lastExecuted\n  })), React.createElement(Box, {\n    maxWidth: \"600px\"\n  }, React.createElement(InputField, {\n    label: i18n.t('Name'),\n    disabled: true,\n    value: name\n  })), React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, React.createElement(SingleSelectField, {\n    label: i18n.t('Job type'),\n    disabled: true,\n    selected: jobType\n  }, React.createElement(SingleSelectOption, {\n    value: jobType,\n    label: jobTypesMap[jobType]\n  }))), React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, React.createElement(InputField, {\n    label: i18n.t('CRON Expression'),\n    disabled: true,\n    value: cronExpression,\n    helpText: translateCron(cronExpression)\n  })), React.createElement(Box, {\n    marginTop: \"24px\"\n  }, React.createElement(DiscardFormButton, null, i18n.t('Back to all jobs')))));\n};\n\nexport default JobView;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Card, IconInfo16 } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { DiscardFormButton } from '../../components/Buttons';\nimport { JobAddFormContainer } from '../../components/Forms';\nimport styles from './JobAdd.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobAdd = ({\n  isPristine,\n  setIsPristine\n}) => React.createElement(React.Fragment, null, React.createElement(\"header\", {\n  className: styles.pageHeader\n}, React.createElement(DiscardFormButton, {\n  shouldConfirm: !isPristine,\n  className: styles.pageHeaderButton,\n  small: true\n}, i18n.t('Back to all jobs')), React.createElement(\"h2\", {\n  className: styles.pageHeaderTitle\n}, i18n.t('New Job'))), React.createElement(Card, {\n  className: styles.card\n}, React.createElement(\"header\", {\n  className: styles.cardHeader\n}, React.createElement(\"h3\", {\n  className: styles.cardHeaderTitle\n}, i18n.t('Configuration')), React.createElement(\"a\", {\n  href: infoLink,\n  className: styles.cardHeaderLink,\n  target: \"_blank\",\n  rel: \"noopener noreferrer\"\n}, React.createElement(\"span\", {\n  className: styles.cardHeaderInfo\n}, React.createElement(IconInfo16, null)), i18n.t('About job configuration'))), React.createElement(JobAddFormContainer, {\n  setIsPristine: setIsPristine\n})));\n\nconst {\n  bool,\n  func\n} = PropTypes;\nJobAdd.propTypes = {\n  isPristine: bool.isRequired,\n  setIsPristine: func.isRequired\n};\nexport default JobAdd;","import React, { useState } from 'react';\nimport JobAdd from './JobAdd';\n\nconst JobAddContainer = () => {\n  const [isPristine, setIsPristine] = useState(true);\n  return React.createElement(JobAdd, {\n    isPristine: isPristine,\n    setIsPristine: setIsPristine\n  });\n};\n\nexport default JobAddContainer;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Router } from 'react-router';\nimport { JobListContainer } from '../../pages/JobList';\nimport { JobEditContainer } from '../../pages/JobEdit';\nimport { JobView } from '../../pages/JobView';\nimport { JobAddContainer } from '../../pages/JobAdd';\nimport history from '../../services/history';\n\nconst Routes = () => React.createElement(Router, {\n  history: history\n}, React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: JobListContainer\n}), React.createElement(Route, {\n  path: \"/edit/:id\",\n  component: JobEditContainer\n}), React.createElement(Route, {\n  path: \"/view/:id\",\n  component: JobView\n}), React.createElement(Route, {\n  path: \"/add\",\n  component: JobAddContainer\n}));\n\nexport default Routes;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { CircularLoader, Layer, CenteredContent, NoticeBox } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport { getAuthorized } from './selectors';\nimport styles from './AuthWall.module.css';\nconst query = {\n  me: {\n    resource: 'me'\n  }\n};\n\nconst AuthWall = ({\n  children\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useDataQuery(query);\n\n  if (loading) {\n    return React.createElement(Layer, null, React.createElement(CenteredContent, null, React.createElement(CircularLoader, null)));\n  }\n\n  if (error) {\n    /**\n     * The app can't continue if this fails, because it doesn't\n     * know if the user is authorized, so throw the error.\n     */\n    throw error;\n  }\n\n  const isAuthorized = getAuthorized(data.me);\n\n  if (!isAuthorized) {\n    return React.createElement(\"div\", {\n      className: styles.noticeBoxWrapper\n    }, React.createElement(NoticeBox, {\n      error: true,\n      title: i18n.t('Not authorized')\n    }, i18n.t(\"You don't have access to the Job Scheduler. Contact a system administrator to request access.\")));\n  }\n\n  return React.createElement(React.Fragment, null, children);\n};\n\nconst {\n  node\n} = PropTypes;\nAuthWall.propTypes = {\n  children: node.isRequired\n};\nexport default AuthWall;","export const getAuthorized = me => {\n  const {\n    authorities\n  } = me;\n\n  if (!authorities) {\n    return false;\n  }\n\n  const isAuthorized = authorities.includes('ALL') || authorities.includes('F_SCHEDULING_ADMIN');\n  return isAuthorized;\n};","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport styles from './PageWrapper.module.css';\n\nconst PageWrapper = ({\n  children\n}) => React.createElement(\"div\", {\n  className: styles.wrapper\n}, children);\n\nconst {\n  node\n} = PropTypes;\nPageWrapper.propTypes = {\n  children: node.isRequired\n};\nexport default PageWrapper;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport bnTranslations from './bn/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('bn', namespace, bnTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { CssVariables } from '@dhis2/ui';\nimport { Routes } from '../Routes';\nimport { AuthWall } from '../AuthWall';\nimport { Store } from '../Store';\nimport { PageWrapper } from '../PageWrapper';\nimport './App.css'; // eslint-disable-next-line import/no-unassigned-import\n\nimport '../../locales'; // The above is necessary for translations to work\n\nconst App = () => React.createElement(React.Fragment, null, React.createElement(CssVariables, {\n  spacers: true,\n  colors: true\n}), React.createElement(PageWrapper, null, React.createElement(AuthWall, null, React.createElement(Store, null, React.createElement(Routes, null)))));\n\nexport default App;"],"sourceRoot":""}