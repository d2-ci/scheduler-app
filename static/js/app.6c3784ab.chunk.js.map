{"version":3,"sources":["D2App/components/LinkButton/LinkButton.module.css","D2App/pages/JobList/JobList.module.css","D2App/components/FormErrorBox/FormErrorBox.module.css","D2App/components/FormFields/DataIntegrityChecksField.module.css","D2App/components/FormFields/ParameterFields.module.css","D2App/components/FormFields/AggregatedDataExchangeField.module.css","D2App/components/Forms/JobAddForm.module.css","D2App/components/Forms/JobEditForm.module.css","D2App/components/JobDetails/JobDetails.module.css","D2App/pages/JobEdit/JobEdit.module.css","D2App/pages/JobView/JobView.module.css","D2App/pages/JobAdd/JobAdd.module.css","D2App/components/AuthWall/AuthWall.module.css","D2App/components/PageWrapper/PageWrapper.module.css","D2App/components/Store/StoreContext.js","D2App/components/Store/Store.js","D2App/components/Store/hooks.js","D2App/services/server-translations/analyticsTableTypes.js","D2App/services/server-translations/jobTypesMap.js","D2App/services/server-translations/jobStatusMap.js","D2App/components/Switches/ToggleJobSwitch.js","D2App/services/history/history.js","D2App/services/history/index.js","D2App/components/JobTable/EditJobAction.js","D2App/components/JobTable/ViewJobAction.js","D2App/components/Modal/CronPresetModal.js","D2App/components/Modal/DeleteJobModal.js","D2App/components/Modal/DiscardFormModal.js","D2App/components/Modal/RunJobModal.js","D2App/components/JobTable/RunJobAction.js","D2App/components/JobTable/DeleteJobAction.js","D2App/components/JobTable/Actions.js","D2App/components/JobTable/Status.js","D2App/components/JobTable/NextRun.js","D2App/services/validators/validate-cron.js","D2App/services/validators/required-cron.js","D2App/services/translate-cron/translate-cron.js","D2App/services/translate-cron/index.js","D2App/components/JobTable/Schedule.js","D2App/components/JobTable/JobTableRow.js","D2App/components/JobTable/JobTable.js","D2App/components/LinkButton/LinkButton.js","D2App/pages/JobList/JobList.js","D2App/pages/JobList/JobListContainer.js","D2App/components/Buttons/CronPresetButton.js","D2App/components/Buttons/DeleteJobButton.js","D2App/components/Buttons/DiscardFormButton.js","D2App/services/format-error/format-error.js","D2App/services/format-error/index.js","D2App/hooks/jobs/use-submit-job.js","D2App/hooks/jobs/use-update-job.js","D2App/components/FormErrorBox/FormErrorBox.js","D2App/components/FormFields/JobNameField.js","D2App/components/FormFields/JobTypeField.js","D2App/components/FormFields/formatters.js","D2App/components/FormFields/SkipTableTypesField.js","D2App/components/FormFields/LabeledOptionsField.js","D2App/services/server-translations/dataIntegrityChecks.js","D2App/components/FormFields/DataIntegrityChecksField.js","D2App/components/FormFields/DataIntegrityReportTypeField.js","D2App/components/FormFields/AggregatedDataExchangeField.js","D2App/components/FormFields/ParameterFields.js","D2App/components/FormFields/CronField.js","D2App/components/FormFields/DelayField.js","D2App/components/FormFields/ScheduleField.js","D2App/components/FormFields/index.js","D2App/components/Forms/JobAddForm.js","D2App/components/Forms/JobAddFormContainer.js","D2App/components/Forms/JobEditForm.js","D2App/components/Forms/JobEditFormContainer.js","D2App/components/JobDetails/JobDetails.js","D2App/pages/JobEdit/JobEdit.js","D2App/pages/JobEdit/JobEditContainer.js","D2App/pages/JobView/JobView.js","D2App/pages/JobAdd/JobAdd.js","D2App/pages/JobAdd/JobAddContainer.js","D2App/components/Routes/Routes.js","D2App/components/AuthWall/AuthWall.js","D2App/components/AuthWall/selectors.js","D2App/components/PageWrapper/PageWrapper.js","D2App/locales/index.js","D2App/components/App/App.js"],"names":["module","exports","StoreContext","createContext","jobs","jobTypes","parameterOptions","refetchJobs","Error","jobsQuery","resource","params","fields","paging","jobTypesQuery","optionsQuery","skipTableTypes","validationRuleGroups","pushAnalysis","predictors","predictorGroups","dataIntegrityChecks","node","PropTypes","Store","_ref","children","jobFilterState","useState","showSystemJobsState","jobsFetch","useDataQuery","jobTypesFetch","optionsFetch","loading","React","createElement","Layer","CenteredContent","CircularLoader","error","jobConfigurations","data","Provider","value","refetch","jobFilter","showSystemJobs","useAllJobs","useContext","useAllParameterOptions","useAllJobTypes","useRefetchJobs","useJobFilter","useShowSystemJobs","useJobListJobs","filter","job","displayName","toLowerCase","includes","configurable","useJob","id","find","useJobType","jobType","useJobTypeParameters","selectedJobType","jobParameters","useParameterOptions","parameter","analyticsTableTypes","DATA_VALUE","i18n","t","COMPLETENESS","COMPLETENESS_TARGET","ORG_UNIT_TARGET","EVENT","ENROLLMENT","VALIDATION_RESULT","jobTypesMap","ACCOUNT_EXPIRY_ALERT","AGGREGATE_DATA_EXCHANGE","ANALYTICS_TABLE","ANALYTICSTABLE_UPDATE","COMPLETE_DATA_SET_REGISTRATION_IMPORT","CONTINUOUS_ANALYTICS_TABLE","CREDENTIALS_EXPIRY_ALERT","DATA_INTEGRITY","DATA_SET_NOTIFICATION","DATA_STATISTICS","DATA_SYNC","DATAVALUE_IMPORT","DATAVALUE_IMPORT_INTERNAL","DISABLE_INACTIVE_USERS","ENROLLMENT_IMPORT","EVENT_IMPORT","EVENT_PROGRAMS_DATA_SYNC","FILE_RESOURCE_CLEANUP","GEOJSON_IMPORT","GML_IMPORT","IMAGE_PROCESSING","LEADER_ELECTION","LEADER_RENEWAL","METADATA_IMPORT","META_DATA_SYNC","MOCK","MONITORING","PREDICTOR","PROGRAM_DATA_SYNC","PROGRAM_NOTIFICATIONS","PUSH_ANALYSIS","REMOVE_EXPIRED_RESERVED_VALUES","REMOVE_USED_OR_EXPIRED_RESERVED_VALUES","RESOURCE_TABLE","SEND_SCHEDULED_MESSAGE","SMS_SEND","SYSTEM_VERSION_UPDATE_CHECK","TEI_IMPORT","TRACKER_IMPORT_JOB","TRACKER_IMPORT_NOTIFICATION_JOB","TRACKER_IMPORT_RULE_ENGINE_JOB","TRACKER_PROGRAMS_DATA_SYNC","TRACKER_SEARCH_OPTIMIZATION","VALIDATION_RESULTS_NOTIFICATION","jobStatusMap","COMPLETED","DISABLED","DONE","FAILED","NOT_STARTED","RUNNING","SCHEDULED","STOPPED","mutation","type","partial","_ref2","enabled","bool","string","ToggleJobSwitch","_ref3","checked","disabled","toggleJob","useDataMutation","hooks","Switch","name","onChange","then","ariaLabel","history","createHashHistory","EditJobAction","MenuItem","dense","onClick","push","label","ViewJobAction","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","cronPresets","func","CronPresetModal","setCron","hideModal","currentPreset","setCurrentPreset","Modal","open","small","onClose","ModalTitle","ModalContent","map","preset","Radio","ModalActions","ButtonStrip","end","Button","secondary","primary","DeleteJobModal","onSuccess","deleteJob","destructive","DiscardFormModal","RunJobModal","runJob","onComplete","NoticeBox","title","message","RunJobAction","showModal","setShowModal","Fragment","DeleteJobAction","Actions","DropdownButton","component","FlyoutMenu","defaultProps","Status","status","Tag","neutral","negative","positive","NextRun","nextExecutionTime","fromServerDate","useTimeZoneConversion","now","Date","nextRun","getTime","Tooltip","content","moment","fromNow","dhis2Date","getServerZonedISOString","substring","split","join","serverTimezone","WEEKDAYS","MONTHS","isValidNumber","number","x","y","isWildcard","field","isUndefined","isValidNumberRange","range","boundaries","isValidWithinRange","fraction","components","isValidFraction","isValidMonthField","months","firstMonth","secondMonth","m","indexOf","undefined","isAlphabeticMonth","isValidWeekdayField","weekdays","firstDay","secondDay","c","isAlphabeticWeekday","validateCron","exp","trim","isValidFields","isValidMinuteField","isValidHourField","isValidDayField","requiredCron","translateCron","cron","locale","language","cronstrue","toString","Schedule","cronExpression","schedulingType","delay","propTypes","isRequired","shape","JobTableRow","jobStatus","TableRow","TableCell","role","object","arrayOf","JobTable","Table","TableHead","TableRowHead","TableCellHead","TableBody","LinkButton","className","rest","Link","cx","styles","linkButton","JobList","setShowSystemJobs","setJobFilter","header","headerTitle","href","headerLink","rel","headerLinkIcon","IconInfo16","Card","controlContainer","InputField","dataTest","controlRight","Checkbox","to","JobListContainer","CronPresetButton","DeleteJobButton","DiscardFormButton","shouldConfirm","FORM_ERROR","FinalForm","formatError","details","response","validationErrors","genericErrors","errorReports","forEach","report","errorProperty","useSubmitJob","engine","useDataEngine","mutate","variables","catch","useUpdateJob","array","FormErrorBox","submitError","list","Field","ReactFinalForm","VALIDATOR","composeValidators","hasValue","JobNameField","InputFieldFF","validate","required","FIELD_NAME","JobTypeField","options","sort","job1","job2","localeCompare","SingleSelectFieldFF","formatToString","SkipTableTypesField","parameterName","MultiSelectField","helpText","translatedOptions","option","MultiSelectFieldFF","LabeledOptionsField","labeledOptions","severityMap","WARNING","SEVERE","reportTypeMap","REPORT","SUMMARY","DETAILS","getReportTypeLabel","first","toUpperCase","concat","slice","snakeCaseToHumanReadable","useField","LabelComponent","severity","highlighted","transferOption","optionName","optionSeverity","renderOption","TransferOption","ChecksTransfer","_ref4","input","meta","hidden","handleChange","useCallback","_ref5","selected","isErr","touched","invalid","Transfer","maxSelections","Infinity","enableOrderChange","filterable","height","selectedEmptyComponent","SelectedEmptyComponent","transfer","Help","DataIntegrityChecksField","runSelected","setRunSelected","a","b","toggle","runSelectedChecked","FieldGroup","DataIntegrityReportTypeField","constants","initialValue","query","dataExchangeIds","AggregatedDataExchangeField","_data$dataExchangeIds","_data$dataExchangeIds2","_meta$error","beforeSubmit","_error$details","_error$details2","aggregateDataExchanges","exchangeIds","validationText","JOB_TYPES","ParameterFields","parameters","parameterComponents","fieldName","klass","parameterProps","parameterComponent","CustomParameterComponent","getCustomComponent","Box","marginTop","SwitchFieldFF","format","useFormState","useForm","CronField","form","values","subscription","change","integer","createNumberRange","DelayField","lowerbound","upperbound","ScheduleField","fieldNames","JOB_TYPE","JobAddForm","handleSubmit","pristine","submitting","hasSubmitErrors","setIsPristine","subscribe","useEffect","Spinner","onSubmit","maxWidth","formButtonContainer","icon","saveButton","Form","JobAddFormContainer","submitJob","destroyOnUnregister","JobEditForm","deleteButton","initialFields","JobEditFormContainer","useParams","updateJob","initialValues","reduce","filtered","JobDetails","created","lastExecutedStatus","lastExecuted","createdFromNow","from","translatedStatus","lastRunFromNow","wrapper","nsSeparator","JobEdit","isPristine","pageHeader","pageHeaderButton","pageHeaderTitle","card","cardHeader","cardHeaderTitle","cardHeaderLink","cardHeaderInfo","jobDetails","JobEditContainer","JobView","SingleSelectField","SingleSelectOption","JobAdd","JobAddContainer","Routes","Router","Route","exact","path","me","AuthWall","authorities","getAuthorized","noticeBoxWrapper","PageWrapper","namespace","addResources","arTranslations","ar_IQTranslations","bnTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","es_419Translations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","nlTranslations","orTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","roTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","App","CssVariables","spacers","colors","theme"],"mappings":"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","file":"static/js/app.6c3784ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkButton\":\"LinkButton_linkButton__3VZ1s\",\"small\":\"LinkButton_small__v52sS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"JobList_header__23tFt\",\"headerTitle\":\"JobList_headerTitle__21D__\",\"headerLink\":\"JobList_headerLink__2zepi\",\"headerLinkIcon\":\"JobList_headerLinkIcon__XdfBB\",\"controlContainer\":\"JobList_controlContainer__3Yzj_\",\"controlRight\":\"JobList_controlRight__38lfB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FormErrorBox_list__3BejY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transfer\":\"DataIntegrityChecksField_transfer__3iNhL\",\"transferOption\":\"DataIntegrityChecksField_transferOption__196nJ\",\"optionName\":\"DataIntegrityChecksField_optionName__1FPq_\",\"optionSeverity\":\"DataIntegrityChecksField_optionSeverity__1ko-k\",\"highlighted\":\"DataIntegrityChecksField_highlighted__o3WxL\",\"selectedEmptyComponent\":\"DataIntegrityChecksField_selectedEmptyComponent__1nkdC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerTitle\":\"ParameterFields_headerTitle__IBF76\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"AggregatedDataExchangeField_field__3fdB6\",\"selectedEmptyComponent\":\"AggregatedDataExchangeField_selectedEmptyComponent__21mzv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButtonContainer\":\"JobAddForm_formButtonContainer__1MLSp\",\"saveButton\":\"JobAddForm_saveButton__RfxZ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButtonContainer\":\"JobEditForm_formButtonContainer__2b6Fi\",\"deleteButton\":\"JobEditForm_deleteButton__VQxBE\",\"saveButton\":\"JobEditForm_saveButton__278Ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"JobDetails_wrapper__1-YkO\",\"title\":\"JobDetails_title__1Cht7\",\"details\":\"JobDetails_details__2HITJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"JobEdit_pageHeader__3Fywp\",\"pageHeaderButton\":\"JobEdit_pageHeaderButton__29yjJ\",\"pageHeaderTitle\":\"JobEdit_pageHeaderTitle__jZrIG\",\"card\":\"JobEdit_card__2QqEg\",\"cardHeader\":\"JobEdit_cardHeader__Mv_cj\",\"cardHeaderTitle\":\"JobEdit_cardHeaderTitle__29Y64\",\"cardHeaderInfo\":\"JobEdit_cardHeaderInfo__3VWZt\",\"cardHeaderLink\":\"JobEdit_cardHeaderLink__2frj7\",\"jobDetails\":\"JobEdit_jobDetails__194v-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"JobView_pageHeader__3d3IR\",\"pageHeaderButton\":\"JobView_pageHeaderButton__2VF9Z\",\"pageHeaderTitle\":\"JobView_pageHeaderTitle__3wHyg\",\"card\":\"JobView_card__3LlD0\",\"cardHeader\":\"JobView_cardHeader__3v0pX\",\"cardHeaderTitle\":\"JobView_cardHeaderTitle__tPEnV\",\"cardHeaderInfo\":\"JobView_cardHeaderInfo__j1GsD\",\"cardHeaderLink\":\"JobView_cardHeaderLink__86M36\",\"jobDetails\":\"JobView_jobDetails__3cu4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"JobAdd_pageHeader__2NZzc\",\"pageHeaderButton\":\"JobAdd_pageHeaderButton__Xg_R9\",\"pageHeaderTitle\":\"JobAdd_pageHeaderTitle__1RMl0\",\"card\":\"JobAdd_card__1HH6H\",\"cardHeader\":\"JobAdd_cardHeader__1D3sS\",\"cardHeaderTitle\":\"JobAdd_cardHeaderTitle__2TG9a\",\"cardHeaderInfo\":\"JobAdd_cardHeaderInfo__vq_Y1\",\"cardHeaderLink\":\"JobAdd_cardHeaderLink__2CzPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeBoxWrapper\":\"AuthWall_noticeBoxWrapper__1ums5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PageWrapper_wrapper__t-CJy\"};","import { createContext } from 'react';\nconst StoreContext = /*#__PURE__*/createContext({\n  jobs: {},\n  jobTypes: {},\n  parameterOptions: {},\n  refetchJobs: () => {\n    throw new Error('Store context needs a valid provider');\n  }\n});\nexport default StoreContext;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { CircularLoader, Layer, CenteredContent } from '@dhis2/ui';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport StoreContext from './StoreContext';\nconst jobsQuery = {\n  jobs: {\n    resource: 'jobConfigurations',\n    params: {\n      fields: '*',\n      paging: false\n    }\n  }\n};\nconst jobTypesQuery = {\n  jobTypes: {\n    resource: 'jobConfigurations/jobTypes',\n    params: {\n      fields: '*',\n      paging: false\n    }\n  }\n};\nconst optionsQuery = {\n  // Used by the ANALYTICS_TABLE and CONTINUOUS_ANALYTICS_TABLE job types\n  skipTableTypes: {\n    resource: 'analytics/tableTypes'\n  },\n  // Used by the MONITORING job type\n  validationRuleGroups: {\n    resource: 'validationRuleGroups',\n    params: {\n      paging: false\n    }\n  },\n  // Used by the PUSH_ANALYSIS job type\n  pushAnalysis: {\n    resource: 'pushAnalysis',\n    params: {\n      paging: false\n    }\n  },\n  // Used by the PREDICTOR job type\n  predictors: {\n    resource: 'predictors',\n    params: {\n      paging: false\n    }\n  },\n  predictorGroups: {\n    resource: 'predictorGroups',\n    params: {\n      paging: false\n    }\n  },\n  dataIntegrityChecks: {\n    resource: 'dataIntegrity'\n  }\n};\n\nconst Store = _ref => {\n  let {\n    children\n  } = _ref;\n  // State that should persist after a refetch\n  const jobFilterState = useState('');\n  const showSystemJobsState = useState(false);\n  const jobsFetch = useDataQuery(jobsQuery);\n  const jobTypesFetch = useDataQuery(jobTypesQuery);\n  const optionsFetch = useDataQuery(optionsQuery);\n  const loading = jobsFetch.loading || jobTypesFetch.loading || optionsFetch.loading;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Layer, null, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  const error = jobsFetch.error || jobTypesFetch.error || optionsFetch.error;\n\n  if (error) {\n    /**\n     * The app can't continue if this fails, because it doesn't\n     * have any data, so throw the error.\n     */\n    throw error;\n  }\n\n  const {\n    jobConfigurations: jobs\n  } = jobsFetch.data.jobs;\n  const {\n    jobTypes\n  } = jobTypesFetch.data.jobTypes;\n  const {\n    skipTableTypes,\n    validationRuleGroups: {\n      validationRuleGroups\n    },\n    pushAnalysis: {\n      pushAnalysis\n    },\n    predictors: {\n      predictors\n    },\n    predictorGroups: {\n      predictorGroups\n    },\n    dataIntegrityChecks\n  } = optionsFetch.data;\n  const parameterOptions = {\n    skipTableTypes,\n    validationRuleGroups,\n    pushAnalysis,\n    predictors,\n    predictorGroups,\n    dataIntegrityChecks\n  };\n  return /*#__PURE__*/React.createElement(StoreContext.Provider, {\n    value: {\n      jobs,\n      jobTypes,\n      parameterOptions,\n      refetchJobs: jobsFetch.refetch,\n      jobFilter: jobFilterState,\n      showSystemJobs: showSystemJobsState\n    }\n  }, children);\n};\n\nconst {\n  node\n} = PropTypes;\nStore.propTypes = {\n  children: node.isRequired\n};\nexport default Store;","import { useContext } from 'react';\nimport StoreContext from './StoreContext';\nexport const useAllJobs = () => {\n  const store = useContext(StoreContext);\n  return store.jobs;\n};\nexport const useAllParameterOptions = () => {\n  const store = useContext(StoreContext);\n  return store.parameterOptions;\n};\nexport const useAllJobTypes = () => {\n  const store = useContext(StoreContext);\n  return store.jobTypes;\n};\nexport const useRefetchJobs = () => {\n  const store = useContext(StoreContext);\n  return store.refetchJobs;\n};\n/**\n * The state for the job filter and showing system\n * jobs is used in the job list, but kept in the\n * store since it has to persist after a refetch.\n */\n\nexport const useJobFilter = () => {\n  const store = useContext(StoreContext);\n  return store.jobFilter;\n};\nexport const useShowSystemJobs = () => {\n  const store = useContext(StoreContext);\n  return store.showSystemJobs;\n};\n/**\n * This hook returns the list of jobs that's shown in the\n * job list route. The list is filtered by the job filter\n * string and the show system jobs toggle from the store\n * state.\n */\n\nexport const useJobListJobs = () => {\n  const [jobFilter] = useJobFilter();\n  const [showSystemJobs] = useShowSystemJobs();\n  const jobs = useAllJobs(); // Filter jobs by the current jobFilter\n\n  const applyJobFilter = job => job.displayName.toLowerCase().includes(jobFilter.toLowerCase()); // Filter jobs depending on the current showSystemJobs\n\n\n  const applyShowSystemJobs = job => // Jobs that are configurable are user jobs\n  showSystemJobs ? true : job.configurable;\n\n  return jobs.filter(applyJobFilter).filter(applyShowSystemJobs);\n}; // Finds a job by id\n\nexport const useJob = id => {\n  const jobs = useAllJobs();\n  return jobs.find(job => job.id === id);\n}; // Finds a jobType by the jobType string\n\nexport const useJobType = jobType => {\n  const jobTypes = useAllJobTypes();\n  return jobTypes.find(job => job.jobType === jobType);\n}; // Returns an array with all parameters for a certain jobType\n\nexport const useJobTypeParameters = jobType => {\n  const selectedJobType = useJobType(jobType);\n  const hasParameters = ('jobParameters' in selectedJobType);\n\n  if (!hasParameters) {\n    return [];\n  }\n\n  return selectedJobType.jobParameters;\n}; // Returns the parameter options for a given parameter\n\nexport const useParameterOptions = parameter => {\n  const parameterOptions = useAllParameterOptions();\n  return parameterOptions[parameter];\n};","import i18n from '@dhis2/d2-i18n';\nconst analyticsTableTypes = {\n  DATA_VALUE: i18n.t('Data value'),\n  COMPLETENESS: i18n.t('Completeness'),\n  COMPLETENESS_TARGET: i18n.t('Completeness target'),\n  ORG_UNIT_TARGET: i18n.t('Org unit target'),\n  EVENT: i18n.t('Event'),\n  ENROLLMENT: i18n.t('Enrollment'),\n  VALIDATION_RESULT: i18n.t('Validation result')\n};\nexport default analyticsTableTypes;","import i18n from '@dhis2/d2-i18n';\nconst jobTypesMap = {\n  ACCOUNT_EXPIRY_ALERT: i18n.t('Account expiry alert'),\n  AGGREGATE_DATA_EXCHANGE: i18n.t('Exchange aggregate data'),\n  ANALYTICS_TABLE: i18n.t('Analytics table'),\n  ANALYTICSTABLE_UPDATE: i18n.t('Analyticstable update'),\n  COMPLETE_DATA_SET_REGISTRATION_IMPORT: i18n.t('Complete data set registration import'),\n  CONTINUOUS_ANALYTICS_TABLE: i18n.t('Continuous analytics table'),\n  CREDENTIALS_EXPIRY_ALERT: i18n.t('Credentials expiry alert'),\n  DATA_INTEGRITY: i18n.t('Data integrity'),\n  DATA_SET_NOTIFICATION: i18n.t('Dataset notification'),\n  DATA_STATISTICS: i18n.t('Data statistics'),\n  DATA_SYNC: i18n.t('Data synchronization'),\n  DATAVALUE_IMPORT: i18n.t('Datavalue import'),\n  DATAVALUE_IMPORT_INTERNAL: i18n.t('Datavalue import internal'),\n  DISABLE_INACTIVE_USERS: i18n.t('Disable inactive users'),\n  ENROLLMENT_IMPORT: i18n.t('Enrollment import'),\n  EVENT_IMPORT: i18n.t('Event import'),\n  EVENT_PROGRAMS_DATA_SYNC: i18n.t('Event programs data sync'),\n  FILE_RESOURCE_CLEANUP: i18n.t('File resource clean up'),\n  GEOJSON_IMPORT: i18n.t('GEOJSON import'),\n  GML_IMPORT: i18n.t('GML import'),\n  IMAGE_PROCESSING: i18n.t('Image processing'),\n  LEADER_ELECTION: i18n.t('Leader election'),\n  LEADER_RENEWAL: i18n.t('Leader renewal'),\n  METADATA_IMPORT: i18n.t('Metadata import'),\n  META_DATA_SYNC: i18n.t('Metadata synchronization'),\n  MOCK: i18n.t('Mock'),\n  MONITORING: i18n.t('Monitoring'),\n  PREDICTOR: i18n.t('Predictor'),\n  PROGRAM_DATA_SYNC: i18n.t('Program data sync'),\n  PROGRAM_NOTIFICATIONS: i18n.t('Program notifications'),\n  PUSH_ANALYSIS: i18n.t('Push analysis'),\n  REMOVE_EXPIRED_RESERVED_VALUES: i18n.t('Remove expired reserved values'),\n  REMOVE_USED_OR_EXPIRED_RESERVED_VALUES: i18n.t('Remove used or expired reserved values'),\n  RESOURCE_TABLE: i18n.t('Resource table'),\n  SEND_SCHEDULED_MESSAGE: i18n.t('Send scheduled message'),\n  SMS_SEND: i18n.t('SMS send'),\n  SYSTEM_VERSION_UPDATE_CHECK: i18n.t('System version update check'),\n  TEI_IMPORT: i18n.t('TEI import'),\n  TRACKER_IMPORT_JOB: i18n.t('Tracker import job'),\n  TRACKER_IMPORT_NOTIFICATION_JOB: i18n.t('Tracker import notification job'),\n  TRACKER_IMPORT_RULE_ENGINE_JOB: i18n.t('Tracker import rule engine job'),\n  TRACKER_PROGRAMS_DATA_SYNC: i18n.t('Tracker programs data sync'),\n  TRACKER_SEARCH_OPTIMIZATION: i18n.t('Tracker search optimization'),\n  VALIDATION_RESULTS_NOTIFICATION: i18n.t('Validation results notification')\n};\nexport default jobTypesMap;","import i18n from '@dhis2/d2-i18n';\nconst jobStatusMap = {\n  COMPLETED: i18n.t('Completed'),\n  DISABLED: i18n.t('Disabled'),\n  DONE: i18n.t('Done'),\n  FAILED: i18n.t('Failed'),\n  NOT_STARTED: i18n.t('Not started'),\n  RUNNING: i18n.t('Running'),\n  SCHEDULED: i18n.t('Scheduled'),\n  STOPPED: i18n.t('Stopped')\n};\nexport default jobStatusMap;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { useDataMutation } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '@dhis2/ui';\nimport { hooks } from '../Store';\n/* istanbul ignore next */\n\nconst mutation = {\n  resource: 'jobConfigurations',\n  id: _ref => {\n    let {\n      id\n    } = _ref;\n    return id;\n  },\n  type: 'update',\n  partial: true,\n  data: _ref2 => {\n    let {\n      enabled\n    } = _ref2;\n    return {\n      enabled\n    };\n  }\n};\n\nconst ToggleJobSwitch = _ref3 => {\n  let {\n    id,\n    checked,\n    disabled\n  } = _ref3;\n  const [toggleJob, {\n    loading\n  }] = useDataMutation(mutation);\n  const refetchJobs = hooks.useRefetchJobs();\n  const enabled = !checked;\n  return /*#__PURE__*/React.createElement(Switch, {\n    name: `toggle-job-${id}`,\n    disabled: disabled || loading,\n    checked: checked,\n    onChange: () => {\n      toggleJob({\n        id,\n        enabled\n      }).then(() => refetchJobs());\n    },\n    ariaLabel: i18n.t('Toggle job')\n  });\n};\n\nconst {\n  bool,\n  string\n} = PropTypes;\nToggleJobSwitch.propTypes = {\n  checked: bool.isRequired,\n  disabled: bool.isRequired,\n  id: string.isRequired\n};\nexport default ToggleJobSwitch;","import { createHashHistory } from 'history';\nconst history = createHashHistory();\nexport default history;","import history from './history';\nexport default history;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport history from '../../services/history';\n\nconst EditJobAction = _ref => {\n  let {\n    id\n  } = _ref;\n  return /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    onClick: () => history.push(`/edit/${id}`),\n    label: i18n.t('Edit')\n  });\n};\n\nconst {\n  string\n} = PropTypes;\nEditJobAction.propTypes = {\n  id: string.isRequired\n};\nexport default EditJobAction;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport history from '../../services/history';\n\nconst ViewJobAction = _ref => {\n  let {\n    id\n  } = _ref;\n  return /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    onClick: () => history.push(`/view/${id}`),\n    label: i18n.t('View')\n  });\n};\n\nconst {\n  string\n} = PropTypes;\nViewJobAction.propTypes = {\n  id: string.isRequired\n};\nexport default ViewJobAction;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip, Radio } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nconst cronPresets = [{\n  label: i18n.t('Every hour'),\n  value: '0 0 * ? * *'\n}, {\n  label: i18n.t('Every day at midnight'),\n  value: '0 0 1 ? * *'\n}, {\n  label: i18n.t('Every day at 3 am'),\n  value: '0 0 3 ? * *'\n}, {\n  label: i18n.t('Every day at noon'),\n  value: '0 0 12 ? * MON-FRI'\n}, {\n  label: i18n.t('Every week'),\n  value: '0 0 3 ? * MON'\n}];\n\nconst CronPresetModal = _ref => {\n  let {\n    setCron,\n    hideModal\n  } = _ref;\n  const [currentPreset, setCurrentPreset] = useState('');\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: true,\n    small: true,\n    onClose: hideModal\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Choose a preset time/interval')), /*#__PURE__*/React.createElement(ModalContent, null, cronPresets.map(preset => /*#__PURE__*/React.createElement(Radio, _extends({}, preset, {\n    checked: currentPreset === preset.value,\n    key: preset.value,\n    onChange: _ref2 => {\n      let {\n        value\n      } = _ref2;\n      return setCurrentPreset(value);\n    }\n  })))), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, {\n    end: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: hideModal,\n    name: \"hide-modal\"\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    name: \"insert-preset\",\n    disabled: !currentPreset,\n    onClick: () => {\n      hideModal();\n      setCron(currentPreset);\n    }\n  }, i18n.t('Insert preset')))));\n};\n\nconst {\n  func\n} = PropTypes;\nCronPresetModal.propTypes = {\n  hideModal: func.isRequired,\n  setCron: func.isRequired\n};\nexport default CronPresetModal;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataMutation } from '@dhis2/app-runtime';\nconst mutation = {\n  resource: 'jobConfigurations',\n  id:\n  /* istanbul ignore next */\n  _ref => {\n    let {\n      id\n    } = _ref;\n    return id;\n  },\n  type: 'delete'\n};\n\nconst DeleteJobModal = _ref2 => {\n  let {\n    id,\n    hideModal,\n    onSuccess\n  } = _ref2;\n  const [deleteJob] = useDataMutation(mutation);\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: true,\n    small: true,\n    onClose: hideModal\n  }, /*#__PURE__*/React.createElement(ModalContent, null, i18n.t('Are you sure you want to delete this job?')), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, {\n    end: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    name: \"hide-modal\",\n    secondary: true,\n    onClick: hideModal\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    name: `delete-job-${id}`,\n    destructive: true,\n    onClick: () => {\n      deleteJob({\n        id\n      }).then(() => {\n        hideModal();\n        onSuccess();\n      });\n    }\n  }, i18n.t('Delete')))));\n};\n\nconst {\n  func,\n  string\n} = PropTypes;\nDeleteJobModal.propTypes = {\n  hideModal: func.isRequired,\n  id: string.isRequired,\n  onSuccess: func.isRequired\n};\nexport default DeleteJobModal;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport history from '../../services/history';\n\nconst DiscardFormModal = _ref => {\n  let {\n    hideModal\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: true,\n    small: true,\n    onClose: hideModal\n  }, /*#__PURE__*/React.createElement(ModalContent, null, i18n.t('Are you sure you want to discard this form?')), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, {\n    end: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    name: \"cancel-discard-form\",\n    secondary: true,\n    onClick: hideModal\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    name: \"discard-form\",\n    destructive: true,\n    onClick: () => {\n      hideModal();\n      history.push('/');\n    }\n  }, i18n.t('Discard')))));\n};\n\nconst {\n  func\n} = PropTypes;\nDiscardFormModal.propTypes = {\n  hideModal: func.isRequired\n};\nexport default DiscardFormModal;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { useDataMutation } from '@dhis2/app-runtime';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, NoticeBox } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../Store';\n\nconst RunJobModal = _ref => {\n  let {\n    id,\n    hideModal\n  } = _ref;\n  const [mutation] = useState({\n    resource: `jobConfigurations/${id}/execute`,\n    type: 'create'\n  });\n  const [runJob, {\n    loading,\n    error\n  }] = useDataMutation(mutation, {\n    onComplete: () => {\n      hideModal();\n      refetchJobs();\n    }\n  });\n  const refetchJobs = hooks.useRefetchJobs();\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: true,\n    small: true,\n    onClose: hideModal\n  }, /*#__PURE__*/React.createElement(ModalContent, null, error && /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Error running job')\n  }, error.message), /*#__PURE__*/React.createElement(\"p\", null, i18n.t('Are you sure you want to run this job?'))), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, {\n    end: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    name: \"hide-modal\",\n    secondary: true,\n    onClick: hideModal,\n    disabled: loading\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    name: `run-job-${id}`,\n    primary: true,\n    onClick: runJob,\n    loading: loading\n  }, i18n.t('Run')))));\n};\n\nconst {\n  func,\n  string\n} = PropTypes;\nRunJobModal.propTypes = {\n  hideModal: func.isRequired,\n  id: string.isRequired\n};\nexport default RunJobModal;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../Store';\nimport { RunJobModal } from '../Modal';\n\nconst RunJobAction = _ref => {\n  let {\n    id\n  } = _ref;\n  const {\n    enabled\n  } = hooks.useJob(id);\n  const [showModal, setShowModal] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    onClick: () => {\n      setShowModal(true);\n    },\n    disabled: !enabled,\n    label: i18n.t('Run manually')\n  }), showModal && /*#__PURE__*/React.createElement(RunJobModal, {\n    id: id,\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false)\n  }));\n};\n\nconst {\n  string\n} = PropTypes;\nRunJobAction.propTypes = {\n  id: string.isRequired\n};\nexport default RunJobAction;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { DeleteJobModal } from '../Modal';\nimport { hooks } from '../Store';\n\nconst DeleteJobAction = _ref => {\n  let {\n    id\n  } = _ref;\n  const [showModal, setShowModal] = useState(false);\n  const refetchJobs = hooks.useRefetchJobs();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    destructive: true,\n    onClick: () => {\n      setShowModal(true);\n    },\n    label: i18n.t('Delete')\n  }), showModal && /*#__PURE__*/React.createElement(DeleteJobModal, {\n    id: id,\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false),\n    onSuccess: refetchJobs\n  }));\n};\n\nconst {\n  string\n} = PropTypes;\nDeleteJobAction.propTypes = {\n  id: string.isRequired\n};\nexport default DeleteJobAction;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { FlyoutMenu, DropdownButton } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport EditJobAction from './EditJobAction';\nimport ViewJobAction from './ViewJobAction';\nimport RunJobAction from './RunJobAction';\nimport DeleteJobAction from './DeleteJobAction';\n\nconst Actions = _ref => {\n  let {\n    id,\n    configurable\n  } = _ref;\n  return /*#__PURE__*/React.createElement(DropdownButton, {\n    small: true,\n    component: /*#__PURE__*/React.createElement(FlyoutMenu, null, configurable ? /*#__PURE__*/React.createElement(EditJobAction, {\n      id: id\n    }) : /*#__PURE__*/React.createElement(ViewJobAction, {\n      id: id\n    }), configurable && /*#__PURE__*/React.createElement(RunJobAction, {\n      id: id\n    }), configurable && /*#__PURE__*/React.createElement(DeleteJobAction, {\n      id: id\n    }))\n  }, i18n.t('Actions'));\n};\n\nActions.defaultProps = {\n  configurable: false\n};\nconst {\n  string,\n  bool\n} = PropTypes;\nActions.propTypes = {\n  id: string.isRequired,\n  configurable: bool\n};\nexport default Actions;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Tag } from '@dhis2/ui';\nimport { jobStatusMap } from '../../services/server-translations';\n\nconst Status = _ref => {\n  let {\n    status\n  } = _ref;\n\n  switch (status) {\n    case 'STOPPED':\n    case 'DISABLED':\n      return /*#__PURE__*/React.createElement(Tag, null, jobStatusMap[status]);\n\n    case 'RUNNING':\n    case 'NOT_STARTED':\n    case 'SCHEDULED':\n      return /*#__PURE__*/React.createElement(Tag, {\n        neutral: true\n      }, jobStatusMap[status]);\n\n    case 'FAILED':\n      return /*#__PURE__*/React.createElement(Tag, {\n        negative: true\n      }, jobStatusMap[status]);\n\n    case 'DONE':\n      return /*#__PURE__*/React.createElement(Tag, {\n        positive: true\n      }, jobStatusMap[status]);\n    // Unrecognised status\n\n    default:\n      return null;\n  }\n};\n\nconst {\n  string\n} = PropTypes;\nStatus.propTypes = {\n  status: string.isRequired\n};\nexport default Status;","import moment from 'moment';\nimport { useTimeZoneConversion } from '@dhis2/app-runtime';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport React from 'react';\n\nconst formatDate = dhis2Date => `${dhis2Date.getServerZonedISOString().substring(0, 19).split('T').join(' ')} (${dhis2Date.serverTimezone})`;\n\nconst NextRun = _ref => {\n  let {\n    nextExecutionTime,\n    enabled\n  } = _ref;\n  const {\n    fromServerDate\n  } = useTimeZoneConversion();\n\n  if (!enabled || !nextExecutionTime) {\n    return '-';\n  }\n\n  const now = Date.now();\n  /**\n   * Adjust for client/sever time zone difference.\n   */\n\n  const nextRun = fromServerDate(nextExecutionTime);\n  const nextRunIsInPast = nextRun.getTime() <= now;\n  /**\n   * If the time is in the past, that could mean that the task is running,\n   * and the nextExecutionTime hasn't been updated yet.\n   */\n\n  if (nextRunIsInPast) {\n    return i18n.t('Not scheduled');\n  }\n\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    content: moment(nextRun).fromNow()\n  }, formatDate(nextRun));\n};\n\nconst {\n  bool,\n  string\n} = PropTypes;\nNextRun.propTypes = {\n  enabled: bool.isRequired,\n  nextExecutionTime: string\n};\nexport default NextRun;","const WEEKDAYS = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];\nconst MONTHS = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n\nconst isValidFields = fields => fields && fields.length === 6;\n\nconst isValidNumber = (number, x, y) => number >= x && number <= y;\n\nconst isWildcard = field => field === '*';\n\nconst isUndefined = field => field === '?';\n\nconst isValidNumberRange = (range, x, y) => {\n  const boundaries = range.split('-');\n\n  if (!boundaries || boundaries.length !== 2) {\n    return false;\n  }\n\n  return isValidNumber(boundaries[0], x, y) && isValidNumber(boundaries[1], x, y) && boundaries[0] <= boundaries[1];\n};\n\nconst isValidFraction = (fraction, x, y) => {\n  const components = fraction.split('/');\n\n  if (!components || components.length !== 2) {\n    return false;\n  }\n  /* istanbul ignore next */\n\n\n  return (isWildcard(components[0]) || isValidNumber(components[0], x, y) || isValidNumberRange(components[0], x, y)) && isValidNumber(components[1], x, y);\n};\n\nconst isAlphabeticWeekday = field => {\n  const weekdays = field.split('-');\n  const [firstDay, secondDay] = weekdays.map(c => WEEKDAYS.indexOf(c));\n  return firstDay !== -1 && secondDay === undefined || firstDay !== -1 && secondDay !== -1 && firstDay <= secondDay;\n};\n\nconst isAlphabeticMonth = field => {\n  const months = field.split('-');\n  const [firstMonth, secondMonth] = months.map(m => MONTHS.indexOf(m));\n  /* istanbul ignore next */\n\n  return firstMonth !== -1 && secondMonth === undefined || firstMonth !== -1 && secondMonth !== -1 && firstMonth <= secondMonth;\n};\n\nconst isValidWithinRange = (field, x, y) => isWildcard(field) || isValidNumber(field, x, y) || isValidNumberRange(field, x, y) || isValidFraction(field, x, y);\n\nconst isValidSecondField = field => isValidWithinRange(field, 0, 59);\n\nconst isValidMinuteField = field => isValidWithinRange(field, 0, 59);\n\nconst isValidHourField = field => isValidWithinRange(field, 0, 23);\n\nconst isValidDayField = field => isValidWithinRange(field, 0, 31) || isUndefined(field);\n\nconst isValidMonthField = field => isValidWithinRange(field, 1, 12) || isAlphabeticMonth(field);\n\nconst isValidWeekdayField = field => isValidWithinRange(field, 1, 7) || isAlphabeticWeekday(field) || isUndefined(field);\n/**\n * Cron expression validation. Validates the Spring Scheduling pattern.\n * Format: <second> <minute> <hour> <day-of-month> <month> <day-of-week>\n * Source code: https://git.io/vpoqG\n * Documentation: https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/scheduling/support/CronSequenceGenerator.html\n *\n * @TODO: evaluate if the following is possible\n * There's a npm library called `cron-validate`. It'd need to be configured to\n * accept the quartz job scheduler syntax, it can't be used as a drop-in\n * replacement! https://dhis2.atlassian.net/browse/TECH-1474\n */\n\n\nconst validateCron = exp => {\n  if (!exp) {\n    return false;\n  }\n\n  const fields = exp.trim().split(' ');\n\n  if (!isValidFields(fields)) {\n    return false;\n  }\n\n  return isValidSecondField(fields[0]) && isValidMinuteField(fields[1]) && isValidHourField(fields[2]) && isValidDayField(fields[3]) && isValidMonthField(fields[4]) && isValidWeekdayField(fields[5]);\n};\n\nexport default validateCron;","import i18n from '@dhis2/d2-i18n';\nimport validateCron from './validate-cron';\n\nconst requiredCron = value => {\n  const isString = typeof value === 'string';\n  const isFilled = isString && value.length > 0;\n\n  if (!isFilled) {\n    return i18n.t('A CRON expression is required');\n  }\n\n  if (!validateCron(value)) {\n    return i18n.t('Please enter a valid CRON expression');\n  }\n\n  return undefined;\n};\n\nexport default requiredCron;","import cronstrue from 'cronstrue/i18n';\nimport i18n from '@dhis2/d2-i18n';\nimport { validateCron } from '../validators';\nconst fallback = 'en';\n\nconst translateCron = cron => {\n  const locale = i18n.language || fallback;\n  const isValid = cron && validateCron(cron);\n\n  if (!isValid) {\n    return '';\n  }\n\n  return cronstrue.toString(cron, {\n    locale\n  });\n};\n\nexport default translateCron;","import translateCron from './translate-cron';\nexport default translateCron;","import { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport translateCron from '../../services/translate-cron';\n\nconst Schedule = _ref => {\n  let {\n    cronExpression,\n    schedulingType,\n    delay\n  } = _ref;\n\n  switch (schedulingType) {\n    case 'CRON':\n      return translateCron(cronExpression);\n\n    case 'FIXED_DELAY':\n      return i18n.t('{{ delay }} seconds after last run', {\n        delay\n      });\n\n    default:\n      // Unrecognised or invalid type\n      return '-';\n  }\n};\n\nconst {\n  string,\n  number\n} = PropTypes;\nSchedule.propTypes = {\n  schedulingType: string.isRequired,\n  cronExpression: string,\n  delay: number\n};\nexport default Schedule;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { TableRow, TableCell } from '@dhis2/ui';\nimport { jobTypesMap } from '../../services/server-translations';\nimport { ToggleJobSwitch } from '../Switches';\nimport Actions from './Actions';\nimport Status from './Status';\nimport NextRun from './NextRun';\nimport Schedule from './Schedule';\n\nconst JobTableRow = _ref => {\n  let {\n    job: {\n      id,\n      displayName,\n      jobType,\n      cronExpression,\n      delay,\n      jobStatus,\n      nextExecutionTime,\n      schedulingType,\n      enabled,\n      configurable\n    }\n  } = _ref;\n  return /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    role: \"rowheader\"\n  }, displayName), /*#__PURE__*/React.createElement(TableCell, null, jobTypesMap[jobType]), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Schedule, {\n    cronExpression: cronExpression,\n    delay: delay,\n    schedulingType: schedulingType\n  })), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(NextRun, {\n    nextExecutionTime: nextExecutionTime,\n    enabled: enabled\n  })), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Status, {\n    status: jobStatus\n  })), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(ToggleJobSwitch, {\n    id: id,\n    checked: enabled,\n    disabled: !configurable\n  })), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Actions, {\n    id: id,\n    configurable: configurable\n  })));\n};\n\nconst {\n  shape,\n  string,\n  bool,\n  number\n} = PropTypes;\nJobTableRow.propTypes = {\n  job: shape({\n    displayName: string.isRequired,\n    enabled: bool.isRequired,\n    id: string.isRequired,\n    jobStatus: string.isRequired,\n    jobType: string.isRequired,\n    schedulingType: string.isRequired,\n    cronExpression: string,\n    delay: number,\n    nextExecutionTime: string\n  }).isRequired\n};\nexport default JobTableRow;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Table, TableHead, TableRowHead, TableRow, TableCell, TableCellHead, TableBody } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport JobTableRow from './JobTableRow';\n\nconst JobTable = _ref => {\n  let {\n    jobs\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Table, null, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Job name')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Type')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Schedule')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Next run')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Status')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('On/off')), /*#__PURE__*/React.createElement(TableCellHead, null))), /*#__PURE__*/React.createElement(TableBody, null, jobs.length === 0 ? /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, null, i18n.t('No jobs to display'))) : jobs.map(job => /*#__PURE__*/React.createElement(JobTableRow, {\n    key: job.id,\n    job: job\n  }))));\n};\n\nconst {\n  object,\n  arrayOf\n} = PropTypes;\nJobTable.propTypes = {\n  jobs: arrayOf(object).isRequired\n};\nexport default JobTable;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link } from 'react-router-dom';\nimport styles from './LinkButton.module.css';\n\nconst LinkButton = _ref => {\n  let {\n    className,\n    small,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Link, _extends({\n    className: cx(styles.linkButton, {\n      [styles.small]: small\n    }, className)\n  }, rest));\n};\n\nLinkButton.propTypes = {\n  className: PropTypes.string,\n  small: PropTypes.bool\n};\nexport default LinkButton;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Card, Checkbox, InputField, IconInfo16 } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { JobTable } from '../../components/JobTable';\nimport { LinkButton } from '../../components/LinkButton';\nimport styles from './JobList.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobList = _ref => {\n  let {\n    jobs,\n    showSystemJobs,\n    setShowSystemJobs,\n    jobFilter,\n    setJobFilter\n  } = _ref;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.header\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.headerTitle\n  }, i18n.t('Scheduled jobs')), /*#__PURE__*/React.createElement(\"a\", {\n    href: infoLink,\n    className: styles.headerLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.headerLinkIcon\n  }, /*#__PURE__*/React.createElement(IconInfo16, null)), i18n.t('About job configuration'))), /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.controlContainer\n  }, /*#__PURE__*/React.createElement(InputField, {\n    dataTest: \"job-filter-input\",\n    label: i18n.t('Filter jobs'),\n    onChange: _ref2 => {\n      let {\n        value\n      } = _ref2;\n      setJobFilter(value);\n    },\n    value: jobFilter,\n    type: \"search\",\n    role: \"searchbox\",\n    name: \"job-filter\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.controlRight\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    dataTest: \"job-toggle-checkbox\",\n    checked: showSystemJobs,\n    label: i18n.t('Include system jobs in list'),\n    onChange: _ref3 => {\n      let {\n        checked\n      } = _ref3;\n      setShowSystemJobs(checked);\n    }\n  }), /*#__PURE__*/React.createElement(LinkButton, {\n    to: \"/add\"\n  }, i18n.t('New job')))), /*#__PURE__*/React.createElement(JobTable, {\n    jobs: jobs\n  })));\n};\n\nconst {\n  bool,\n  object,\n  string,\n  arrayOf,\n  func\n} = PropTypes;\nJobList.propTypes = {\n  jobFilter: string.isRequired,\n  jobs: arrayOf(object).isRequired,\n  setJobFilter: func.isRequired,\n  setShowSystemJobs: func.isRequired,\n  showSystemJobs: bool.isRequired\n};\nexport default JobList;","import React from 'react';\nimport { hooks } from '../../components/Store';\nimport JobList from './JobList';\n\nconst JobListContainer = () => {\n  const [jobFilter, setJobFilter] = hooks.useJobFilter();\n  const [showSystemJobs, setShowSystemJobs] = hooks.useShowSystemJobs();\n  const jobs = hooks.useJobListJobs();\n  return /*#__PURE__*/React.createElement(JobList, {\n    jobs: jobs,\n    showSystemJobs: showSystemJobs,\n    setShowSystemJobs: setShowSystemJobs,\n    jobFilter: jobFilter,\n    setJobFilter: setJobFilter\n  });\n};\n\nexport default JobListContainer;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { CronPresetModal } from '../Modal';\n\nconst CronPresetButton = _ref => {\n  let {\n    setCron,\n    small\n  } = _ref;\n  const [showModal, setShowModal] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setShowModal(true),\n    small: small\n  }, i18n.t('Choose from preset times')), showModal && /*#__PURE__*/React.createElement(CronPresetModal, {\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false),\n    setCron: setCron\n  }));\n};\n\nCronPresetButton.defaultProps = {\n  small: false\n};\nconst {\n  func,\n  bool\n} = PropTypes;\nCronPresetButton.propTypes = {\n  setCron: func.isRequired,\n  small: bool\n};\nexport default CronPresetButton;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { DeleteJobModal } from '../Modal';\n\nconst DeleteJobButton = _ref => {\n  let {\n    id,\n    onSuccess\n  } = _ref;\n  const [showModal, setShowModal] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    destructive: true,\n    onClick: () => setShowModal(true)\n  }, i18n.t('Delete job')), showModal && /*#__PURE__*/React.createElement(DeleteJobModal, {\n    id: id,\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false),\n    onSuccess: onSuccess\n  }));\n};\n\nconst {\n  string,\n  func\n} = PropTypes;\nDeleteJobButton.propTypes = {\n  id: string.isRequired,\n  onSuccess: func.isRequired\n};\nexport default DeleteJobButton;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button } from '@dhis2/ui';\nimport history from '../../services/history';\nimport { DiscardFormModal } from '../Modal';\n\nconst DiscardFormButton = _ref => {\n  let {\n    shouldConfirm,\n    children,\n    small,\n    className\n  } = _ref;\n  const [showModal, setShowModal] = useState(false);\n  const onClick = shouldConfirm ? () => setShowModal(true) : () => history.push('/');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: onClick,\n    small: small,\n    className: className\n  }, children), showModal && /*#__PURE__*/React.createElement(DiscardFormModal, {\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false)\n  }));\n};\n\nDiscardFormButton.defaultProps = {\n  className: '',\n  shouldConfirm: false,\n  small: false\n};\nconst {\n  string,\n  bool\n} = PropTypes;\nDiscardFormButton.propTypes = {\n  children: string.isRequired,\n  className: string,\n  shouldConfirm: bool,\n  small: bool\n};\nexport default DiscardFormButton;","import { FinalForm } from '@dhis2/ui';\nconst {\n  FORM_ERROR\n} = FinalForm;\n/**\n * Formats the errors returned by our backend to a format that final-form can parse\n */\n\nconst formatError = error => {\n  const {\n    details: {\n      response\n    }\n  } = error;\n  const validationErrors = {};\n  /**\n   * Some backend errors do not have a way for us to infer the related field,\n   * those can be put in genericErrors\n   */\n\n  const genericErrors = [];\n\n  if (response.errorReports && response.errorReports.length) {\n    response.errorReports.forEach(report => {\n      /**\n       * errorProperty is how the backend indicates the field that the error\n       * is related to. If we know this, return it as a field specific error\n       * (note that this will swallow errors if the backend indicates a field\n       * that does not exist in the frontend). Otherwise we'll push it to the\n       * generic errors.\n       */\n      if (report.errorProperty) {\n        validationErrors[report.errorProperty] = report.message;\n      } else {\n        genericErrors.push(report.message);\n      }\n    });\n  }\n\n  if (genericErrors.length > 0) {\n    validationErrors[FORM_ERROR] = genericErrors;\n  }\n\n  return validationErrors;\n};\n\nexport default formatError;","import formatError from './format-error';\nexport default formatError;","import { useContext } from 'react';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { StoreContext } from '../../components/Store';\nimport history from '../../services/history';\nimport formatError from '../../services/format-error';\nconst mutation = {\n  resource: 'jobConfigurations',\n  type: 'create',\n  data:\n  /* istanbul ignore next */\n  _ref => {\n    let {\n      job\n    } = _ref;\n    return job;\n  }\n};\n\nconst useSubmitJob = () => {\n  const {\n    refetchJobs\n  } = useContext(StoreContext);\n  const engine = useDataEngine();\n\n  const submitJob = job => engine.mutate(mutation, {\n    variables: {\n      job\n    }\n  }).then(() => {\n    history.push('/');\n    refetchJobs();\n  }).catch(error => {\n    const isValidationError = error.type === 'access'; // Potential validation error, return it in a format final-form can handle\n\n    if (isValidationError) {\n      return formatError(error);\n    } // Throw any unexpected errors\n\n\n    throw error;\n  });\n\n  return [submitJob];\n};\n\nexport default useSubmitJob;","import { useContext } from 'react';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { StoreContext } from '../../components/Store';\nimport history from '../../services/history';\nimport formatError from '../../services/format-error';\nconst mutation = {\n  resource: 'jobConfigurations',\n  type: 'update',\n  id:\n  /* istanbul ignore next */\n  _ref => {\n    let {\n      id\n    } = _ref;\n    return id;\n  },\n  data:\n  /* istanbul ignore next */\n  _ref2 => {\n    let {\n      job\n    } = _ref2;\n    return job;\n  }\n};\n\nconst useUpdateJob = _ref3 => {\n  let {\n    id\n  } = _ref3;\n  const {\n    refetchJobs\n  } = useContext(StoreContext);\n  const engine = useDataEngine();\n\n  const updateJob = job => engine.mutate(mutation, {\n    variables: {\n      job,\n      id\n    }\n  }).then(() => {\n    history.push('/');\n    refetchJobs();\n  }).catch(error => {\n    const isValidationError = error.type === 'access'; // Potential validation error, return it in a format final-form can handle\n\n    if (isValidationError) {\n      return formatError(error);\n    } // Throw any unexpected errors\n\n\n    throw error;\n  });\n\n  return [updateJob];\n};\n\nexport default useUpdateJob;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { NoticeBox } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport styles from './FormErrorBox.module.css';\n\nconst FormErrorBox = _ref => {\n  let {\n    submitError\n  } = _ref;\n  const hasGenericSubmitErrors = submitError.length > 0;\n\n  if (!hasGenericSubmitErrors) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst creating your job')\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.list\n  }, submitError.map(error => /*#__PURE__*/React.createElement(\"li\", {\n    key: error\n  }, error))));\n};\n\nconst {\n  array\n} = PropTypes;\nFormErrorBox.propTypes = {\n  submitError: array.isRequired\n};\nexport default FormErrorBox;","import React from 'react';\nimport { ReactFinalForm, InputFieldFF, composeValidators, hasValue, string } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nconst {\n  Field\n} = ReactFinalForm; // The key under which this field will be sent to the backend\n\nconst FIELD_NAME = 'name';\nconst VALIDATOR = composeValidators(string, hasValue);\n\nconst JobNameField = () => /*#__PURE__*/React.createElement(Field, {\n  name: FIELD_NAME,\n  component: InputFieldFF,\n  validate: VALIDATOR,\n  label: i18n.t('Name'),\n  type: \"text\",\n  required: true\n});\n\nexport default JobNameField;","import React from 'react';\nimport { ReactFinalForm, SingleSelectFieldFF, composeValidators, hasValue, string } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../Store';\nimport { jobTypesMap } from '../../services/server-translations';\nconst {\n  Field\n} = ReactFinalForm; // The key under which this field will be sent to the backend\n\nexport const FIELD_NAME = 'jobType';\nconst VALIDATOR = composeValidators(string, hasValue);\n\nconst JobTypeField = () => {\n  const jobTypes = hooks.useAllJobTypes();\n  const options = jobTypes.map(_ref => {\n    let {\n      jobType\n    } = _ref;\n    return {\n      value: jobType,\n      label: jobTypesMap[jobType]\n    };\n  }).filter(job => !!job.label).sort((job1, job2) => job1.label.localeCompare(job2.label));\n  return /*#__PURE__*/React.createElement(Field, {\n    name: FIELD_NAME,\n    validate: VALIDATOR,\n    component: SingleSelectFieldFF,\n    options: options,\n    label: i18n.t('Job type'),\n    required: true\n  });\n};\n\nexport default JobTypeField;","/**\n * Our backend returns certain values as a number, but our\n * inputs expect and return a string, so we're formatting them to strings\n */\nexport const formatToString = value => {\n  if (typeof value === 'number') {\n    return value.toString();\n  }\n\n  return value;\n};","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { MultiSelectField, ReactFinalForm, MultiSelectFieldFF } from '@dhis2/ui';\nimport { hooks } from '../Store';\nimport { analyticsTableTypes } from '../../services/server-translations';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst SkipTableTypesField = _ref => {\n  let {\n    label,\n    name,\n    parameterName\n  } = _ref;\n  const options = hooks.useParameterOptions(parameterName);\n\n  if (options.length === 0) {\n    return /*#__PURE__*/React.createElement(MultiSelectField, {\n      disabled: true,\n      helpText: i18n.t('No options available'),\n      label: label\n    });\n  }\n\n  const translatedOptions = options.map(option => ({\n    value: option,\n    label: analyticsTableTypes[option] || option\n  }));\n  return /*#__PURE__*/React.createElement(Field, {\n    name: name,\n    component: MultiSelectFieldFF,\n    options: translatedOptions,\n    label: label\n  });\n};\n\nconst {\n  string\n} = PropTypes;\nSkipTableTypesField.propTypes = {\n  label: string.isRequired,\n  name: string.isRequired,\n  parameterName: string.isRequired\n};\nexport default SkipTableTypesField;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MultiSelectFieldFF, ReactFinalForm, MultiSelectField } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../Store';\nconst {\n  Field\n} = ReactFinalForm; // A labeled options field has options that have both an id and a label.\n\nconst LabeledOptionsField = _ref => {\n  let {\n    label,\n    name,\n    parameterName\n  } = _ref;\n  const options = hooks.useParameterOptions(parameterName);\n\n  if (options.length === 0) {\n    return /*#__PURE__*/React.createElement(MultiSelectField, {\n      disabled: true,\n      helpText: i18n.t('No options available'),\n      label: label\n    });\n  }\n\n  const labeledOptions = options.map(_ref2 => {\n    let {\n      id,\n      displayName\n    } = _ref2;\n    return {\n      value: id,\n      label: displayName\n    };\n  });\n  return /*#__PURE__*/React.createElement(Field, {\n    name: name,\n    component: MultiSelectFieldFF,\n    options: labeledOptions,\n    label: label\n  });\n};\n\nconst {\n  string\n} = PropTypes;\nLabeledOptionsField.propTypes = {\n  label: string.isRequired,\n  name: string.isRequired,\n  parameterName: string.isRequired\n};\nexport default LabeledOptionsField;","import i18n from '@dhis2/d2-i18n';\nexport const severityMap = {\n  WARNING: i18n.t('Warning'),\n  SEVERE: i18n.t('Severe')\n};\nconst reportTypeMap = {\n  REPORT: i18n.t('Report'),\n  SUMMARY: i18n.t('Summary'),\n  DETAILS: i18n.t('Details')\n};\n\nconst snakeCaseToHumanReadable = string => {\n  const split = string.split('_');\n  const [first, ...rest] = split;\n  return first[0].toUpperCase().concat(first.slice(1)).concat(` ${rest.join(' ')}`);\n};\n\nexport const getReportTypeLabel = type => reportTypeMap[type] || snakeCaseToHumanReadable(type);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useCallback, useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { FieldGroup, Radio, Transfer, TransferOption, ReactFinalForm, InputFieldFF, Help } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { hooks } from '../Store';\nimport { severityMap } from '../../services/server-translations/dataIntegrityChecks';\nimport styles from './DataIntegrityChecksField.module.css';\nconst {\n  Field,\n  useField\n} = ReactFinalForm;\n\nconst VALIDATOR = value => {\n  // should not validate when null or undefined\n  // means \"Run all\" is selected\n  if (!value == null) {\n    return undefined;\n  }\n\n  if (value && value.length < 1) {\n    return i18n.t('Please select checks to run.');\n  }\n};\n\nconst DataIntegrityChecksField = _ref => {\n  let {\n    label,\n    name\n  } = _ref;\n  const options = hooks.useParameterOptions('dataIntegrityChecks');\n  const {\n    input: {\n      value,\n      onChange\n    }\n  } = useField(name);\n  const hasValue = !!value && value.length > 0;\n  const [runSelected, setRunSelected] = useState(hasValue);\n  const translatedOptions = options.map(option => ({ ...option,\n    value: option.name,\n    label: option.displayName,\n    severity: severityMap[option.severity]\n  })).sort((a, b) => a.label.localeCompare(b.label));\n\n  const toggle = _ref2 => {\n    let {\n      value\n    } = _ref2;\n    const runSelectedChecked = value === 'true';\n\n    if (!runSelectedChecked) {\n      // clear checks when \"Run all\" is selected\n      // null means all checks will be run\n      onChange(null);\n    } else {\n      // set to empty array explicitly,\n      // this is to allow to differentiate between \"selected checks\" but empty\n      // and \"run all\"-empty for validation\n      onChange([]);\n    }\n\n    setRunSelected(runSelectedChecked);\n  };\n\n  return /*#__PURE__*/React.createElement(FieldGroup, {\n    label: i18n.t('Checks to run')\n  }, /*#__PURE__*/React.createElement(Radio, {\n    name: 'checksToRun',\n    value: 'false',\n    label: i18n.t('Run all available checks'),\n    checked: !runSelected,\n    onChange: toggle\n  }), /*#__PURE__*/React.createElement(Radio, {\n    name: 'checksToRun',\n    value: 'true',\n    label: i18n.t('Only run selected checks'),\n    checked: runSelected,\n    onChange: toggle\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: name,\n    component: ChecksTransfer,\n    options: translatedOptions,\n    label: label,\n    validate: VALIDATOR // conditional rendering of FinalForm-fields cause some issues,\n    // see https://github.com/final-form/react-final-form/issues/809\n    ,\n    hidden: !runSelected\n  }));\n};\n\nconst LabelComponent = _ref3 => {\n  let {\n    label,\n    severity,\n    highlighted,\n    disabled\n  } = _ref3;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.transferOption, {\n      [styles.highlighted]: highlighted,\n      [styles.disabled]: disabled\n    })\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.optionName\n  }, label), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.optionSeverity, {\n      [styles.highlighted]: highlighted\n    })\n  }, `${i18n.t('Severity')}: ${severity}`));\n};\n\nLabelComponent.propTypes = TransferOption.propTypes;\n\nconst renderOption = option => /*#__PURE__*/React.createElement(TransferOption, _extends({}, option, {\n  label: /*#__PURE__*/React.createElement(LabelComponent, option)\n}));\n\nconst ChecksTransfer = _ref4 => {\n  let {\n    input,\n    meta,\n    options = [],\n    hidden\n  } = _ref4;\n  const {\n    onChange\n  } = input;\n  const handleChange = useCallback(_ref5 => {\n    let {\n      selected\n    } = _ref5;\n    onChange(selected);\n  }, [onChange]);\n\n  if (hidden) {\n    return null;\n  }\n\n  const isErr = meta.touched && meta.invalid;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Transfer, {\n    options: options,\n    onChange: handleChange,\n    selected: input.value || [],\n    renderOption: renderOption,\n    maxSelections: Infinity,\n    enableOrderChange: true,\n    filterable: true,\n    height: '450px',\n    selectedEmptyComponent: /*#__PURE__*/React.createElement(SelectedEmptyComponent, null),\n    className: styles.transfer\n  }), isErr && /*#__PURE__*/React.createElement(Help, {\n    error: isErr\n  }, meta.error));\n};\n\nChecksTransfer.propTypes = InputFieldFF.propTypes;\n\nconst SelectedEmptyComponent = () => /*#__PURE__*/React.createElement(\"p\", {\n  className: styles.selectedEmptyComponent\n}, i18n.t('Select checks to run.'));\n\nconst {\n  string\n} = PropTypes;\nDataIntegrityChecksField.propTypes = {\n  label: string.isRequired,\n  name: string.isRequired\n};\nexport default DataIntegrityChecksField;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { getReportTypeLabel } from '../../services/server-translations/dataIntegrityChecks';\nconst {\n  Field\n} = ReactFinalForm;\nconst DEFAULT_VALUE = 'REPORT';\n\nconst DataIntegrityReportTypeField = _ref => {\n  let {\n    name,\n    constants\n  } = _ref;\n\n  if (!constants) {\n    // shouldn't really happen, but backend defaults to \"report\" if no value\n    return null;\n  }\n\n  const labeledOptions = constants.map(type => ({\n    value: type,\n    label: getReportTypeLabel(type)\n  }));\n  return /*#__PURE__*/React.createElement(Field, {\n    name: name,\n    component: SingleSelectFieldFF,\n    initialValue: DEFAULT_VALUE,\n    options: labeledOptions,\n    label: i18n.t('Report type')\n  });\n};\n\nconst {\n  string,\n  arrayOf\n} = PropTypes;\nDataIntegrityReportTypeField.propTypes = {\n  name: string.isRequired,\n  constants: arrayOf(string)\n};\nexport default DataIntegrityReportTypeField;","import i18n from '@dhis2/d2-i18n';\nimport { CircularLoader, NoticeBox, ReactFinalForm, Transfer, Field } from '@dhis2/ui';\nimport React, { useCallback } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport styles from './AggregatedDataExchangeField.module.css';\nconst {\n  useField\n} = ReactFinalForm;\nconst query = {\n  dataExchangeIds: {\n    resource: 'aggregateDataExchanges',\n    params: {\n      fields: ['id', 'displayName'],\n      paging: true\n    }\n  }\n};\n\nconst validate = value => {\n  if (!value || value && value.length < 1) {\n    return i18n.t('Please select data exchange ids.');\n  }\n};\n\nconst SelectedEmptyComponent = () => /*#__PURE__*/React.createElement(\"p\", {\n  className: styles.selectedEmptyComponent\n}, i18n.t('Select data exchange ids'));\n\nconst AggregatedDataExchangeField = _ref => {\n  var _data$dataExchangeIds, _data$dataExchangeIds2, _meta$error;\n\n  let {\n    label,\n    name\n  } = _ref;\n  const {\n    loading,\n    error,\n    data\n  } = useDataQuery(query);\n  const {\n    input,\n    meta\n  } = useField(name, {\n    beforeSubmit: () => !loading || !error,\n    validate\n  });\n  const handleChange = useCallback(_ref2 => {\n    let {\n      selected\n    } = _ref2;\n    input === null || input === void 0 ? void 0 : input.onChange(selected);\n  }, [input]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(CircularLoader, null);\n  }\n\n  if (error) {\n    var _error$details, _error$details2;\n\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: i18n.t('There was a problem fetching data exchange ids')\n    }, /*#__PURE__*/React.createElement(\"details\", null, /*#__PURE__*/React.createElement(\"summary\", null, `${i18n.t('error type')} - ${error.type}`), ((_error$details = error.details) === null || _error$details === void 0 ? void 0 : _error$details.message) && /*#__PURE__*/React.createElement(\"p\", null, (_error$details2 = error.details) === null || _error$details2 === void 0 ? void 0 : _error$details2.message)));\n  }\n\n  const options = (_data$dataExchangeIds = (_data$dataExchangeIds2 = data.dataExchangeIds) === null || _data$dataExchangeIds2 === void 0 ? void 0 : _data$dataExchangeIds2.aggregateDataExchanges.map(exchangeIds => ({\n    label: exchangeIds.displayName,\n    value: exchangeIds.id\n  }))) !== null && _data$dataExchangeIds !== void 0 ? _data$dataExchangeIds : [];\n  return /*#__PURE__*/React.createElement(Field, {\n    label: label,\n    validationText: (_meta$error = meta.error) === null || _meta$error === void 0 ? void 0 : _meta$error.message,\n    error: !!meta.error,\n    name: name,\n    required: true,\n    className: styles.field\n  }, /*#__PURE__*/React.createElement(Transfer, {\n    options: options,\n    onChange: handleChange,\n    selected: (input === null || input === void 0 ? void 0 : input.value) || [],\n    maxSelections: Infinity,\n    enableOrderChange: true,\n    filterable: true,\n    height: '450px',\n    selectedEmptyComponent: SelectedEmptyComponent\n  }));\n};\n\nAggregatedDataExchangeField.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport default AggregatedDataExchangeField;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm, InputFieldFF, Box, SwitchFieldFF } from '@dhis2/ui';\nimport { hooks } from '../Store';\nimport { formatToString } from './formatters';\nimport SkipTableTypesField from './SkipTableTypesField';\nimport LabeledOptionsField from './LabeledOptionsField';\nimport DataIntegrityChecksField from './DataIntegrityChecksField';\nimport DataIntegrityReportTypeField from './DataIntegrityReportTypeField';\nimport styles from './ParameterFields.module.css';\nimport AggregatedDataExchangeField from './AggregatedDataExchangeField';\nconst {\n  Field\n} = ReactFinalForm; // The key under which the parameters will be sent to the backend\n\nconst FIELD_NAME = 'jobParameters';\nconst JOB_TYPES = {\n  DATA_INTEGRITY: 'DATA_INTEGRITY',\n  AGGREGATE_DATA_EXCHANGE: 'AGGREGATE_DATA_EXCHANGE'\n};\n\nconst getCustomComponent = (jobType, parameterName) => {\n  if (jobType === JOB_TYPES.DATA_INTEGRITY && parameterName === 'checks') {\n    return DataIntegrityChecksField;\n  } else if (jobType === JOB_TYPES.DATA_INTEGRITY && parameterName === 'type') {\n    return DataIntegrityReportTypeField;\n  } else if (jobType === JOB_TYPES.AGGREGATE_DATA_EXCHANGE) {\n    return AggregatedDataExchangeField;\n  } else if (parameterName === 'skipTableTypes') {\n    return SkipTableTypesField;\n  }\n\n  return null;\n}; // Renders all parameters for a given jobtype\n\n\nconst ParameterFields = _ref => {\n  let {\n    jobType\n  } = _ref;\n  const parameters = hooks.useJobTypeParameters(jobType);\n\n  if (parameters.length === 0) {\n    return null;\n  } // Map all parameters to the appropriate field types\n\n\n  const parameterComponents = parameters.map(_ref2 => {\n    let {\n      fieldName,\n      name,\n      klass,\n      ...rest\n    } = _ref2;\n    const defaultProps = {\n      label: fieldName,\n      name: `${FIELD_NAME}.${name}`\n    };\n    const parameterProps = {\n      fieldName,\n      name,\n      klass,\n      ...rest\n    };\n    let parameterComponent = null;\n    const CustomParameterComponent = getCustomComponent(jobType, name);\n\n    if (CustomParameterComponent) {\n      return /*#__PURE__*/React.createElement(Box, {\n        marginTop: \"16px\",\n        key: name\n      }, /*#__PURE__*/React.createElement(CustomParameterComponent, _extends({}, parameterProps, defaultProps, {\n        parameterName: name\n      })));\n    } // Generic field rendering\n\n\n    switch (klass) {\n      case 'java.lang.String':\n        parameterComponent = /*#__PURE__*/React.createElement(Field, _extends({}, defaultProps, {\n          component: InputFieldFF,\n          type: \"text\"\n        }));\n        break;\n\n      case 'java.lang.Boolean':\n        parameterComponent = /*#__PURE__*/React.createElement(Field, _extends({}, defaultProps, {\n          component: SwitchFieldFF,\n          type: \"checkbox\"\n        }));\n        break;\n\n      case 'java.lang.Integer':\n        parameterComponent = /*#__PURE__*/React.createElement(Field, _extends({}, defaultProps, {\n          component: InputFieldFF,\n          format: formatToString,\n          type: \"number\"\n        }));\n        break;\n\n      case 'java.util.List':\n        parameterComponent = /*#__PURE__*/React.createElement(LabeledOptionsField, _extends({}, defaultProps, {\n          parameterName: name\n        }));\n        break;\n    } // Wrap all components in a Box for spacing\n\n\n    return /*#__PURE__*/React.createElement(Box, {\n      marginTop: \"16px\",\n      key: name\n    }, parameterComponent);\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", null, /*#__PURE__*/React.createElement(\"h4\", {\n    className: styles.headerTitle\n  }, i18n.t('Parameters'))), parameterComponents);\n};\n\nconst {\n  string\n} = PropTypes;\nParameterFields.propTypes = {\n  jobType: string.isRequired\n};\nexport default ParameterFields;","import React from 'react';\nimport { Box, ReactFinalForm, InputFieldFF } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { requiredCron } from '../../services/validators';\nimport { CronPresetButton } from '../Buttons';\nimport translateCron from '../../services/translate-cron';\nconst {\n  Field,\n  useFormState,\n  useForm\n} = ReactFinalForm; // The key under which this field will be sent to the backend\n\nconst FIELD_NAME = 'cronExpression';\nconst VALIDATOR = requiredCron;\n\nconst CronField = () => {\n  const form = useForm();\n  const {\n    values\n  } = useFormState({\n    subscription: {\n      values: true\n    }\n  });\n  const cronExpression = values[FIELD_NAME];\n  const helpText = translateCron(cronExpression);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Field, {\n    component: InputFieldFF,\n    name: FIELD_NAME,\n    validate: VALIDATOR,\n    label: i18n.t('CRON Expression'),\n    type: \"text\",\n    helpText: helpText,\n    required: true\n  }), /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"8px\"\n  }, /*#__PURE__*/React.createElement(CronPresetButton, {\n    setCron:\n    /* istanbul ignore next */\n    cron => form.change(FIELD_NAME, cron),\n    small: true\n  })));\n};\n\nexport default CronField;","import React from 'react';\nimport { ReactFinalForm, InputFieldFF, composeValidators, hasValue, integer, createNumberRange } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { formatToString } from './formatters';\nconst {\n  Field\n} = ReactFinalForm; // Omitting the underscore here since it messes up i18n\n\nconst lowerbound = 1;\nconst upperbound = 86400; // The key under which this field will be sent to the backend\n\nconst FIELD_NAME = 'delay';\nconst VALIDATOR = composeValidators(integer, hasValue, createNumberRange(lowerbound, upperbound));\n\nconst DelayField = () => /*#__PURE__*/React.createElement(Field, {\n  component: InputFieldFF,\n  name: FIELD_NAME,\n  validate: VALIDATOR,\n  label: i18n.t('Delay'),\n  type: \"number\",\n  format: formatToString,\n  helpText: i18n.t('Delay in seconds ({{ lowerbound }} - {{ upperbound }})', {\n    lowerbound,\n    upperbound\n  }),\n  required: true\n});\n\nexport default DelayField;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { hooks } from '../Store';\nimport CronField from './CronField';\nimport DelayField from './DelayField';\n\nconst ScheduleField = _ref => {\n  let {\n    jobType\n  } = _ref;\n  const currentJobType = hooks.useJobType(jobType);\n  const schedulingType = currentJobType.schedulingType;\n\n  switch (schedulingType) {\n    case 'CRON':\n      return /*#__PURE__*/React.createElement(CronField, null);\n\n    case 'FIXED_DELAY':\n      return /*#__PURE__*/React.createElement(DelayField, null);\n\n    default:\n      // Unrecognised scheduling type\n      return null;\n  }\n};\n\nconst {\n  string\n} = PropTypes;\nScheduleField.propTypes = {\n  jobType: string.isRequired\n};\nexport default ScheduleField;","import JobNameField from './JobNameField';\nimport JobTypeField, { FIELD_NAME as JOB_TYPE } from './JobTypeField';\nimport ParameterFields from './ParameterFields';\nimport ScheduleField from './ScheduleField';\nconst fieldNames = {\n  JOB_TYPE\n};\nexport { JobNameField, ScheduleField, JobTypeField, ParameterFields, fieldNames };","import React, { useEffect } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, CircularLoader, Box, ReactFinalForm } from '@dhis2/ui';\nimport { DiscardFormButton } from '../Buttons';\nimport { FormErrorBox } from '../FormErrorBox';\nimport { ScheduleField, JobNameField, JobTypeField, ParameterFields, fieldNames } from '../FormFields';\nimport styles from './JobAddForm.module.css';\nconst {\n  useForm\n} = ReactFinalForm;\n\nconst JobAddForm = _ref => {\n  let {\n    handleSubmit,\n    pristine,\n    submitting,\n    submitError,\n    hasSubmitErrors,\n    values,\n    setIsPristine\n  } = _ref;\n  const {\n    subscribe\n  } = useForm();\n  /**\n   * Lift pristine state up on changes, wrapped in useEffect because calls to setState\n   * outside of the component that owns the setState should not happen synchronously.\n   */\n\n  useEffect(() =>\n  /**\n   * The subscriber will only be called when pristine changes. It returns a\n   * cleanup function.\n   * https://final-form.org/docs/final-form/types/FormApi#subscribe\n   */\n  subscribe(_ref2 => {\n    let {\n      pristine\n    } = _ref2;\n    return setIsPristine(pristine);\n  }, {\n    pristine: true\n  })); // Check if there's currently a selected job type\n\n  const jobType = values[fieldNames.JOB_TYPE]; // Show a spinner only when submitting\n\n  const Spinner = submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n    small: true\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(Box, {\n    maxWidth: \"600px\"\n  }, /*#__PURE__*/React.createElement(JobNameField, null)), /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(JobTypeField, null)), jobType && /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(ScheduleField, {\n    jobType: jobType\n  })), jobType && /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"32px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(ParameterFields, {\n    jobType: jobType\n  })), hasSubmitErrors && /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"32px\",\n    maxWidth: \"600px\"\n  }, /*#__PURE__*/React.createElement(FormErrorBox, {\n    submitError: submitError\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formButtonContainer\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    disabled: pristine || submitting,\n    icon: Spinner,\n    className: styles.saveButton\n  }, i18n.t('Save')), /*#__PURE__*/React.createElement(DiscardFormButton, {\n    shouldConfirm: !pristine\n  }, i18n.t('Cancel'))));\n};\n\nconst {\n  func,\n  bool,\n  object,\n  array\n} = PropTypes;\nJobAddForm.defaultProps = {\n  submitError: []\n};\nJobAddForm.propTypes = {\n  handleSubmit: func.isRequired,\n  hasSubmitErrors: bool.isRequired,\n  pristine: bool.isRequired,\n  setIsPristine: func.isRequired,\n  submitting: bool.isRequired,\n  values: object.isRequired,\n  submitError: array\n};\nexport default JobAddForm;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { useSubmitJob } from '../../hooks/jobs';\nimport JobAddForm from './JobAddForm';\nconst {\n  Form\n} = ReactFinalForm;\n\nconst JobAddFormContainer = _ref => {\n  let {\n    setIsPristine\n  } = _ref;\n  const [submitJob] = useSubmitJob();\n  /**\n   * destroyOnUnregister is enabled so that dynamic fields will be unregistered\n   * when they're removed from the form, for instance when the jobType changes.\n   */\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitJob,\n    component: JobAddForm,\n    setIsPristine: setIsPristine,\n    destroyOnUnregister: true\n  });\n};\n\nconst {\n  func\n} = PropTypes;\nJobAddFormContainer.propTypes = {\n  setIsPristine: func.isRequired\n};\nexport default JobAddFormContainer;","import React, { useEffect } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, CircularLoader, Box, ReactFinalForm } from '@dhis2/ui';\nimport history from '../../services/history';\nimport { DiscardFormButton, DeleteJobButton } from '../Buttons';\nimport { FormErrorBox } from '../FormErrorBox';\nimport { ScheduleField, JobNameField, JobTypeField, ParameterFields, fieldNames } from '../FormFields';\nimport styles from './JobEditForm.module.css';\nconst {\n  useForm\n} = ReactFinalForm;\n\nconst JobEditForm = _ref => {\n  let {\n    id,\n    refetchJobs,\n    handleSubmit,\n    pristine,\n    submitting,\n    submitError,\n    hasSubmitErrors,\n    values,\n    setIsPristine\n  } = _ref;\n  const {\n    subscribe\n  } = useForm();\n  /**\n   * Lift pristine state up on changes, wrapped in useEffect because calls to setState\n   * outside of the component that owns the setState should not happen synchronously.\n   */\n\n  useEffect(() =>\n  /**\n   * The subscriber will only be called when pristine changes. It returns a\n   * cleanup function.\n   * https://final-form.org/docs/final-form/types/FormApi#subscribe\n   */\n  subscribe(_ref2 => {\n    let {\n      pristine\n    } = _ref2;\n    return setIsPristine(pristine);\n  }, {\n    pristine: true\n  })); // Check if there's currently a selected job type\n\n  const jobType = values[fieldNames.JOB_TYPE]; // Show a spinner only when submitting\n\n  const Spinner = submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n    small: true\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(Box, {\n    maxWidth: \"600px\"\n  }, /*#__PURE__*/React.createElement(JobNameField, null)), /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(JobTypeField, null)), jobType && /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(ScheduleField, {\n    jobType: jobType\n  })), jobType && /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"32px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(ParameterFields, {\n    jobType: jobType\n  })), hasSubmitErrors && /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"32px\",\n    maxWidth: \"600px\"\n  }, /*#__PURE__*/React.createElement(FormErrorBox, {\n    submitError: submitError\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formButtonContainer\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    disabled: pristine || submitting,\n    icon: Spinner,\n    className: styles.saveButton\n  }, i18n.t('Save')), /*#__PURE__*/React.createElement(DiscardFormButton, {\n    shouldConfirm: !pristine\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.deleteButton\n  }, /*#__PURE__*/React.createElement(DeleteJobButton, {\n    id: id,\n    onSuccess: () => {\n      history.push('/');\n      refetchJobs();\n    }\n  }))));\n};\n\nconst {\n  func,\n  bool,\n  object,\n  array,\n  string\n} = PropTypes;\nJobEditForm.defaultProps = {\n  submitError: []\n};\nJobEditForm.propTypes = {\n  handleSubmit: func.isRequired,\n  hasSubmitErrors: bool.isRequired,\n  id: string.isRequired,\n  pristine: bool.isRequired,\n  refetchJobs: func.isRequired,\n  setIsPristine: func.isRequired,\n  submitting: bool.isRequired,\n  values: object.isRequired,\n  submitError: array\n};\nexport default JobEditForm;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { useParams } from 'react-router-dom';\nimport { useUpdateJob } from '../../hooks/jobs';\nimport { hooks } from '../Store';\nimport JobEditForm from './JobEditForm';\nconst {\n  Form\n} = ReactFinalForm;\n/**\n * The fields we need for the initialValues for our form fields. Since we use\n * these values to set the initial values in final-form, if we wouldn't filter\n * them we'd end up submitting way more data than we intend to.\n */\n\nconst initialFields = ['cronExpression', 'delay', 'jobParameters', 'jobType', 'name'];\n\nconst JobEditFormContainer = _ref => {\n  let {\n    setIsPristine\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const [updateJob] = useUpdateJob({\n    id\n  });\n  const refetchJobs = hooks.useRefetchJobs();\n  const job = hooks.useJob(id); // Creating an object with just the values we want to use as initial values\n\n  const initialValues = initialFields.reduce((filtered, key) => {\n    filtered[key] = job[key];\n    return filtered;\n  }, {});\n  /**\n   * destroyOnUnregister is enabled so that dynamic fields will be unregistered\n   * when they're removed from the form, for instance when the jobType changes.\n   */\n\n  /* istanbul ignore next: we're testing this section, but coverage reporting seems to disagree */\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: updateJob,\n    component: JobEditForm,\n    setIsPristine: setIsPristine,\n    initialValues: initialValues,\n    id: id,\n    refetchJobs: refetchJobs,\n    destroyOnUnregister: true\n  });\n};\n\nconst {\n  func\n} = PropTypes;\nJobEditFormContainer.propTypes = {\n  setIsPristine: func.isRequired\n};\nexport default JobEditFormContainer;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport { jobStatusMap } from '../../services/server-translations';\nimport styles from './JobDetails.module.css';\n\nconst JobDetails = _ref => {\n  let {\n    created,\n    lastExecutedStatus,\n    lastExecuted\n  } = _ref;\n  // Using Date.now allows for easier mocking\n  const now = Date.now();\n  const createdFromNow = moment(created).from(now);\n  const translatedStatus = jobStatusMap[lastExecutedStatus];\n  const lastRunFromNow = lastExecuted ? moment(lastExecuted).from(now) : '';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.wrapper\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: styles.title\n  }, i18n.t('Job details')), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.details\n  }, /*#__PURE__*/React.createElement(\"div\", null, i18n.t('Created {{ createdFromNow }}.', {\n    createdFromNow\n  })), lastRunFromNow && /*#__PURE__*/React.createElement(\"div\", null, i18n.t('Last run {{ lastRunFromNow }}.', {\n    lastRunFromNow\n  })), translatedStatus && /*#__PURE__*/React.createElement(\"div\", null, i18n.t('Last run status: {{ translatedStatus }}.', {\n    translatedStatus,\n    nsSeparator: '>'\n  }))));\n};\n\nconst {\n  string\n} = PropTypes;\nJobDetails.propTypes = {\n  created: string.isRequired,\n  lastExecutedStatus: string.isRequired,\n  lastExecuted: string\n};\nexport default JobDetails;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Card, IconInfo16 } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { DiscardFormButton } from '../../components/Buttons';\nimport { JobEditFormContainer } from '../../components/Forms';\nimport { JobDetails } from '../../components/JobDetails';\nimport styles from './JobEdit.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobEdit = _ref => {\n  let {\n    isPristine,\n    setIsPristine,\n    name,\n    created,\n    lastExecutedStatus,\n    lastExecuted\n  } = _ref;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.pageHeader\n  }, /*#__PURE__*/React.createElement(DiscardFormButton, {\n    shouldConfirm: !isPristine,\n    className: styles.pageHeaderButton,\n    small: true\n  }, i18n.t('Back to all jobs')), /*#__PURE__*/React.createElement(\"h2\", {\n    className: styles.pageHeaderTitle\n  }, i18n.t('Job: {{ name }}', {\n    name,\n    nsSeparator: '>'\n  }))), /*#__PURE__*/React.createElement(Card, {\n    className: styles.card\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.cardHeader\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: styles.cardHeaderTitle\n  }, i18n.t('Configuration')), /*#__PURE__*/React.createElement(\"a\", {\n    href: infoLink,\n    className: styles.cardHeaderLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.cardHeaderInfo\n  }, /*#__PURE__*/React.createElement(IconInfo16, null)), i18n.t('About job configuration'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.jobDetails\n  }, /*#__PURE__*/React.createElement(JobDetails, {\n    created: created,\n    lastExecutedStatus: lastExecutedStatus,\n    lastExecuted: lastExecuted\n  })), /*#__PURE__*/React.createElement(JobEditFormContainer, {\n    setIsPristine: setIsPristine\n  })));\n};\n\nconst {\n  bool,\n  func,\n  string\n} = PropTypes;\nJobEdit.propTypes = {\n  created: string.isRequired,\n  isPristine: bool.isRequired,\n  lastExecuted: string.isRequired,\n  lastExecutedStatus: string.isRequired,\n  name: string.isRequired,\n  setIsPristine: func.isRequired\n};\nexport default JobEdit;","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { hooks } from '../../components/Store';\nimport JobEdit from './JobEdit';\n\nconst JobEditContainer = () => {\n  const [isPristine, setIsPristine] = useState(true);\n  const {\n    id\n  } = useParams();\n  const job = hooks.useJob(id);\n  return /*#__PURE__*/React.createElement(JobEdit, {\n    isPristine: isPristine,\n    setIsPristine: setIsPristine,\n    name: job.name,\n    created: job.created,\n    lastExecutedStatus: job.lastExecutedStatus,\n    lastExecuted: job.lastExecuted\n  });\n};\n\nexport default JobEditContainer;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Card, IconInfo16, Box, SingleSelectField, SingleSelectOption, InputField } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../../components/Store';\nimport { LinkButton } from '../../components/LinkButton';\nimport { JobDetails } from '../../components/JobDetails';\nimport translateCron from '../../services/translate-cron';\nimport { jobTypesMap } from '../../services/server-translations';\nimport styles from './JobView.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobView = () => {\n  const {\n    id\n  } = useParams();\n  const {\n    name,\n    created,\n    lastExecutedStatus,\n    lastExecuted,\n    jobType,\n    cronExpression\n  } = hooks.useJob(id);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.pageHeader\n  }, /*#__PURE__*/React.createElement(LinkButton, {\n    className: styles.pageHeaderButton,\n    to: \"/\",\n    small: true\n  }, i18n.t('Back to all jobs')), /*#__PURE__*/React.createElement(\"h2\", {\n    className: styles.pageHeaderTitle\n  }, i18n.t('System job: {{ name }}', {\n    name,\n    nsSeparator: '>'\n  }))), /*#__PURE__*/React.createElement(Card, {\n    className: styles.card\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.cardHeader\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: styles.cardHeaderTitle\n  }, i18n.t('Configuration')), /*#__PURE__*/React.createElement(\"a\", {\n    href: infoLink,\n    className: styles.cardHeaderLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.cardHeaderInfo\n  }, /*#__PURE__*/React.createElement(IconInfo16, null)), i18n.t('About job configuration'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.jobDetails\n  }, /*#__PURE__*/React.createElement(JobDetails, {\n    created: created,\n    lastExecutedStatus: lastExecutedStatus,\n    lastExecuted: lastExecuted\n  })), /*#__PURE__*/React.createElement(Box, {\n    maxWidth: \"600px\"\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: i18n.t('Name'),\n    disabled: true,\n    value: name,\n    name: \"name\"\n  })), /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(SingleSelectField, {\n    name: \"jobType\",\n    label: i18n.t('Job type'),\n    disabled: true,\n    selected: jobType\n  }, /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: jobType,\n    label: jobTypesMap[jobType]\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: i18n.t('CRON Expression'),\n    name: \"cronExpression\",\n    disabled: true,\n    value: cronExpression,\n    helpText: translateCron(cronExpression)\n  })), /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"24px\"\n  }, /*#__PURE__*/React.createElement(LinkButton, {\n    className: styles.pageHeaderButton,\n    to: \"/\"\n  }, i18n.t('Back to all jobs')))));\n};\n\nexport default JobView;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Card, IconInfo16 } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { DiscardFormButton } from '../../components/Buttons';\nimport { JobAddFormContainer } from '../../components/Forms';\nimport styles from './JobAdd.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobAdd = _ref => {\n  let {\n    isPristine,\n    setIsPristine\n  } = _ref;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.pageHeader\n  }, /*#__PURE__*/React.createElement(DiscardFormButton, {\n    shouldConfirm: !isPristine,\n    className: styles.pageHeaderButton,\n    small: true\n  }, i18n.t('Back to all jobs')), /*#__PURE__*/React.createElement(\"h2\", {\n    className: styles.pageHeaderTitle\n  }, i18n.t('New Job'))), /*#__PURE__*/React.createElement(Card, {\n    className: styles.card\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.cardHeader\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: styles.cardHeaderTitle\n  }, i18n.t('Configuration')), /*#__PURE__*/React.createElement(\"a\", {\n    href: infoLink,\n    className: styles.cardHeaderLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.cardHeaderInfo\n  }, /*#__PURE__*/React.createElement(IconInfo16, null)), i18n.t('About job configuration'))), /*#__PURE__*/React.createElement(JobAddFormContainer, {\n    setIsPristine: setIsPristine\n  })));\n};\n\nconst {\n  bool,\n  func\n} = PropTypes;\nJobAdd.propTypes = {\n  isPristine: bool.isRequired,\n  setIsPristine: func.isRequired\n};\nexport default JobAdd;","import React, { useState } from 'react';\nimport JobAdd from './JobAdd';\n\nconst JobAddContainer = () => {\n  const [isPristine, setIsPristine] = useState(true);\n  return /*#__PURE__*/React.createElement(JobAdd, {\n    isPristine: isPristine,\n    setIsPristine: setIsPristine\n  });\n};\n\nexport default JobAddContainer;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Router } from 'react-router';\nimport { JobListContainer } from '../../pages/JobList';\nimport { JobEditContainer } from '../../pages/JobEdit';\nimport { JobView } from '../../pages/JobView';\nimport { JobAddContainer } from '../../pages/JobAdd';\nimport history from '../../services/history';\n\nconst Routes = () => /*#__PURE__*/React.createElement(Router, {\n  history: history\n}, /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: JobListContainer\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/edit/:id\",\n  component: JobEditContainer\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/view/:id\",\n  component: JobView\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/add\",\n  component: JobAddContainer\n}));\n\nexport default Routes;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { CircularLoader, Layer, CenteredContent, NoticeBox } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport { getAuthorized } from './selectors';\nimport styles from './AuthWall.module.css';\nconst query = {\n  me: {\n    resource: 'me'\n  }\n};\n\nconst AuthWall = _ref => {\n  let {\n    children\n  } = _ref;\n  const {\n    loading,\n    error,\n    data\n  } = useDataQuery(query);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Layer, null, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  if (error) {\n    /**\n     * The app can't continue if this fails, because it doesn't\n     * know if the user is authorized, so throw the error.\n     */\n    throw error;\n  }\n\n  const isAuthorized = getAuthorized(data.me);\n\n  if (!isAuthorized) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.noticeBoxWrapper\n    }, /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: i18n.t('Not authorized')\n    }, i18n.t(\"You don't have access to the Job Scheduler. Contact a system administrator to request access.\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n};\n\nconst {\n  node\n} = PropTypes;\nAuthWall.propTypes = {\n  children: node.isRequired\n};\nexport default AuthWall;","export const getAuthorized = me => {\n  const {\n    authorities\n  } = me;\n\n  if (!authorities) {\n    return false;\n  }\n\n  const isAuthorized = authorities.includes('ALL') || authorities.includes('F_SCHEDULING_ADMIN');\n  return isAuthorized;\n};","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport styles from './PageWrapper.module.css';\n\nconst PageWrapper = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.wrapper\n  }, children);\n};\n\nconst {\n  node\n} = PropTypes;\nPageWrapper.propTypes = {\n  children: node.isRequired\n};\nexport default PageWrapper;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport bnTranslations from './bn/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport es_419Translations from './es_419/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport nlTranslations from './nl/translations.json';\nimport orTranslations from './or/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport roTranslations from './ro/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('bn', namespace, bnTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('es_419', namespace, es_419Translations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('nl', namespace, nlTranslations);\ni18n.addResources('or', namespace, orTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ro', namespace, roTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { CssVariables } from '@dhis2/ui';\nimport { Routes } from '../Routes';\nimport { AuthWall } from '../AuthWall';\nimport { Store } from '../Store';\nimport { PageWrapper } from '../PageWrapper';\nimport './App.css'; // eslint-disable-next-line import/no-unassigned-import\n\nimport '../../locales'; // The above is necessary for translations to work\n\nconst App = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CssVariables, {\n  spacers: true,\n  colors: true,\n  theme: true\n}), /*#__PURE__*/React.createElement(PageWrapper, null, /*#__PURE__*/React.createElement(AuthWall, null, /*#__PURE__*/React.createElement(Store, null, /*#__PURE__*/React.createElement(Routes, null)))));\n\nexport default App;"],"sourceRoot":""}