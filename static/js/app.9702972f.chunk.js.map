{"version":3,"sources":["D2App/components/LinkButton/LinkButton.module.css","D2App/pages/JobList/JobList.module.css","D2App/components/FormErrorBox/FormErrorBox.module.css","D2App/components/FormFields/DataIntegrityChecksField.module.css","D2App/components/FormFields/ParameterFields.module.css","D2App/components/FormFields/AggregatedDataExchangeField.module.css","D2App/components/Forms/JobAddForm.module.css","D2App/components/Forms/JobEditForm.module.css","D2App/components/JobDetails/JobDetails.module.css","D2App/pages/JobEdit/JobEdit.module.css","D2App/pages/JobView/JobView.module.css","D2App/pages/JobAdd/JobAdd.module.css","D2App/components/AuthWall/AuthWall.module.css","D2App/components/PageWrapper/PageWrapper.module.css","D2App/hooks/job-schedule/use-job-schedules.js","D2App/components/Store/StoreContext.js","D2App/components/Store/Store.js","D2App/components/Store/hooks.js","D2App/services/server-translations/analyticsTableTypes.js","D2App/services/server-translations/jobTypesMap.js","D2App/services/server-translations/jobStatusMap.js","D2App/components/Switches/ToggleJobSwitch.js","D2App/services/history/history.js","D2App/services/history/index.js","D2App/components/JobTable/EditJobAction.js","D2App/components/JobTable/ViewJobAction.js","D2App/components/Modal/CronPresetModal.js","D2App/components/Modal/DeleteJobModal.js","D2App/components/Modal/DiscardFormModal.js","D2App/components/Modal/RunJobModal.js","D2App/components/JobTable/RunJobAction.js","D2App/components/JobTable/DeleteJobAction.js","D2App/components/JobTable/Actions.js","D2App/components/JobTable/Status.js","D2App/components/JobTable/NextRun.js","D2App/services/validators/validate-cron.js","D2App/services/validators/required-cron.js","D2App/services/translate-cron/translate-cron.js","D2App/services/translate-cron/index.js","D2App/components/JobTable/Schedule.js","D2App/components/JobTable/JobTableRow.js","D2App/components/JobTable/JobTable.js","D2App/components/LinkButton/LinkButton.js","D2App/pages/JobList/JobList.js","D2App/pages/JobList/index.js","D2App/services/format-error/format-error.js","D2App/services/format-error/index.js","D2App/hooks/jobs/use-submit-job.js","D2App/hooks/jobs/use-update-job.js","D2App/hooks/jobs/use-jobs.js","D2App/hooks/jobs/use-job-by-id.js","D2App/components/Buttons/CronPresetButton.js","D2App/components/Buttons/DeleteJobButton.js","D2App/components/Buttons/DiscardFormButton.js","D2App/components/FormErrorBox/FormErrorBox.js","D2App/components/FormFields/JobNameField.js","D2App/components/FormFields/JobTypeField.js","D2App/components/FormFields/formatters.js","D2App/components/FormFields/SkipTableTypesField.js","D2App/components/FormFields/LabeledOptionsField.js","D2App/services/server-translations/dataIntegrityChecks.js","D2App/components/FormFields/DataIntegrityChecksField.js","D2App/components/FormFields/DataIntegrityReportTypeField.js","D2App/components/FormFields/AggregatedDataExchangeField.js","D2App/components/FormFields/ParameterFields.js","D2App/components/FormFields/CronField.js","D2App/components/FormFields/DelayField.js","D2App/components/FormFields/ScheduleField.js","D2App/components/FormFields/index.js","D2App/components/Forms/JobAddForm.js","D2App/components/Forms/JobAddFormContainer.js","D2App/components/Forms/JobEditForm.js","D2App/components/Forms/JobEditFormContainer.js","D2App/components/JobDetails/JobDetails.js","D2App/pages/JobEdit/JobEdit.js","D2App/pages/JobEdit/index.js","D2App/pages/JobView/JobView.js","D2App/pages/JobView/index.js","D2App/pages/JobAdd/JobAdd.js","D2App/pages/JobAdd/index.js","D2App/components/Routes/Routes.js","D2App/components/AuthWall/AuthWall.js","D2App/components/AuthWall/selectors.js","D2App/components/PageWrapper/PageWrapper.js","D2App/locales/index.js","D2App/components/App/App.js"],"names":["module","exports","key","query","resource","useJobSchedules","fetch","useDataQuery","data","map","job","id","sequence","StoreContext","createContext","jobs","jobTypes","parameterOptions","refetchJobs","Error","jobsQuery","params","fields","paging","jobTypesQuery","optionsQuery","skipTableTypes","validationRuleGroups","pushAnalysis","predictors","predictorGroups","dataIntegrityChecks","node","PropTypes","Store","children","jobFilterState","useState","showSystemJobsState","jobsFetch","jobTypesFetch","optionsFetch","loading","React","createElement","Layer","CenteredContent","CircularLoader","error","jobConfigurations","Provider","value","refetch","jobFilter","showSystemJobs","useAllJobs","useContext","useAllParameterOptions","useAllJobTypes","useRefetchJobs","useJobFilter","useShowSystemJobs","useJobListJobs","filter","displayName","toLowerCase","includes","configurable","useJob","find","useJobType","jobType","useJobTypeParameters","selectedJobType","jobParameters","useParameterOptions","parameter","analyticsTableTypes","DATA_VALUE","i18n","t","COMPLETENESS","COMPLETENESS_TARGET","ORG_UNIT_TARGET","EVENT","ENROLLMENT","VALIDATION_RESULT","jobTypesMap","ACCOUNT_EXPIRY_ALERT","AGGREGATE_DATA_EXCHANGE","ANALYTICS_TABLE","ANALYTICSTABLE_UPDATE","COMPLETE_DATA_SET_REGISTRATION_IMPORT","CONTINUOUS_ANALYTICS_TABLE","CREDENTIALS_EXPIRY_ALERT","DATA_INTEGRITY","DATA_SET_NOTIFICATION","DATA_STATISTICS","DATA_SYNC","DATAVALUE_IMPORT","DATAVALUE_IMPORT_INTERNAL","DISABLE_INACTIVE_USERS","ENROLLMENT_IMPORT","EVENT_IMPORT","EVENT_PROGRAMS_DATA_SYNC","FILE_RESOURCE_CLEANUP","GEOJSON_IMPORT","GML_IMPORT","IMAGE_PROCESSING","LEADER_ELECTION","LEADER_RENEWAL","METADATA_IMPORT","META_DATA_SYNC","MOCK","MONITORING","PREDICTOR","PROGRAM_DATA_SYNC","PROGRAM_NOTIFICATIONS","PUSH_ANALYSIS","REMOVE_EXPIRED_RESERVED_VALUES","REMOVE_USED_OR_EXPIRED_RESERVED_VALUES","RESOURCE_TABLE","SEND_SCHEDULED_MESSAGE","SMS_SEND","SYSTEM_VERSION_UPDATE_CHECK","TEI_IMPORT","TRACKER_IMPORT_JOB","TRACKER_IMPORT_NOTIFICATION_JOB","TRACKER_IMPORT_RULE_ENGINE_JOB","TRACKER_PROGRAMS_DATA_SYNC","TRACKER_SEARCH_OPTIMIZATION","VALIDATION_RESULTS_NOTIFICATION","jobStatusMap","COMPLETED","DISABLED","DONE","FAILED","NOT_STARTED","RUNNING","SCHEDULED","STOPPED","mutation","type","partial","enabled","bool","string","ToggleJobSwitch","checked","disabled","toggleJob","useDataMutation","Switch","name","onChange","then","ariaLabel","history","createHashHistory","EditJobAction","MenuItem","dense","onClick","push","label","ViewJobAction","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","cronPresets","func","CronPresetModal","setCron","hideModal","currentPreset","setCurrentPreset","Modal","open","small","onClose","ModalTitle","ModalContent","preset","Radio","ModalActions","ButtonStrip","end","Button","secondary","primary","DeleteJobModal","onSuccess","deleteJob","destructive","DiscardFormModal","RunJobModal","runJob","onComplete","hooks","NoticeBox","title","message","RunJobAction","showModal","setShowModal","Fragment","DeleteJobAction","Actions","DropdownButton","component","FlyoutMenu","defaultProps","Status","status","Tag","neutral","negative","positive","NextRun","nextExecutionTime","now","moment","Date","nextRun","utc","isSameOrBefore","to","propTypes","isRequired","WEEKDAYS","MONTHS","isValidNumber","number","x","y","isWildcard","field","isUndefined","isValidNumberRange","range","boundaries","split","isValidWithinRange","fraction","components","isValidFraction","isValidMonthField","months","firstMonth","secondMonth","m","indexOf","undefined","isAlphabeticMonth","isValidWeekdayField","weekdays","firstDay","secondDay","c","isAlphabeticWeekday","validateCron","exp","trim","isValidFields","isValidMinuteField","isValidHourField","isValidDayField","requiredCron","translateCron","cron","locale","language","cronstrue","toString","Schedule","cronExpression","delay","hasDelay","shape","JobTableRow","TableRow","TableCell","role","arrayOf","object","JobTable","Table","TableHead","TableRowHead","TableCellHead","TableBody","LinkButton","className","rest","Link","cx","styles","linkButton","JobList","setJobFilter","setShowSystemJobs","header","headerTitle","href","headerLink","rel","headerLinkIcon","IconInfo16","Card","controlContainer","InputField","dataTest","controlRight","Checkbox","FORM_ERROR","FinalForm","formatError","details","response","validationErrors","genericErrors","errorReports","forEach","report","errorProperty","useSubmitJob","engine","useDataEngine","mutate","variables","catch","useUpdateJob","useJobs","useJobById","CronPresetButton","DeleteJobButton","DiscardFormButton","shouldConfirm","array","FormErrorBox","submitError","list","Field","ReactFinalForm","VALIDATOR","composeValidators","hasValue","JobNameField","InputFieldFF","validate","required","FIELD_NAME","JobTypeField","options","sort","job1","job2","localeCompare","SingleSelectFieldFF","formatToString","SkipTableTypesField","parameterName","MultiSelectField","helpText","translatedOptions","option","MultiSelectFieldFF","LabeledOptionsField","labeledOptions","severityMap","WARNING","SEVERE","reportTypeMap","REPORT","SUMMARY","DETAILS","getReportTypeLabel","first","toUpperCase","concat","slice","join","snakeCaseToHumanReadable","useField","LabelComponent","severity","highlighted","transferOption","optionName","optionSeverity","renderOption","TransferOption","ChecksTransfer","input","meta","hidden","handleChange","useCallback","selected","isErr","touched","invalid","Transfer","maxSelections","Infinity","enableOrderChange","filterable","height","selectedEmptyComponent","SelectedEmptyComponent","transfer","Help","DataIntegrityChecksField","runSelected","setRunSelected","a","b","toggle","runSelectedChecked","FieldGroup","DataIntegrityReportTypeField","constants","initialValue","dataExchangeIds","AggregatedDataExchangeField","_data$dataExchangeIds","_data$dataExchangeIds2","_meta$error","beforeSubmit","_error$details","_error$details2","aggregateDataExchanges","exchangeIds","validationText","JOB_TYPES","ParameterFields","parameters","parameterComponents","fieldName","klass","parameterProps","parameterComponent","CustomParameterComponent","getCustomComponent","Box","marginTop","SwitchFieldFF","format","useFormState","useForm","CronField","form","values","subscription","change","integer","createNumberRange","DelayField","lowerbound","upperbound","ScheduleField","schedulingType","fieldNames","JOB_TYPE","JobAddForm","handleSubmit","pristine","submitting","hasSubmitErrors","setIsPristine","subscribe","useEffect","Spinner","onSubmit","maxWidth","formButtonContainer","icon","saveButton","Form","JobAddFormContainer","submitJob","destroyOnUnregister","JobEditForm","deleteButton","initialFields","JobEditFormContainer","useParams","updateJob","initialValues","reduce","filtered","JobDetails","created","lastExecutedStatus","lastExecuted","createdFromNow","from","translatedStatus","lastRunFromNow","wrapper","nsSeparator","JobEdit","isPristine","pageHeader","pageHeaderButton","pageHeaderTitle","card","cardHeader","cardHeaderTitle","cardHeaderLink","cardHeaderInfo","jobDetails","JobView","SingleSelectField","SingleSelectOption","JobAdd","Routes","Router","Route","exact","path","me","AuthWall","authorities","getAuthorized","noticeBoxWrapper","PageWrapper","namespace","addResources","arTranslations","ar_IQTranslations","bnTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","es_419Translations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","nlTranslations","orTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","roTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","App","CssVariables","spacers","colors","theme"],"mappings":"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","file":"static/js/app.9702972f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkButton\":\"LinkButton_linkButton__3VZ1s\",\"small\":\"LinkButton_small__v52sS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"JobList_header__23tFt\",\"headerTitle\":\"JobList_headerTitle__21D__\",\"headerLink\":\"JobList_headerLink__2zepi\",\"headerLinkIcon\":\"JobList_headerLinkIcon__XdfBB\",\"controlContainer\":\"JobList_controlContainer__3Yzj_\",\"controlRight\":\"JobList_controlRight__38lfB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FormErrorBox_list__3BejY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transfer\":\"DataIntegrityChecksField_transfer__3iNhL\",\"transferOption\":\"DataIntegrityChecksField_transferOption__196nJ\",\"optionName\":\"DataIntegrityChecksField_optionName__1FPq_\",\"optionSeverity\":\"DataIntegrityChecksField_optionSeverity__1ko-k\",\"highlighted\":\"DataIntegrityChecksField_highlighted__o3WxL\",\"selectedEmptyComponent\":\"DataIntegrityChecksField_selectedEmptyComponent__1nkdC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerTitle\":\"ParameterFields_headerTitle__IBF76\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"AggregatedDataExchangeField_field__3fdB6\",\"selectedEmptyComponent\":\"AggregatedDataExchangeField_selectedEmptyComponent__21mzv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButtonContainer\":\"JobAddForm_formButtonContainer__1MLSp\",\"saveButton\":\"JobAddForm_saveButton__RfxZ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButtonContainer\":\"JobEditForm_formButtonContainer__2b6Fi\",\"deleteButton\":\"JobEditForm_deleteButton__VQxBE\",\"saveButton\":\"JobEditForm_saveButton__278Ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"JobDetails_wrapper__1-YkO\",\"title\":\"JobDetails_title__1Cht7\",\"details\":\"JobDetails_details__2HITJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"JobEdit_pageHeader__3Fywp\",\"pageHeaderButton\":\"JobEdit_pageHeaderButton__29yjJ\",\"pageHeaderTitle\":\"JobEdit_pageHeaderTitle__jZrIG\",\"card\":\"JobEdit_card__2QqEg\",\"cardHeader\":\"JobEdit_cardHeader__Mv_cj\",\"cardHeaderTitle\":\"JobEdit_cardHeaderTitle__29Y64\",\"cardHeaderInfo\":\"JobEdit_cardHeaderInfo__3VWZt\",\"cardHeaderLink\":\"JobEdit_cardHeaderLink__2frj7\",\"jobDetails\":\"JobEdit_jobDetails__194v-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"JobView_pageHeader__3d3IR\",\"pageHeaderButton\":\"JobView_pageHeaderButton__2VF9Z\",\"pageHeaderTitle\":\"JobView_pageHeaderTitle__3wHyg\",\"card\":\"JobView_card__3LlD0\",\"cardHeader\":\"JobView_cardHeader__3v0pX\",\"cardHeaderTitle\":\"JobView_cardHeaderTitle__tPEnV\",\"cardHeaderInfo\":\"JobView_cardHeaderInfo__j1GsD\",\"cardHeaderLink\":\"JobView_cardHeaderLink__86M36\",\"jobDetails\":\"JobView_jobDetails__3cu4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"JobAdd_pageHeader__2NZzc\",\"pageHeaderButton\":\"JobAdd_pageHeaderButton__Xg_R9\",\"pageHeaderTitle\":\"JobAdd_pageHeaderTitle__1RMl0\",\"card\":\"JobAdd_card__1HH6H\",\"cardHeader\":\"JobAdd_cardHeader__1D3sS\",\"cardHeaderTitle\":\"JobAdd_cardHeaderTitle__2TG9a\",\"cardHeaderInfo\":\"JobAdd_cardHeaderInfo__vq_Y1\",\"cardHeaderLink\":\"JobAdd_cardHeaderLink__2CzPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeBoxWrapper\":\"AuthWall_noticeBoxWrapper__1ums5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PageWrapper_wrapper__t-CJy\"};","import { useDataQuery } from '@dhis2/app-runtime';\nconst key = 'schedules';\nconst query = {\n  [key]: {\n    resource: 'scheduler'\n  }\n};\n\nconst useJobSchedules = () => {\n  const fetch = useDataQuery(query); // Remove nesting from data and move the id up\n\n  if (fetch.data) {\n    const data = fetch.data[key].map(job => {\n      const id = job.sequence[0].id;\n      return { ...job,\n        id\n      };\n    });\n    return { ...fetch,\n      data\n    };\n  }\n\n  return fetch;\n};\n\nexport default useJobSchedules;","import { createContext } from 'react';\nconst StoreContext = /*#__PURE__*/createContext({\n  jobs: {},\n  jobTypes: {},\n  parameterOptions: {},\n  refetchJobs: () => {\n    throw new Error('Store context needs a valid provider');\n  }\n});\nexport default StoreContext;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { CircularLoader, Layer, CenteredContent } from '@dhis2/ui';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport StoreContext from './StoreContext';\nconst jobsQuery = {\n  jobs: {\n    resource: 'jobConfigurations',\n    params: {\n      fields: '*',\n      paging: false\n    }\n  }\n};\nconst jobTypesQuery = {\n  jobTypes: {\n    resource: 'jobConfigurations/jobTypes',\n    params: {\n      fields: '*',\n      paging: false\n    }\n  }\n};\nconst optionsQuery = {\n  // Used by the ANALYTICS_TABLE and CONTINUOUS_ANALYTICS_TABLE job types\n  skipTableTypes: {\n    resource: 'analytics/tableTypes'\n  },\n  // Used by the MONITORING job type\n  validationRuleGroups: {\n    resource: 'validationRuleGroups',\n    params: {\n      paging: false\n    }\n  },\n  // Used by the PUSH_ANALYSIS job type\n  pushAnalysis: {\n    resource: 'pushAnalysis',\n    params: {\n      paging: false\n    }\n  },\n  // Used by the PREDICTOR job type\n  predictors: {\n    resource: 'predictors',\n    params: {\n      paging: false\n    }\n  },\n  predictorGroups: {\n    resource: 'predictorGroups',\n    params: {\n      paging: false\n    }\n  },\n  dataIntegrityChecks: {\n    resource: 'dataIntegrity'\n  }\n};\n\nconst Store = ({\n  children\n}) => {\n  // State that should persist after a refetch\n  const jobFilterState = useState('');\n  const showSystemJobsState = useState(false);\n  const jobsFetch = useDataQuery(jobsQuery);\n  const jobTypesFetch = useDataQuery(jobTypesQuery);\n  const optionsFetch = useDataQuery(optionsQuery);\n  const loading = jobsFetch.loading || jobTypesFetch.loading || optionsFetch.loading;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Layer, null, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  const error = jobsFetch.error || jobTypesFetch.error || optionsFetch.error;\n\n  if (error) {\n    /**\n     * The app can't continue if this fails, because it doesn't\n     * have any data, so throw the error.\n     */\n    throw error;\n  }\n\n  const {\n    jobConfigurations: jobs\n  } = jobsFetch.data.jobs;\n  const {\n    jobTypes\n  } = jobTypesFetch.data.jobTypes;\n  const {\n    skipTableTypes,\n    validationRuleGroups: {\n      validationRuleGroups\n    },\n    pushAnalysis: {\n      pushAnalysis\n    },\n    predictors: {\n      predictors\n    },\n    predictorGroups: {\n      predictorGroups\n    },\n    dataIntegrityChecks\n  } = optionsFetch.data;\n  const parameterOptions = {\n    skipTableTypes,\n    validationRuleGroups,\n    pushAnalysis,\n    predictors,\n    predictorGroups,\n    dataIntegrityChecks\n  };\n  return /*#__PURE__*/React.createElement(StoreContext.Provider, {\n    value: {\n      jobs,\n      jobTypes,\n      parameterOptions,\n      refetchJobs: jobsFetch.refetch,\n      jobFilter: jobFilterState,\n      showSystemJobs: showSystemJobsState\n    }\n  }, children);\n};\n\nconst {\n  node\n} = PropTypes;\nStore.propTypes = {\n  children: node.isRequired\n};\nexport default Store;","import { useContext } from 'react';\nimport StoreContext from './StoreContext';\nexport const useAllJobs = () => {\n  const store = useContext(StoreContext);\n  return store.jobs;\n};\nexport const useAllParameterOptions = () => {\n  const store = useContext(StoreContext);\n  return store.parameterOptions;\n};\nexport const useAllJobTypes = () => {\n  const store = useContext(StoreContext);\n  return store.jobTypes;\n};\nexport const useRefetchJobs = () => {\n  const store = useContext(StoreContext);\n  return store.refetchJobs;\n};\n/**\n * The state for the job filter and showing system\n * jobs is used in the job list, but kept in the\n * store since it has to persist after a refetch.\n */\n\nexport const useJobFilter = () => {\n  const store = useContext(StoreContext);\n  return store.jobFilter;\n};\nexport const useShowSystemJobs = () => {\n  const store = useContext(StoreContext);\n  return store.showSystemJobs;\n};\n/**\n * This hook returns the list of jobs that's shown in the\n * job list route. The list is filtered by the job filter\n * string and the show system jobs toggle from the store\n * state.\n */\n\nexport const useJobListJobs = () => {\n  const [jobFilter] = useJobFilter();\n  const [showSystemJobs] = useShowSystemJobs();\n  const jobs = useAllJobs(); // Filter jobs by the current jobFilter\n\n  const applyJobFilter = job => job.displayName.toLowerCase().includes(jobFilter.toLowerCase()); // Filter jobs depending on the current showSystemJobs\n\n\n  const applyShowSystemJobs = job => // Jobs that are configurable are user jobs\n  showSystemJobs ? true : job.configurable;\n\n  return jobs.filter(applyJobFilter).filter(applyShowSystemJobs);\n}; // Finds a job by id\n\nexport const useJob = id => {\n  const jobs = useAllJobs();\n  return jobs.find(job => job.id === id);\n}; // Finds a jobType by the jobType string\n\nexport const useJobType = jobType => {\n  const jobTypes = useAllJobTypes();\n  return jobTypes.find(job => job.jobType === jobType);\n}; // Returns an array with all parameters for a certain jobType\n\nexport const useJobTypeParameters = jobType => {\n  const selectedJobType = useJobType(jobType);\n  const hasParameters = ('jobParameters' in selectedJobType);\n\n  if (!hasParameters) {\n    return [];\n  }\n\n  return selectedJobType.jobParameters;\n}; // Returns the parameter options for a given parameter\n\nexport const useParameterOptions = parameter => {\n  const parameterOptions = useAllParameterOptions();\n  return parameterOptions[parameter];\n};","import i18n from '@dhis2/d2-i18n';\nconst analyticsTableTypes = {\n  DATA_VALUE: i18n.t('Data value'),\n  COMPLETENESS: i18n.t('Completeness'),\n  COMPLETENESS_TARGET: i18n.t('Completeness target'),\n  ORG_UNIT_TARGET: i18n.t('Org unit target'),\n  EVENT: i18n.t('Event'),\n  ENROLLMENT: i18n.t('Enrollment'),\n  VALIDATION_RESULT: i18n.t('Validation result')\n};\nexport default analyticsTableTypes;","import i18n from '@dhis2/d2-i18n';\nconst jobTypesMap = {\n  ACCOUNT_EXPIRY_ALERT: i18n.t('Account expiry alert'),\n  AGGREGATE_DATA_EXCHANGE: i18n.t('Exchange aggregate data'),\n  ANALYTICS_TABLE: i18n.t('Analytics table'),\n  ANALYTICSTABLE_UPDATE: i18n.t('Analyticstable update'),\n  COMPLETE_DATA_SET_REGISTRATION_IMPORT: i18n.t('Complete data set registration import'),\n  CONTINUOUS_ANALYTICS_TABLE: i18n.t('Continuous analytics table'),\n  CREDENTIALS_EXPIRY_ALERT: i18n.t('Credentials expiry alert'),\n  DATA_INTEGRITY: i18n.t('Data integrity'),\n  DATA_SET_NOTIFICATION: i18n.t('Dataset notification'),\n  DATA_STATISTICS: i18n.t('Data statistics'),\n  DATA_SYNC: i18n.t('Data synchronization'),\n  DATAVALUE_IMPORT: i18n.t('Datavalue import'),\n  DATAVALUE_IMPORT_INTERNAL: i18n.t('Datavalue import internal'),\n  DISABLE_INACTIVE_USERS: i18n.t('Disable inactive users'),\n  ENROLLMENT_IMPORT: i18n.t('Enrollment import'),\n  EVENT_IMPORT: i18n.t('Event import'),\n  EVENT_PROGRAMS_DATA_SYNC: i18n.t('Event programs data sync'),\n  FILE_RESOURCE_CLEANUP: i18n.t('File resource clean up'),\n  GEOJSON_IMPORT: i18n.t('GEOJSON import'),\n  GML_IMPORT: i18n.t('GML import'),\n  IMAGE_PROCESSING: i18n.t('Image processing'),\n  LEADER_ELECTION: i18n.t('Leader election'),\n  LEADER_RENEWAL: i18n.t('Leader renewal'),\n  METADATA_IMPORT: i18n.t('Metadata import'),\n  META_DATA_SYNC: i18n.t('Metadata synchronization'),\n  MOCK: i18n.t('Mock'),\n  MONITORING: i18n.t('Monitoring'),\n  PREDICTOR: i18n.t('Predictor'),\n  PROGRAM_DATA_SYNC: i18n.t('Program data sync'),\n  PROGRAM_NOTIFICATIONS: i18n.t('Program notifications'),\n  PUSH_ANALYSIS: i18n.t('Push analysis'),\n  REMOVE_EXPIRED_RESERVED_VALUES: i18n.t('Remove expired reserved values'),\n  REMOVE_USED_OR_EXPIRED_RESERVED_VALUES: i18n.t('Remove used or expired reserved values'),\n  RESOURCE_TABLE: i18n.t('Resource table'),\n  SEND_SCHEDULED_MESSAGE: i18n.t('Send scheduled message'),\n  SMS_SEND: i18n.t('SMS send'),\n  SYSTEM_VERSION_UPDATE_CHECK: i18n.t('System version update check'),\n  TEI_IMPORT: i18n.t('TEI import'),\n  TRACKER_IMPORT_JOB: i18n.t('Tracker import job'),\n  TRACKER_IMPORT_NOTIFICATION_JOB: i18n.t('Tracker import notification job'),\n  TRACKER_IMPORT_RULE_ENGINE_JOB: i18n.t('Tracker import rule engine job'),\n  TRACKER_PROGRAMS_DATA_SYNC: i18n.t('Tracker programs data sync'),\n  TRACKER_SEARCH_OPTIMIZATION: i18n.t('Tracker search optimization'),\n  VALIDATION_RESULTS_NOTIFICATION: i18n.t('Validation results notification')\n};\nexport default jobTypesMap;","import i18n from '@dhis2/d2-i18n';\nconst jobStatusMap = {\n  COMPLETED: i18n.t('Completed'),\n  DISABLED: i18n.t('Disabled'),\n  DONE: i18n.t('Done'),\n  FAILED: i18n.t('Failed'),\n  NOT_STARTED: i18n.t('Not started'),\n  RUNNING: i18n.t('Running'),\n  SCHEDULED: i18n.t('Scheduled'),\n  STOPPED: i18n.t('Stopped')\n};\nexport default jobStatusMap;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { useDataMutation } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '@dhis2/ui';\nimport { useJobSchedules } from '../../hooks/job-schedule';\n/* istanbul ignore next */\n\nconst mutation = {\n  resource: 'jobConfigurations',\n  id: ({\n    id\n  }) => id,\n  type: 'update',\n  partial: true,\n  data: ({\n    enabled\n  }) => ({\n    enabled\n  })\n};\n\nconst ToggleJobSwitch = ({\n  id,\n  checked,\n  disabled\n}) => {\n  const [toggleJob, {\n    loading\n  }] = useDataMutation(mutation);\n  const {\n    refetch\n  } = useJobSchedules();\n  const enabled = !checked;\n  return /*#__PURE__*/React.createElement(Switch, {\n    name: `toggle-job-${id}`,\n    disabled: disabled || loading,\n    checked: checked,\n    onChange: () => {\n      toggleJob({\n        id,\n        enabled\n      }).then(refetch);\n    },\n    ariaLabel: i18n.t('Toggle job')\n  });\n};\n\nconst {\n  bool,\n  string\n} = PropTypes;\nToggleJobSwitch.propTypes = {\n  checked: bool.isRequired,\n  disabled: bool.isRequired,\n  id: string.isRequired\n};\nexport default ToggleJobSwitch;","import { createHashHistory } from 'history';\nconst history = createHashHistory();\nexport default history;","import history from './history';\nexport default history;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport history from '../../services/history';\n\nconst EditJobAction = ({\n  id\n}) => /*#__PURE__*/React.createElement(MenuItem, {\n  dense: true,\n  onClick: () => history.push(`/edit/${id}`),\n  label: i18n.t('Edit')\n});\n\nconst {\n  string\n} = PropTypes;\nEditJobAction.propTypes = {\n  id: string.isRequired\n};\nexport default EditJobAction;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport history from '../../services/history';\n\nconst ViewJobAction = ({\n  id\n}) => /*#__PURE__*/React.createElement(MenuItem, {\n  dense: true,\n  onClick: () => history.push(`/view/${id}`),\n  label: i18n.t('View')\n});\n\nconst {\n  string\n} = PropTypes;\nViewJobAction.propTypes = {\n  id: string.isRequired\n};\nexport default ViewJobAction;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip, Radio } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nconst cronPresets = [{\n  label: i18n.t('Every hour'),\n  value: '0 0 * ? * *'\n}, {\n  label: i18n.t('Every day at midnight'),\n  value: '0 0 1 ? * *'\n}, {\n  label: i18n.t('Every day at 3 am'),\n  value: '0 0 3 ? * *'\n}, {\n  label: i18n.t('Every day at noon'),\n  value: '0 0 12 ? * MON-FRI'\n}, {\n  label: i18n.t('Every week'),\n  value: '0 0 3 ? * MON'\n}];\n\nconst CronPresetModal = ({\n  setCron,\n  hideModal\n}) => {\n  const [currentPreset, setCurrentPreset] = useState('');\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: true,\n    small: true,\n    onClose: hideModal\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Choose a preset time/interval')), /*#__PURE__*/React.createElement(ModalContent, null, cronPresets.map(preset => /*#__PURE__*/React.createElement(Radio, _extends({}, preset, {\n    checked: currentPreset === preset.value,\n    key: preset.value,\n    onChange: ({\n      value\n    }) => setCurrentPreset(value)\n  })))), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, {\n    end: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: hideModal,\n    name: \"hide-modal\"\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    name: \"insert-preset\",\n    disabled: !currentPreset,\n    onClick: () => {\n      hideModal();\n      setCron(currentPreset);\n    }\n  }, i18n.t('Insert preset')))));\n};\n\nconst {\n  func\n} = PropTypes;\nCronPresetModal.propTypes = {\n  hideModal: func.isRequired,\n  setCron: func.isRequired\n};\nexport default CronPresetModal;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataMutation } from '@dhis2/app-runtime';\nconst mutation = {\n  resource: 'jobConfigurations',\n  id:\n  /* istanbul ignore next */\n  ({\n    id\n  }) => id,\n  type: 'delete'\n};\n\nconst DeleteJobModal = ({\n  id,\n  hideModal,\n  onSuccess\n}) => {\n  const [deleteJob] = useDataMutation(mutation);\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: true,\n    small: true,\n    onClose: hideModal\n  }, /*#__PURE__*/React.createElement(ModalContent, null, i18n.t('Are you sure you want to delete this job?')), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, {\n    end: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    name: \"hide-modal\",\n    secondary: true,\n    onClick: hideModal\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    name: `delete-job-${id}`,\n    destructive: true,\n    onClick: () => {\n      deleteJob({\n        id\n      }).then(() => {\n        hideModal();\n        onSuccess();\n      });\n    }\n  }, i18n.t('Delete')))));\n};\n\nconst {\n  func,\n  string\n} = PropTypes;\nDeleteJobModal.propTypes = {\n  hideModal: func.isRequired,\n  id: string.isRequired,\n  onSuccess: func.isRequired\n};\nexport default DeleteJobModal;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport history from '../../services/history';\n\nconst DiscardFormModal = ({\n  hideModal\n}) => /*#__PURE__*/React.createElement(Modal, {\n  open: true,\n  small: true,\n  onClose: hideModal\n}, /*#__PURE__*/React.createElement(ModalContent, null, i18n.t('Are you sure you want to discard this form?')), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, {\n  end: true\n}, /*#__PURE__*/React.createElement(Button, {\n  name: \"cancel-discard-form\",\n  secondary: true,\n  onClick: hideModal\n}, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n  name: \"discard-form\",\n  destructive: true,\n  onClick: () => {\n    hideModal();\n    history.push('/');\n  }\n}, i18n.t('Discard')))));\n\nconst {\n  func\n} = PropTypes;\nDiscardFormModal.propTypes = {\n  hideModal: func.isRequired\n};\nexport default DiscardFormModal;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { useDataMutation } from '@dhis2/app-runtime';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, NoticeBox } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../Store';\n\nconst RunJobModal = ({\n  id,\n  hideModal\n}) => {\n  const [mutation] = useState({\n    resource: `jobConfigurations/${id}/execute`,\n    type: 'create'\n  });\n  const [runJob, {\n    loading,\n    error\n  }] = useDataMutation(mutation, {\n    onComplete: () => {\n      hideModal();\n      refetchJobs();\n    }\n  });\n  const refetchJobs = hooks.useRefetchJobs();\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: true,\n    small: true,\n    onClose: hideModal\n  }, /*#__PURE__*/React.createElement(ModalContent, null, error && /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Error running job')\n  }, error.message), /*#__PURE__*/React.createElement(\"p\", null, i18n.t('Are you sure you want to run this job?'))), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, {\n    end: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    name: \"hide-modal\",\n    secondary: true,\n    onClick: hideModal,\n    disabled: loading\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    name: `run-job-${id}`,\n    primary: true,\n    onClick: runJob,\n    loading: loading\n  }, i18n.t('Run')))));\n};\n\nconst {\n  func,\n  string\n} = PropTypes;\nRunJobModal.propTypes = {\n  hideModal: func.isRequired,\n  id: string.isRequired\n};\nexport default RunJobModal;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { RunJobModal } from '../Modal';\n\nconst RunJobAction = ({\n  id,\n  enabled\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    onClick: () => {\n      setShowModal(true);\n    },\n    disabled: !enabled,\n    label: i18n.t('Run manually')\n  }), showModal && /*#__PURE__*/React.createElement(RunJobModal, {\n    id: id,\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false)\n  }));\n};\n\nconst {\n  string,\n  bool\n} = PropTypes;\nRunJobAction.propTypes = {\n  id: string.isRequired,\n  enabled: bool\n};\nexport default RunJobAction;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { DeleteJobModal } from '../Modal';\nimport { hooks } from '../Store';\n\nconst DeleteJobAction = ({\n  id\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const refetchJobs = hooks.useRefetchJobs();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    destructive: true,\n    onClick: () => {\n      setShowModal(true);\n    },\n    label: i18n.t('Delete')\n  }), showModal && /*#__PURE__*/React.createElement(DeleteJobModal, {\n    id: id,\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false),\n    onSuccess: refetchJobs\n  }));\n};\n\nconst {\n  string\n} = PropTypes;\nDeleteJobAction.propTypes = {\n  id: string.isRequired\n};\nexport default DeleteJobAction;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { FlyoutMenu, DropdownButton } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport EditJobAction from './EditJobAction';\nimport ViewJobAction from './ViewJobAction';\nimport RunJobAction from './RunJobAction';\nimport DeleteJobAction from './DeleteJobAction';\n\nconst Actions = ({\n  id,\n  configurable,\n  enabled\n}) => /*#__PURE__*/React.createElement(DropdownButton, {\n  small: true,\n  component: /*#__PURE__*/React.createElement(FlyoutMenu, null, configurable ? /*#__PURE__*/React.createElement(EditJobAction, {\n    id: id\n  }) : /*#__PURE__*/React.createElement(ViewJobAction, {\n    id: id\n  }), configurable && /*#__PURE__*/React.createElement(RunJobAction, {\n    enabled: enabled,\n    id: id\n  }), configurable && /*#__PURE__*/React.createElement(DeleteJobAction, {\n    id: id\n  }))\n}, i18n.t('Actions'));\n\nActions.defaultProps = {\n  configurable: false\n};\nconst {\n  string,\n  bool\n} = PropTypes;\nActions.propTypes = {\n  id: string.isRequired,\n  configurable: bool,\n  enabled: bool\n};\nexport default Actions;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Tag } from '@dhis2/ui';\nimport { jobStatusMap } from '../../services/server-translations';\n\nconst Status = ({\n  status\n}) => {\n  switch (status) {\n    case 'STOPPED':\n    case 'DISABLED':\n      return /*#__PURE__*/React.createElement(Tag, null, jobStatusMap[status]);\n\n    case 'RUNNING':\n    case 'NOT_STARTED':\n    case 'SCHEDULED':\n      return /*#__PURE__*/React.createElement(Tag, {\n        neutral: true\n      }, jobStatusMap[status]);\n\n    case 'FAILED':\n      return /*#__PURE__*/React.createElement(Tag, {\n        negative: true\n      }, jobStatusMap[status]);\n\n    case 'DONE':\n      return /*#__PURE__*/React.createElement(Tag, {\n        positive: true\n      }, jobStatusMap[status]);\n    // Unrecognised status\n\n    default:\n      return null;\n  }\n};\n\nconst {\n  string\n} = PropTypes;\nStatus.propTypes = {\n  status: string.isRequired\n};\nexport default Status;","import moment from 'moment';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nconst NextRun = ({\n  nextExecutionTime,\n  enabled\n}) => {\n  if (!enabled || !nextExecutionTime) {\n    return '-';\n  }\n\n  const now = moment(Date.now());\n  /**\n   * The recommendation is to run dhis2 on a server set to UTC time.\n   * In that case this timestamp is also UTC. If those recommendations\n   * weren't followed the time could be off, but there's nothing\n   * we can do to detect that.\n   */\n\n  const nextRun = moment.utc(nextExecutionTime);\n  const nextRunIsInPast = nextRun.isSameOrBefore(now, 'minute');\n  /**\n   * If the time is in the past, that could mean that the task is running,\n   * and the nextExecutionTime hasn't been updated yet.\n   */\n\n  if (nextRunIsInPast) {\n    return i18n.t('Not scheduled');\n  }\n\n  return now.to(nextRun);\n};\n\nconst {\n  bool,\n  string\n} = PropTypes;\nNextRun.propTypes = {\n  enabled: bool.isRequired,\n  nextExecutionTime: string\n};\nexport default NextRun;","const WEEKDAYS = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];\nconst MONTHS = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n\nconst isValidFields = fields => fields && fields.length === 6;\n\nconst isValidNumber = (number, x, y) => number >= x && number <= y;\n\nconst isWildcard = field => field === '*';\n\nconst isUndefined = field => field === '?';\n\nconst isValidNumberRange = (range, x, y) => {\n  const boundaries = range.split('-');\n\n  if (!boundaries || boundaries.length !== 2) {\n    return false;\n  }\n\n  return isValidNumber(boundaries[0], x, y) && isValidNumber(boundaries[1], x, y) && boundaries[0] <= boundaries[1];\n};\n\nconst isValidFraction = (fraction, x, y) => {\n  const components = fraction.split('/');\n\n  if (!components || components.length !== 2) {\n    return false;\n  }\n  /* istanbul ignore next */\n\n\n  return (isWildcard(components[0]) || isValidNumber(components[0], x, y) || isValidNumberRange(components[0], x, y)) && isValidNumber(components[1], x, y);\n};\n\nconst isAlphabeticWeekday = field => {\n  const weekdays = field.split('-');\n  const [firstDay, secondDay] = weekdays.map(c => WEEKDAYS.indexOf(c));\n  return firstDay !== -1 && secondDay === undefined || firstDay !== -1 && secondDay !== -1 && firstDay <= secondDay;\n};\n\nconst isAlphabeticMonth = field => {\n  const months = field.split('-');\n  const [firstMonth, secondMonth] = months.map(m => MONTHS.indexOf(m));\n  /* istanbul ignore next */\n\n  return firstMonth !== -1 && secondMonth === undefined || firstMonth !== -1 && secondMonth !== -1 && firstMonth <= secondMonth;\n};\n\nconst isValidWithinRange = (field, x, y) => isWildcard(field) || isValidNumber(field, x, y) || isValidNumberRange(field, x, y) || isValidFraction(field, x, y);\n\nconst isValidSecondField = field => isValidWithinRange(field, 0, 59);\n\nconst isValidMinuteField = field => isValidWithinRange(field, 0, 59);\n\nconst isValidHourField = field => isValidWithinRange(field, 0, 23);\n\nconst isValidDayField = field => isValidWithinRange(field, 0, 31) || isUndefined(field);\n\nconst isValidMonthField = field => isValidWithinRange(field, 1, 12) || isAlphabeticMonth(field);\n\nconst isValidWeekdayField = field => isValidWithinRange(field, 1, 7) || isAlphabeticWeekday(field) || isUndefined(field);\n/**\n * Cron expression validation. Validates the Spring Scheduling pattern.\n * Format: <second> <minute> <hour> <day-of-month> <month> <day-of-week>\n * Source code: https://git.io/vpoqG\n * Documentation: https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/scheduling/support/CronSequenceGenerator.html\n *\n * @TODO: evaluate if the following is possible\n * There's a npm library called `cron-validate`. It'd need to be configured to\n * accept the quartz job scheduler syntax, it can't be used as a drop-in\n * replacement! https://dhis2.atlassian.net/browse/TECH-1474\n */\n\n\nconst validateCron = exp => {\n  if (!exp) {\n    return false;\n  }\n\n  const fields = exp.trim().split(' ');\n\n  if (!isValidFields(fields)) {\n    return false;\n  }\n\n  return isValidSecondField(fields[0]) && isValidMinuteField(fields[1]) && isValidHourField(fields[2]) && isValidDayField(fields[3]) && isValidMonthField(fields[4]) && isValidWeekdayField(fields[5]);\n};\n\nexport default validateCron;","import i18n from '@dhis2/d2-i18n';\nimport validateCron from './validate-cron';\n\nconst requiredCron = value => {\n  const isString = typeof value === 'string';\n  const isFilled = isString && value.length > 0;\n\n  if (!isFilled) {\n    return i18n.t('A CRON expression is required');\n  }\n\n  if (!validateCron(value)) {\n    return i18n.t('Please enter a valid CRON expression');\n  }\n\n  return undefined;\n};\n\nexport default requiredCron;","import cronstrue from 'cronstrue/i18n';\nimport i18n from '@dhis2/d2-i18n';\nimport { validateCron } from '../validators';\nconst fallback = 'en';\n\nconst translateCron = cron => {\n  const locale = i18n.language || fallback;\n  const isValid = cron && validateCron(cron);\n\n  if (!isValid) {\n    return '';\n  }\n\n  return cronstrue.toString(cron, {\n    locale\n  });\n};\n\nexport default translateCron;","import translateCron from './translate-cron';\nexport default translateCron;","import { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport translateCron from '../../services/translate-cron';\n\nconst Schedule = ({\n  cronExpression,\n  delay\n}) => {\n  const hasCronExpression = !!cronExpression;\n  const hasDelay = !!delay;\n\n  if (hasCronExpression) {\n    return translateCron(cronExpression);\n  }\n\n  if (hasDelay) {\n    return i18n.t('{{ delay }} seconds after last run', {\n      delay\n    });\n  } // Unrecognised or invalid type\n\n\n  return '-';\n};\n\nconst {\n  string,\n  number\n} = PropTypes;\nSchedule.propTypes = {\n  cronExpression: string,\n  delay: number\n};\nexport default Schedule;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { TableRow, TableCell } from '@dhis2/ui';\nimport { jobTypesMap } from '../../services/server-translations';\nimport { ToggleJobSwitch } from '../Switches';\nimport Actions from './Actions';\nimport Status from './Status';\nimport NextRun from './NextRun';\nimport Schedule from './Schedule';\n\nconst JobTableRow = ({\n  job: {\n    id,\n    name,\n    type,\n    cronExpression,\n    delay,\n    status,\n    nextExecutionTime,\n    enabled,\n    configurable\n  }\n}) => /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n  role: \"rowheader\"\n}, name), /*#__PURE__*/React.createElement(TableCell, null, jobTypesMap[type]), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Schedule, {\n  cronExpression: cronExpression,\n  delay: delay\n})), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(NextRun, {\n  nextExecutionTime: nextExecutionTime,\n  enabled: enabled\n})), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Status, {\n  status: status\n})), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(ToggleJobSwitch, {\n  id: id,\n  checked: enabled,\n  disabled: !configurable\n})), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Actions, {\n  id: id,\n  enabled: enabled,\n  configurable: configurable\n})));\n\nconst {\n  shape,\n  string,\n  bool,\n  number\n} = PropTypes;\nJobTableRow.propTypes = {\n  job: shape({\n    name: string.isRequired,\n    enabled: bool.isRequired,\n    id: string.isRequired,\n    status: string.isRequired,\n    type: string.isRequired,\n    cronExpression: string,\n    delay: number,\n    nextExecutionTime: string\n  }).isRequired\n};\nexport default JobTableRow;","import React from 'react';\nimport { Table, TableHead, TableRowHead, TableRow, TableCell, TableCellHead, TableBody } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport JobTableRow from './JobTableRow';\n\nconst JobTable = ({\n  jobs\n}) => /*#__PURE__*/React.createElement(Table, null, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Job name')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Type')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Schedule')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Next run')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Status')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('On/off')), /*#__PURE__*/React.createElement(TableCellHead, null))), /*#__PURE__*/React.createElement(TableBody, null, jobs.length === 0 ? /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, null, i18n.t('No jobs to display'))) : jobs.map(job => /*#__PURE__*/React.createElement(JobTableRow, {\n  key: job.id,\n  job: job\n}))));\n\nconst {\n  arrayOf,\n  object\n} = PropTypes;\nJobTable.propTypes = {\n  jobs: arrayOf(object).isRequired\n};\nexport default JobTable;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link } from 'react-router-dom';\nimport styles from './LinkButton.module.css';\n\nconst LinkButton = ({\n  className,\n  small,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Link, _extends({\n    className: cx(styles.linkButton, {\n      [styles.small]: small\n    }, className)\n  }, rest));\n};\n\nLinkButton.propTypes = {\n  className: PropTypes.string,\n  small: PropTypes.bool\n};\nexport default LinkButton;","import React from 'react';\nimport { CircularLoader, Layer, CenteredContent, Card, Checkbox, InputField, IconInfo16 } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { useJobSchedules } from '../../hooks/job-schedule';\nimport { hooks } from '../../components/Store';\nimport { JobTable } from '../../components/JobTable';\nimport { LinkButton } from '../../components/LinkButton';\nimport styles from './JobList.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobList = () => {\n  const [jobFilter, setJobFilter] = hooks.useJobFilter();\n  const [showSystemJobs, setShowSystemJobs] = hooks.useShowSystemJobs();\n  const {\n    data,\n    loading,\n    error\n  } = useJobSchedules();\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Layer, null, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  if (error) {\n    throw error;\n  } // Filter jobs by the current jobFilter\n\n\n  const applyJobFilter = job => job.name.toLowerCase().includes(jobFilter.toLowerCase()); // Filter jobs depending on the current showSystemJobs\n\n\n  const applyShowSystemJobs = job => // Jobs that are configurable are user jobs\n  showSystemJobs ? true : job.configurable;\n\n  const jobs = data.filter(applyJobFilter).filter(applyShowSystemJobs);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.header\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.headerTitle\n  }, i18n.t('Scheduled jobs')), /*#__PURE__*/React.createElement(\"a\", {\n    href: infoLink,\n    className: styles.headerLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.headerLinkIcon\n  }, /*#__PURE__*/React.createElement(IconInfo16, null)), i18n.t('About job configuration'))), /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.controlContainer\n  }, /*#__PURE__*/React.createElement(InputField, {\n    dataTest: \"job-filter-input\",\n    label: i18n.t('Filter jobs'),\n    onChange: ({\n      value\n    }) => {\n      setJobFilter(value);\n    },\n    value: jobFilter,\n    type: \"search\",\n    role: \"searchbox\",\n    name: \"job-filter\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.controlRight\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    dataTest: \"job-toggle-checkbox\",\n    checked: showSystemJobs,\n    label: i18n.t('Include system jobs in list'),\n    onChange: ({\n      checked\n    }) => {\n      setShowSystemJobs(checked);\n    }\n  }), /*#__PURE__*/React.createElement(LinkButton, {\n    to: \"/add\"\n  }, i18n.t('New job')))), /*#__PURE__*/React.createElement(JobTable, {\n    jobs: jobs\n  })));\n};\n\nexport default JobList;","import JobList from './JobList';\nexport default JobList;","import { FinalForm } from '@dhis2/ui';\nconst {\n  FORM_ERROR\n} = FinalForm;\n/**\n * Formats the errors returned by our backend to a format that final-form can parse\n */\n\nconst formatError = error => {\n  const {\n    details: {\n      response\n    }\n  } = error;\n  const validationErrors = {};\n  /**\n   * Some backend errors do not have a way for us to infer the related field,\n   * those can be put in genericErrors\n   */\n\n  const genericErrors = [];\n\n  if (response.errorReports && response.errorReports.length) {\n    response.errorReports.forEach(report => {\n      /**\n       * errorProperty is how the backend indicates the field that the error\n       * is related to. If we know this, return it as a field specific error\n       * (note that this will swallow errors if the backend indicates a field\n       * that does not exist in the frontend). Otherwise we'll push it to the\n       * generic errors.\n       */\n      if (report.errorProperty) {\n        validationErrors[report.errorProperty] = report.message;\n      } else {\n        genericErrors.push(report.message);\n      }\n    });\n  }\n\n  if (genericErrors.length > 0) {\n    validationErrors[FORM_ERROR] = genericErrors;\n  }\n\n  return validationErrors;\n};\n\nexport default formatError;","import formatError from './format-error';\nexport default formatError;","import { useContext } from 'react';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { StoreContext } from '../../components/Store';\nimport history from '../../services/history';\nimport formatError from '../../services/format-error';\nconst mutation = {\n  resource: 'jobConfigurations',\n  type: 'create',\n  data:\n  /* istanbul ignore next */\n  ({\n    job\n  }) => job\n};\n\nconst useSubmitJob = () => {\n  const {\n    refetchJobs\n  } = useContext(StoreContext);\n  const engine = useDataEngine();\n\n  const submitJob = job => engine.mutate(mutation, {\n    variables: {\n      job\n    }\n  }).then(() => {\n    history.push('/');\n    refetchJobs();\n  }).catch(error => {\n    const isValidationError = error.type === 'access'; // Potential validation error, return it in a format final-form can handle\n\n    if (isValidationError) {\n      return formatError(error);\n    } // Throw any unexpected errors\n\n\n    throw error;\n  });\n\n  return [submitJob];\n};\n\nexport default useSubmitJob;","import { useContext } from 'react';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { StoreContext } from '../../components/Store';\nimport history from '../../services/history';\nimport formatError from '../../services/format-error';\nconst mutation = {\n  resource: 'jobConfigurations',\n  type: 'update',\n  id:\n  /* istanbul ignore next */\n  ({\n    id\n  }) => id,\n  data:\n  /* istanbul ignore next */\n  ({\n    job\n  }) => job\n};\n\nconst useUpdateJob = ({\n  id\n}) => {\n  const {\n    refetchJobs\n  } = useContext(StoreContext);\n  const engine = useDataEngine();\n\n  const updateJob = job => engine.mutate(mutation, {\n    variables: {\n      job,\n      id\n    }\n  }).then(() => {\n    history.push('/');\n    refetchJobs();\n  }).catch(error => {\n    const isValidationError = error.type === 'access'; // Potential validation error, return it in a format final-form can handle\n\n    if (isValidationError) {\n      return formatError(error);\n    } // Throw any unexpected errors\n\n\n    throw error;\n  });\n\n  return [updateJob];\n};\n\nexport default useUpdateJob;","import { useDataQuery } from '@dhis2/app-runtime';\nconst key = 'jobs';\nconst query = {\n  [key]: {\n    resource: 'jobConfigurations',\n    params: {\n      fields: ['created', 'cronExpression', 'id', 'jobType', 'lastExecuted', 'lastExecutedStatus', 'name']\n    }\n  }\n};\n\nconst useJobs = () => {\n  const fetch = useDataQuery(query); // Remove nesting from data\n\n  if (fetch.data) {\n    const data = fetch.data[key].jobConfigurations;\n    return { ...fetch,\n      data\n    };\n  }\n\n  return fetch;\n};\n\nexport default useJobs;","import useJobs from './use-jobs';\n\nconst useJobById = id => {\n  const fetch = useJobs(); // Find job by id\n\n  if (fetch.data) {\n    const data = fetch.data.find(job => {\n      return job.id === id;\n    });\n    return { ...fetch,\n      data\n    };\n  }\n\n  return fetch;\n};\n\nexport default useJobById;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { CronPresetModal } from '../Modal';\n\nconst CronPresetButton = ({\n  setCron,\n  small\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setShowModal(true),\n    small: small\n  }, i18n.t('Choose from preset times')), showModal && /*#__PURE__*/React.createElement(CronPresetModal, {\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false),\n    setCron: setCron\n  }));\n};\n\nCronPresetButton.defaultProps = {\n  small: false\n};\nconst {\n  func,\n  bool\n} = PropTypes;\nCronPresetButton.propTypes = {\n  setCron: func.isRequired,\n  small: bool\n};\nexport default CronPresetButton;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { DeleteJobModal } from '../Modal';\n\nconst DeleteJobButton = ({\n  id,\n  onSuccess\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    destructive: true,\n    onClick: () => setShowModal(true)\n  }, i18n.t('Delete job')), showModal && /*#__PURE__*/React.createElement(DeleteJobModal, {\n    id: id,\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false),\n    onSuccess: onSuccess\n  }));\n};\n\nconst {\n  string,\n  func\n} = PropTypes;\nDeleteJobButton.propTypes = {\n  id: string.isRequired,\n  onSuccess: func.isRequired\n};\nexport default DeleteJobButton;","import React, { useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button } from '@dhis2/ui';\nimport history from '../../services/history';\nimport { DiscardFormModal } from '../Modal';\n\nconst DiscardFormButton = ({\n  shouldConfirm,\n  children,\n  small,\n  className\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const onClick = shouldConfirm ? () => setShowModal(true) : () => history.push('/');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: onClick,\n    small: small,\n    className: className\n  }, children), showModal && /*#__PURE__*/React.createElement(DiscardFormModal, {\n    hideModal:\n    /* istanbul ignore next */\n    () => setShowModal(false)\n  }));\n};\n\nDiscardFormButton.defaultProps = {\n  className: '',\n  shouldConfirm: false,\n  small: false\n};\nconst {\n  string,\n  bool\n} = PropTypes;\nDiscardFormButton.propTypes = {\n  children: string.isRequired,\n  className: string,\n  shouldConfirm: bool,\n  small: bool\n};\nexport default DiscardFormButton;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { NoticeBox } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport styles from './FormErrorBox.module.css';\n\nconst FormErrorBox = ({\n  submitError\n}) => {\n  const hasGenericSubmitErrors = submitError.length > 0;\n\n  if (!hasGenericSubmitErrors) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst creating your job')\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.list\n  }, submitError.map(error => /*#__PURE__*/React.createElement(\"li\", {\n    key: error\n  }, error))));\n};\n\nconst {\n  array\n} = PropTypes;\nFormErrorBox.propTypes = {\n  submitError: array.isRequired\n};\nexport default FormErrorBox;","import React from 'react';\nimport { ReactFinalForm, InputFieldFF, composeValidators, hasValue, string } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nconst {\n  Field\n} = ReactFinalForm; // The key under which this field will be sent to the backend\n\nconst FIELD_NAME = 'name';\nconst VALIDATOR = composeValidators(string, hasValue);\n\nconst JobNameField = () => /*#__PURE__*/React.createElement(Field, {\n  name: FIELD_NAME,\n  component: InputFieldFF,\n  validate: VALIDATOR,\n  label: i18n.t('Name'),\n  type: \"text\",\n  required: true\n});\n\nexport default JobNameField;","import React from 'react';\nimport { ReactFinalForm, SingleSelectFieldFF, composeValidators, hasValue, string } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../Store';\nimport { jobTypesMap } from '../../services/server-translations';\nconst {\n  Field\n} = ReactFinalForm; // The key under which this field will be sent to the backend\n\nexport const FIELD_NAME = 'jobType';\nconst VALIDATOR = composeValidators(string, hasValue);\n\nconst JobTypeField = () => {\n  const jobTypes = hooks.useAllJobTypes();\n  const options = jobTypes.map(({\n    jobType\n  }) => ({\n    value: jobType,\n    label: jobTypesMap[jobType]\n  })).filter(job => !!job.label).sort((job1, job2) => job1.label.localeCompare(job2.label));\n  return /*#__PURE__*/React.createElement(Field, {\n    name: FIELD_NAME,\n    validate: VALIDATOR,\n    component: SingleSelectFieldFF,\n    options: options,\n    label: i18n.t('Job type'),\n    required: true\n  });\n};\n\nexport default JobTypeField;","/**\n * Our backend returns certain values as a number, but our\n * inputs expect and return a string, so we're formatting them to strings\n */\nexport const formatToString = value => {\n  if (typeof value === 'number') {\n    return value.toString();\n  }\n\n  return value;\n};","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { MultiSelectField, ReactFinalForm, MultiSelectFieldFF } from '@dhis2/ui';\nimport { hooks } from '../Store';\nimport { analyticsTableTypes } from '../../services/server-translations';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst SkipTableTypesField = ({\n  label,\n  name,\n  parameterName\n}) => {\n  const options = hooks.useParameterOptions(parameterName);\n\n  if (options.length === 0) {\n    return /*#__PURE__*/React.createElement(MultiSelectField, {\n      disabled: true,\n      helpText: i18n.t('No options available'),\n      label: label\n    });\n  }\n\n  const translatedOptions = options.map(option => ({\n    value: option,\n    label: analyticsTableTypes[option] || option\n  }));\n  return /*#__PURE__*/React.createElement(Field, {\n    name: name,\n    component: MultiSelectFieldFF,\n    options: translatedOptions,\n    label: label\n  });\n};\n\nconst {\n  string\n} = PropTypes;\nSkipTableTypesField.propTypes = {\n  label: string.isRequired,\n  name: string.isRequired,\n  parameterName: string.isRequired\n};\nexport default SkipTableTypesField;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { MultiSelectFieldFF, ReactFinalForm, MultiSelectField } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { hooks } from '../Store';\nconst {\n  Field\n} = ReactFinalForm; // A labeled options field has options that have both an id and a label.\n\nconst LabeledOptionsField = ({\n  label,\n  name,\n  parameterName\n}) => {\n  const options = hooks.useParameterOptions(parameterName);\n\n  if (options.length === 0) {\n    return /*#__PURE__*/React.createElement(MultiSelectField, {\n      disabled: true,\n      helpText: i18n.t('No options available'),\n      label: label\n    });\n  }\n\n  const labeledOptions = options.map(({\n    id,\n    displayName\n  }) => ({\n    value: id,\n    label: displayName\n  }));\n  return /*#__PURE__*/React.createElement(Field, {\n    name: name,\n    component: MultiSelectFieldFF,\n    options: labeledOptions,\n    label: label\n  });\n};\n\nconst {\n  string\n} = PropTypes;\nLabeledOptionsField.propTypes = {\n  label: string.isRequired,\n  name: string.isRequired,\n  parameterName: string.isRequired\n};\nexport default LabeledOptionsField;","import i18n from '@dhis2/d2-i18n';\nexport const severityMap = {\n  WARNING: i18n.t('Warning'),\n  SEVERE: i18n.t('Severe')\n};\nconst reportTypeMap = {\n  REPORT: i18n.t('Report'),\n  SUMMARY: i18n.t('Summary'),\n  DETAILS: i18n.t('Details')\n};\n\nconst snakeCaseToHumanReadable = string => {\n  const split = string.split('_');\n  const [first, ...rest] = split;\n  return first[0].toUpperCase().concat(first.slice(1)).concat(` ${rest.join(' ')}`);\n};\n\nexport const getReportTypeLabel = type => reportTypeMap[type] || snakeCaseToHumanReadable(type);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useCallback, useState } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { FieldGroup, Radio, Transfer, TransferOption, ReactFinalForm, InputFieldFF, Help } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { hooks } from '../Store';\nimport { severityMap } from '../../services/server-translations/dataIntegrityChecks';\nimport styles from './DataIntegrityChecksField.module.css';\nconst {\n  Field,\n  useField\n} = ReactFinalForm;\n\nconst VALIDATOR = value => {\n  // should not validate when null or undefined\n  // means \"Run all\" is selected\n  if (!value == null) {\n    return undefined;\n  }\n\n  if (value && value.length < 1) {\n    return i18n.t('Please select checks to run.');\n  }\n};\n\nconst DataIntegrityChecksField = ({\n  label,\n  name\n}) => {\n  const options = hooks.useParameterOptions('dataIntegrityChecks');\n  const {\n    input: {\n      value,\n      onChange\n    }\n  } = useField(name);\n  const hasValue = !!value && value.length > 0;\n  const [runSelected, setRunSelected] = useState(hasValue);\n  const translatedOptions = options.map(option => ({ ...option,\n    value: option.name,\n    label: option.displayName,\n    severity: severityMap[option.severity]\n  })).sort((a, b) => a.label.localeCompare(b.label));\n\n  const toggle = ({\n    value\n  }) => {\n    const runSelectedChecked = value === 'true';\n\n    if (!runSelectedChecked) {\n      // clear checks when \"Run all\" is selected\n      // null means all checks will be run\n      onChange(null);\n    } else {\n      // set to empty array explicitly,\n      // this is to allow to differentiate between \"selected checks\" but empty\n      // and \"run all\"-empty for validation\n      onChange([]);\n    }\n\n    setRunSelected(runSelectedChecked);\n  };\n\n  return /*#__PURE__*/React.createElement(FieldGroup, {\n    label: i18n.t('Checks to run')\n  }, /*#__PURE__*/React.createElement(Radio, {\n    name: 'checksToRun',\n    value: 'false',\n    label: i18n.t('Run all available checks'),\n    checked: !runSelected,\n    onChange: toggle\n  }), /*#__PURE__*/React.createElement(Radio, {\n    name: 'checksToRun',\n    value: 'true',\n    label: i18n.t('Only run selected checks'),\n    checked: runSelected,\n    onChange: toggle\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: name,\n    component: ChecksTransfer,\n    options: translatedOptions,\n    label: label,\n    validate: VALIDATOR // conditional rendering of FinalForm-fields cause some issues,\n    // see https://github.com/final-form/react-final-form/issues/809\n    ,\n    hidden: !runSelected\n  }));\n};\n\nconst LabelComponent = ({\n  label,\n  severity,\n  highlighted,\n  disabled\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: cx(styles.transferOption, {\n    [styles.highlighted]: highlighted,\n    [styles.disabled]: disabled\n  })\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.optionName\n}, label), /*#__PURE__*/React.createElement(\"div\", {\n  className: cx(styles.optionSeverity, {\n    [styles.highlighted]: highlighted\n  })\n}, `${i18n.t('Severity')}: ${severity}`));\n\nLabelComponent.propTypes = TransferOption.propTypes;\n\nconst renderOption = option => /*#__PURE__*/React.createElement(TransferOption, _extends({}, option, {\n  label: /*#__PURE__*/React.createElement(LabelComponent, option)\n}));\n\nconst ChecksTransfer = ({\n  input,\n  meta,\n  options = [],\n  hidden\n}) => {\n  const {\n    onChange\n  } = input;\n  const handleChange = useCallback(({\n    selected\n  }) => {\n    onChange(selected);\n  }, [onChange]);\n\n  if (hidden) {\n    return null;\n  }\n\n  const isErr = meta.touched && meta.invalid;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Transfer, {\n    options: options,\n    onChange: handleChange,\n    selected: input.value || [],\n    renderOption: renderOption,\n    maxSelections: Infinity,\n    enableOrderChange: true,\n    filterable: true,\n    height: '450px',\n    selectedEmptyComponent: /*#__PURE__*/React.createElement(SelectedEmptyComponent, null),\n    className: styles.transfer\n  }), isErr && /*#__PURE__*/React.createElement(Help, {\n    error: isErr\n  }, meta.error));\n};\n\nChecksTransfer.propTypes = InputFieldFF.propTypes;\n\nconst SelectedEmptyComponent = () => /*#__PURE__*/React.createElement(\"p\", {\n  className: styles.selectedEmptyComponent\n}, i18n.t('Select checks to run.'));\n\nconst {\n  string\n} = PropTypes;\nDataIntegrityChecksField.propTypes = {\n  label: string.isRequired,\n  name: string.isRequired\n};\nexport default DataIntegrityChecksField;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { getReportTypeLabel } from '../../services/server-translations/dataIntegrityChecks';\nconst {\n  Field\n} = ReactFinalForm;\nconst DEFAULT_VALUE = 'REPORT';\n\nconst DataIntegrityReportTypeField = ({\n  name,\n  constants\n}) => {\n  if (!constants) {\n    // shouldn't really happen, but backend defaults to \"report\" if no value\n    return null;\n  }\n\n  const labeledOptions = constants.map(type => ({\n    value: type,\n    label: getReportTypeLabel(type)\n  }));\n  return /*#__PURE__*/React.createElement(Field, {\n    name: name,\n    component: SingleSelectFieldFF,\n    initialValue: DEFAULT_VALUE,\n    options: labeledOptions,\n    label: i18n.t('Report type')\n  });\n};\n\nconst {\n  string,\n  arrayOf\n} = PropTypes;\nDataIntegrityReportTypeField.propTypes = {\n  name: string.isRequired,\n  constants: arrayOf(string)\n};\nexport default DataIntegrityReportTypeField;","import i18n from '@dhis2/d2-i18n';\nimport { CircularLoader, NoticeBox, ReactFinalForm, Transfer, Field } from '@dhis2/ui';\nimport React, { useCallback } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport styles from './AggregatedDataExchangeField.module.css';\nconst {\n  useField\n} = ReactFinalForm;\nconst query = {\n  dataExchangeIds: {\n    resource: 'aggregateDataExchanges',\n    params: {\n      fields: ['id', 'displayName'],\n      paging: true\n    }\n  }\n};\n\nconst validate = value => {\n  if (!value || value && value.length < 1) {\n    return i18n.t('Please select data exchange ids.');\n  }\n};\n\nconst SelectedEmptyComponent = () => /*#__PURE__*/React.createElement(\"p\", {\n  className: styles.selectedEmptyComponent\n}, i18n.t('Select data exchange ids'));\n\nconst AggregatedDataExchangeField = ({\n  label,\n  name\n}) => {\n  var _data$dataExchangeIds, _data$dataExchangeIds2, _meta$error;\n\n  const {\n    loading,\n    error,\n    data\n  } = useDataQuery(query);\n  const {\n    input,\n    meta\n  } = useField(name, {\n    beforeSubmit: () => !loading || !error,\n    validate\n  });\n  const handleChange = useCallback(({\n    selected\n  }) => {\n    input === null || input === void 0 ? void 0 : input.onChange(selected);\n  }, [input]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(CircularLoader, null);\n  }\n\n  if (error) {\n    var _error$details, _error$details2;\n\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: i18n.t('There was a problem fetching data exchange ids')\n    }, /*#__PURE__*/React.createElement(\"details\", null, /*#__PURE__*/React.createElement(\"summary\", null, `${i18n.t('error type')} - ${error.type}`), ((_error$details = error.details) === null || _error$details === void 0 ? void 0 : _error$details.message) && /*#__PURE__*/React.createElement(\"p\", null, (_error$details2 = error.details) === null || _error$details2 === void 0 ? void 0 : _error$details2.message)));\n  }\n\n  const options = (_data$dataExchangeIds = (_data$dataExchangeIds2 = data.dataExchangeIds) === null || _data$dataExchangeIds2 === void 0 ? void 0 : _data$dataExchangeIds2.aggregateDataExchanges.map(exchangeIds => ({\n    label: exchangeIds.displayName,\n    value: exchangeIds.id\n  }))) !== null && _data$dataExchangeIds !== void 0 ? _data$dataExchangeIds : [];\n  return /*#__PURE__*/React.createElement(Field, {\n    label: label,\n    validationText: (_meta$error = meta.error) === null || _meta$error === void 0 ? void 0 : _meta$error.message,\n    error: !!meta.error,\n    name: name,\n    required: true,\n    className: styles.field\n  }, /*#__PURE__*/React.createElement(Transfer, {\n    options: options,\n    onChange: handleChange,\n    selected: (input === null || input === void 0 ? void 0 : input.value) || [],\n    maxSelections: Infinity,\n    enableOrderChange: true,\n    filterable: true,\n    height: '450px',\n    selectedEmptyComponent: SelectedEmptyComponent\n  }));\n};\n\nAggregatedDataExchangeField.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport default AggregatedDataExchangeField;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm, InputFieldFF, Box, SwitchFieldFF } from '@dhis2/ui';\nimport { hooks } from '../Store';\nimport { formatToString } from './formatters';\nimport SkipTableTypesField from './SkipTableTypesField';\nimport LabeledOptionsField from './LabeledOptionsField';\nimport DataIntegrityChecksField from './DataIntegrityChecksField';\nimport DataIntegrityReportTypeField from './DataIntegrityReportTypeField';\nimport styles from './ParameterFields.module.css';\nimport AggregatedDataExchangeField from './AggregatedDataExchangeField';\nconst {\n  Field\n} = ReactFinalForm; // The key under which the parameters will be sent to the backend\n\nconst FIELD_NAME = 'jobParameters';\nconst JOB_TYPES = {\n  DATA_INTEGRITY: 'DATA_INTEGRITY',\n  AGGREGATE_DATA_EXCHANGE: 'AGGREGATE_DATA_EXCHANGE'\n};\n\nconst getCustomComponent = (jobType, parameterName) => {\n  if (jobType === JOB_TYPES.DATA_INTEGRITY && parameterName === 'checks') {\n    return DataIntegrityChecksField;\n  } else if (jobType === JOB_TYPES.DATA_INTEGRITY && parameterName === 'type') {\n    return DataIntegrityReportTypeField;\n  } else if (jobType === JOB_TYPES.AGGREGATE_DATA_EXCHANGE) {\n    return AggregatedDataExchangeField;\n  } else if (parameterName === 'skipTableTypes') {\n    return SkipTableTypesField;\n  }\n\n  return null;\n}; // Renders all parameters for a given jobtype\n\n\nconst ParameterFields = ({\n  jobType\n}) => {\n  const parameters = hooks.useJobTypeParameters(jobType);\n\n  if (parameters.length === 0) {\n    return null;\n  } // Map all parameters to the appropriate field types\n\n\n  const parameterComponents = parameters.map(({\n    fieldName,\n    name,\n    klass,\n    ...rest\n  }) => {\n    const defaultProps = {\n      label: fieldName,\n      name: `${FIELD_NAME}.${name}`\n    };\n    const parameterProps = {\n      fieldName,\n      name,\n      klass,\n      ...rest\n    };\n    let parameterComponent = null;\n    const CustomParameterComponent = getCustomComponent(jobType, name);\n\n    if (CustomParameterComponent) {\n      return /*#__PURE__*/React.createElement(Box, {\n        marginTop: \"16px\",\n        key: name\n      }, /*#__PURE__*/React.createElement(CustomParameterComponent, _extends({}, parameterProps, defaultProps, {\n        parameterName: name\n      })));\n    } // Generic field rendering\n\n\n    switch (klass) {\n      case 'java.lang.String':\n        parameterComponent = /*#__PURE__*/React.createElement(Field, _extends({}, defaultProps, {\n          component: InputFieldFF,\n          type: \"text\"\n        }));\n        break;\n\n      case 'java.lang.Boolean':\n        parameterComponent = /*#__PURE__*/React.createElement(Field, _extends({}, defaultProps, {\n          component: SwitchFieldFF,\n          type: \"checkbox\"\n        }));\n        break;\n\n      case 'java.lang.Integer':\n        parameterComponent = /*#__PURE__*/React.createElement(Field, _extends({}, defaultProps, {\n          component: InputFieldFF,\n          format: formatToString,\n          type: \"number\"\n        }));\n        break;\n\n      case 'java.util.List':\n        parameterComponent = /*#__PURE__*/React.createElement(LabeledOptionsField, _extends({}, defaultProps, {\n          parameterName: name\n        }));\n        break;\n    } // Wrap all components in a Box for spacing\n\n\n    return /*#__PURE__*/React.createElement(Box, {\n      marginTop: \"16px\",\n      key: name\n    }, parameterComponent);\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", null, /*#__PURE__*/React.createElement(\"h4\", {\n    className: styles.headerTitle\n  }, i18n.t('Parameters'))), parameterComponents);\n};\n\nconst {\n  string\n} = PropTypes;\nParameterFields.propTypes = {\n  jobType: string.isRequired\n};\nexport default ParameterFields;","import React from 'react';\nimport { Box, ReactFinalForm, InputFieldFF } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { requiredCron } from '../../services/validators';\nimport { CronPresetButton } from '../Buttons';\nimport translateCron from '../../services/translate-cron';\nconst {\n  Field,\n  useFormState,\n  useForm\n} = ReactFinalForm; // The key under which this field will be sent to the backend\n\nconst FIELD_NAME = 'cronExpression';\nconst VALIDATOR = requiredCron;\n\nconst CronField = () => {\n  const form = useForm();\n  const {\n    values\n  } = useFormState({\n    subscription: {\n      values: true\n    }\n  });\n  const cronExpression = values[FIELD_NAME];\n  const helpText = translateCron(cronExpression);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Field, {\n    component: InputFieldFF,\n    name: FIELD_NAME,\n    validate: VALIDATOR,\n    label: i18n.t('CRON Expression'),\n    type: \"text\",\n    helpText: helpText,\n    required: true\n  }), /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"8px\"\n  }, /*#__PURE__*/React.createElement(CronPresetButton, {\n    setCron:\n    /* istanbul ignore next */\n    cron => form.change(FIELD_NAME, cron),\n    small: true\n  })));\n};\n\nexport default CronField;","import React from 'react';\nimport { ReactFinalForm, InputFieldFF, composeValidators, hasValue, integer, createNumberRange } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { formatToString } from './formatters';\nconst {\n  Field\n} = ReactFinalForm; // Omitting the underscore here since it messes up i18n\n\nconst lowerbound = 1;\nconst upperbound = 86400; // The key under which this field will be sent to the backend\n\nconst FIELD_NAME = 'delay';\nconst VALIDATOR = composeValidators(integer, hasValue, createNumberRange(lowerbound, upperbound));\n\nconst DelayField = () => /*#__PURE__*/React.createElement(Field, {\n  component: InputFieldFF,\n  name: FIELD_NAME,\n  validate: VALIDATOR,\n  label: i18n.t('Delay'),\n  type: \"number\",\n  format: formatToString,\n  helpText: i18n.t('Delay in seconds ({{ lowerbound }} - {{ upperbound }})', {\n    lowerbound,\n    upperbound\n  }),\n  required: true\n});\n\nexport default DelayField;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { hooks } from '../Store';\nimport CronField from './CronField';\nimport DelayField from './DelayField';\n\nconst ScheduleField = ({\n  jobType\n}) => {\n  const currentJobType = hooks.useJobType(jobType);\n  const schedulingType = currentJobType.schedulingType;\n\n  switch (schedulingType) {\n    case 'CRON':\n      return /*#__PURE__*/React.createElement(CronField, null);\n\n    case 'FIXED_DELAY':\n      return /*#__PURE__*/React.createElement(DelayField, null);\n\n    default:\n      // Unrecognised scheduling type\n      return null;\n  }\n};\n\nconst {\n  string\n} = PropTypes;\nScheduleField.propTypes = {\n  jobType: string.isRequired\n};\nexport default ScheduleField;","import JobNameField from './JobNameField';\nimport JobTypeField, { FIELD_NAME as JOB_TYPE } from './JobTypeField';\nimport ParameterFields from './ParameterFields';\nimport ScheduleField from './ScheduleField';\nconst fieldNames = {\n  JOB_TYPE\n};\nexport { JobNameField, ScheduleField, JobTypeField, ParameterFields, fieldNames };","import React, { useEffect } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, CircularLoader, Box, ReactFinalForm } from '@dhis2/ui';\nimport { DiscardFormButton } from '../Buttons';\nimport { FormErrorBox } from '../FormErrorBox';\nimport { ScheduleField, JobNameField, JobTypeField, ParameterFields, fieldNames } from '../FormFields';\nimport styles from './JobAddForm.module.css';\nconst {\n  useForm\n} = ReactFinalForm;\n\nconst JobAddForm = ({\n  handleSubmit,\n  pristine,\n  submitting,\n  submitError,\n  hasSubmitErrors,\n  values,\n  setIsPristine\n}) => {\n  const {\n    subscribe\n  } = useForm();\n  /**\n   * Lift pristine state up on changes, wrapped in useEffect because calls to setState\n   * outside of the component that owns the setState should not happen synchronously.\n   */\n\n  useEffect(() =>\n  /**\n   * The subscriber will only be called when pristine changes. It returns a\n   * cleanup function.\n   * https://final-form.org/docs/final-form/types/FormApi#subscribe\n   */\n  subscribe(({\n    pristine\n  }) => setIsPristine(pristine), {\n    pristine: true\n  })); // Check if there's currently a selected job type\n\n  const jobType = values[fieldNames.JOB_TYPE]; // Show a spinner only when submitting\n\n  const Spinner = submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n    small: true\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(Box, {\n    maxWidth: \"600px\"\n  }, /*#__PURE__*/React.createElement(JobNameField, null)), /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(JobTypeField, null)), jobType && /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(ScheduleField, {\n    jobType: jobType\n  })), jobType && /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"32px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(ParameterFields, {\n    jobType: jobType\n  })), hasSubmitErrors && /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"32px\",\n    maxWidth: \"600px\"\n  }, /*#__PURE__*/React.createElement(FormErrorBox, {\n    submitError: submitError\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formButtonContainer\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    disabled: pristine || submitting,\n    icon: Spinner,\n    className: styles.saveButton\n  }, i18n.t('Save')), /*#__PURE__*/React.createElement(DiscardFormButton, {\n    shouldConfirm: !pristine\n  }, i18n.t('Cancel'))));\n};\n\nconst {\n  func,\n  bool,\n  object,\n  array\n} = PropTypes;\nJobAddForm.defaultProps = {\n  submitError: []\n};\nJobAddForm.propTypes = {\n  handleSubmit: func.isRequired,\n  hasSubmitErrors: bool.isRequired,\n  pristine: bool.isRequired,\n  setIsPristine: func.isRequired,\n  submitting: bool.isRequired,\n  values: object.isRequired,\n  submitError: array\n};\nexport default JobAddForm;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { useSubmitJob } from '../../hooks/jobs';\nimport JobAddForm from './JobAddForm';\nconst {\n  Form\n} = ReactFinalForm;\n\nconst JobAddFormContainer = ({\n  setIsPristine\n}) => {\n  const [submitJob] = useSubmitJob();\n  /**\n   * destroyOnUnregister is enabled so that dynamic fields will be unregistered\n   * when they're removed from the form, for instance when the jobType changes.\n   */\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitJob,\n    component: JobAddForm,\n    setIsPristine: setIsPristine,\n    destroyOnUnregister: true\n  });\n};\n\nconst {\n  func\n} = PropTypes;\nJobAddFormContainer.propTypes = {\n  setIsPristine: func.isRequired\n};\nexport default JobAddFormContainer;","import React, { useEffect } from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, CircularLoader, Box, ReactFinalForm } from '@dhis2/ui';\nimport history from '../../services/history';\nimport { DiscardFormButton, DeleteJobButton } from '../Buttons';\nimport { FormErrorBox } from '../FormErrorBox';\nimport { ScheduleField, JobNameField, JobTypeField, ParameterFields, fieldNames } from '../FormFields';\nimport styles from './JobEditForm.module.css';\nconst {\n  useForm\n} = ReactFinalForm;\n\nconst JobEditForm = ({\n  id,\n  refetchJobs,\n  handleSubmit,\n  pristine,\n  submitting,\n  submitError,\n  hasSubmitErrors,\n  values,\n  setIsPristine\n}) => {\n  const {\n    subscribe\n  } = useForm();\n  /**\n   * Lift pristine state up on changes, wrapped in useEffect because calls to setState\n   * outside of the component that owns the setState should not happen synchronously.\n   */\n\n  useEffect(() =>\n  /**\n   * The subscriber will only be called when pristine changes. It returns a\n   * cleanup function.\n   * https://final-form.org/docs/final-form/types/FormApi#subscribe\n   */\n  subscribe(({\n    pristine\n  }) => setIsPristine(pristine), {\n    pristine: true\n  })); // Check if there's currently a selected job type\n\n  const jobType = values[fieldNames.JOB_TYPE]; // Show a spinner only when submitting\n\n  const Spinner = submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n    small: true\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(Box, {\n    maxWidth: \"600px\"\n  }, /*#__PURE__*/React.createElement(JobNameField, null)), /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(JobTypeField, null)), jobType && /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(ScheduleField, {\n    jobType: jobType\n  })), jobType && /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"32px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(ParameterFields, {\n    jobType: jobType\n  })), hasSubmitErrors && /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"32px\",\n    maxWidth: \"600px\"\n  }, /*#__PURE__*/React.createElement(FormErrorBox, {\n    submitError: submitError\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formButtonContainer\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    disabled: pristine || submitting,\n    icon: Spinner,\n    className: styles.saveButton\n  }, i18n.t('Save')), /*#__PURE__*/React.createElement(DiscardFormButton, {\n    shouldConfirm: !pristine\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.deleteButton\n  }, /*#__PURE__*/React.createElement(DeleteJobButton, {\n    id: id,\n    onSuccess: () => {\n      history.push('/');\n      refetchJobs();\n    }\n  }))));\n};\n\nconst {\n  func,\n  bool,\n  object,\n  array,\n  string\n} = PropTypes;\nJobEditForm.defaultProps = {\n  submitError: []\n};\nJobEditForm.propTypes = {\n  handleSubmit: func.isRequired,\n  hasSubmitErrors: bool.isRequired,\n  id: string.isRequired,\n  pristine: bool.isRequired,\n  refetchJobs: func.isRequired,\n  setIsPristine: func.isRequired,\n  submitting: bool.isRequired,\n  values: object.isRequired,\n  submitError: array\n};\nexport default JobEditForm;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { useParams } from 'react-router-dom';\nimport { useUpdateJob } from '../../hooks/jobs';\nimport { hooks } from '../Store';\nimport JobEditForm from './JobEditForm';\nconst {\n  Form\n} = ReactFinalForm;\n/**\n * The fields we need for the initialValues for our form fields. Since we use\n * these values to set the initial values in final-form, if we wouldn't filter\n * them we'd end up submitting way more data than we intend to.\n */\n\nconst initialFields = ['cronExpression', 'delay', 'jobParameters', 'jobType', 'name'];\n\nconst JobEditFormContainer = ({\n  setIsPristine\n}) => {\n  const {\n    id\n  } = useParams();\n  const [updateJob] = useUpdateJob({\n    id\n  });\n  const refetchJobs = hooks.useRefetchJobs();\n  const job = hooks.useJob(id); // Creating an object with just the values we want to use as initial values\n\n  const initialValues = initialFields.reduce((filtered, key) => {\n    filtered[key] = job[key];\n    return filtered;\n  }, {});\n  /**\n   * destroyOnUnregister is enabled so that dynamic fields will be unregistered\n   * when they're removed from the form, for instance when the jobType changes.\n   */\n\n  /* istanbul ignore next: we're testing this section, but coverage reporting seems to disagree */\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: updateJob,\n    component: JobEditForm,\n    setIsPristine: setIsPristine,\n    initialValues: initialValues,\n    id: id,\n    refetchJobs: refetchJobs,\n    destroyOnUnregister: true\n  });\n};\n\nconst {\n  func\n} = PropTypes;\nJobEditFormContainer.propTypes = {\n  setIsPristine: func.isRequired\n};\nexport default JobEditFormContainer;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport { jobStatusMap } from '../../services/server-translations';\nimport styles from './JobDetails.module.css';\n\nconst JobDetails = ({\n  created,\n  lastExecutedStatus,\n  lastExecuted\n}) => {\n  // Using Date.now allows for easier mocking\n  const now = Date.now();\n  const createdFromNow = moment(created).from(now);\n  const translatedStatus = jobStatusMap[lastExecutedStatus];\n  const lastRunFromNow = lastExecuted ? moment(lastExecuted).from(now) : '';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.wrapper\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: styles.title\n  }, i18n.t('Job details')), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.details\n  }, /*#__PURE__*/React.createElement(\"div\", null, i18n.t('Created {{ createdFromNow }}.', {\n    createdFromNow\n  })), lastRunFromNow && /*#__PURE__*/React.createElement(\"div\", null, i18n.t('Last run {{ lastRunFromNow }}.', {\n    lastRunFromNow\n  })), translatedStatus && /*#__PURE__*/React.createElement(\"div\", null, i18n.t('Last run status: {{ translatedStatus }}.', {\n    translatedStatus,\n    nsSeparator: '>'\n  }))));\n};\n\nconst {\n  string\n} = PropTypes;\nJobDetails.propTypes = {\n  created: string.isRequired,\n  lastExecutedStatus: string.isRequired,\n  lastExecuted: string\n};\nexport default JobDetails;","import React, { useState } from 'react';\nimport { CircularLoader, Layer, CenteredContent, Card, IconInfo16 } from '@dhis2/ui';\nimport { useParams } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport { useJobById } from '../../hooks/jobs';\nimport { DiscardFormButton } from '../../components/Buttons';\nimport { JobEditFormContainer } from '../../components/Forms';\nimport { JobDetails } from '../../components/JobDetails';\nimport styles from './JobEdit.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobEdit = () => {\n  const [isPristine, setIsPristine] = useState(true);\n  const {\n    id\n  } = useParams();\n  const {\n    data,\n    loading,\n    error\n  } = useJobById(id);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Layer, null, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  if (error) {\n    throw error;\n  }\n\n  const {\n    name,\n    created,\n    lastExecutedStatus,\n    lastExecuted\n  } = data;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.pageHeader\n  }, /*#__PURE__*/React.createElement(DiscardFormButton, {\n    shouldConfirm: !isPristine,\n    className: styles.pageHeaderButton,\n    small: true\n  }, i18n.t('Back to all jobs')), /*#__PURE__*/React.createElement(\"h2\", {\n    className: styles.pageHeaderTitle\n  }, i18n.t('Job: {{ name }}', {\n    name,\n    nsSeparator: '>'\n  }))), /*#__PURE__*/React.createElement(Card, {\n    className: styles.card\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.cardHeader\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: styles.cardHeaderTitle\n  }, i18n.t('Configuration')), /*#__PURE__*/React.createElement(\"a\", {\n    href: infoLink,\n    className: styles.cardHeaderLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.cardHeaderInfo\n  }, /*#__PURE__*/React.createElement(IconInfo16, null)), i18n.t('About job configuration'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.jobDetails\n  }, /*#__PURE__*/React.createElement(JobDetails, {\n    created: created,\n    lastExecutedStatus: lastExecutedStatus,\n    lastExecuted: lastExecuted\n  })), /*#__PURE__*/React.createElement(JobEditFormContainer, {\n    setIsPristine: setIsPristine\n  })));\n};\n\nexport default JobEdit;","import JobEdit from './JobEdit';\nexport default JobEdit;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CircularLoader, Layer, CenteredContent, Card, IconInfo16, Box, SingleSelectField, SingleSelectOption, InputField } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { LinkButton } from '../../components/LinkButton';\nimport { JobDetails } from '../../components/JobDetails';\nimport { useJobById } from '../../hooks/jobs';\nimport translateCron from '../../services/translate-cron';\nimport { jobTypesMap } from '../../services/server-translations';\nimport styles from './JobView.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobView = () => {\n  const {\n    id\n  } = useParams();\n  const {\n    data,\n    loading,\n    error\n  } = useJobById(id);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Layer, null, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  if (error) {\n    throw error;\n  }\n\n  const {\n    name,\n    created,\n    lastExecutedStatus,\n    lastExecuted,\n    jobType,\n    cronExpression\n  } = data;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.pageHeader\n  }, /*#__PURE__*/React.createElement(LinkButton, {\n    className: styles.pageHeaderButton,\n    to: \"/\",\n    small: true\n  }, i18n.t('Back to all jobs')), /*#__PURE__*/React.createElement(\"h2\", {\n    className: styles.pageHeaderTitle\n  }, i18n.t('System job: {{ name }}', {\n    name,\n    nsSeparator: '>'\n  }))), /*#__PURE__*/React.createElement(Card, {\n    className: styles.card\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.cardHeader\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: styles.cardHeaderTitle\n  }, i18n.t('Configuration')), /*#__PURE__*/React.createElement(\"a\", {\n    href: infoLink,\n    className: styles.cardHeaderLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.cardHeaderInfo\n  }, /*#__PURE__*/React.createElement(IconInfo16, null)), i18n.t('About job configuration'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.jobDetails\n  }, /*#__PURE__*/React.createElement(JobDetails, {\n    created: created,\n    lastExecutedStatus: lastExecutedStatus,\n    lastExecuted: lastExecuted\n  })), /*#__PURE__*/React.createElement(Box, {\n    maxWidth: \"600px\"\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: i18n.t('Name'),\n    disabled: true,\n    value: name,\n    name: \"name\"\n  })), /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(SingleSelectField, {\n    name: \"jobType\",\n    label: i18n.t('Job type'),\n    disabled: true,\n    selected: jobType\n  }, /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: jobType,\n    label: jobTypesMap[jobType]\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"16px\",\n    maxWidth: \"400px\"\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: i18n.t('CRON Expression'),\n    name: \"cronExpression\",\n    disabled: true,\n    value: cronExpression,\n    helpText: translateCron(cronExpression)\n  })), /*#__PURE__*/React.createElement(Box, {\n    marginTop: \"24px\"\n  }, /*#__PURE__*/React.createElement(LinkButton, {\n    className: styles.pageHeaderButton,\n    to: \"/\"\n  }, i18n.t('Back to all jobs')))));\n};\n\nexport default JobView;","import JobView from './JobView';\nexport default JobView;","import React, { useState } from 'react';\nimport { Card, IconInfo16 } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { DiscardFormButton } from '../../components/Buttons';\nimport { JobAddFormContainer } from '../../components/Forms';\nimport styles from './JobAdd.module.css';\nconst infoLink = 'https://docs.dhis2.org/en/use/user-guides/dhis-core-version-236/maintaining-the-system/scheduling.html';\n\nconst JobAdd = () => {\n  const [isPristine, setIsPristine] = useState(true);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.pageHeader\n  }, /*#__PURE__*/React.createElement(DiscardFormButton, {\n    shouldConfirm: !isPristine,\n    className: styles.pageHeaderButton,\n    small: true\n  }, i18n.t('Back to all jobs')), /*#__PURE__*/React.createElement(\"h2\", {\n    className: styles.pageHeaderTitle\n  }, i18n.t('New Job'))), /*#__PURE__*/React.createElement(Card, {\n    className: styles.card\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.cardHeader\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: styles.cardHeaderTitle\n  }, i18n.t('Configuration')), /*#__PURE__*/React.createElement(\"a\", {\n    href: infoLink,\n    className: styles.cardHeaderLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.cardHeaderInfo\n  }, /*#__PURE__*/React.createElement(IconInfo16, null)), i18n.t('About job configuration'))), /*#__PURE__*/React.createElement(JobAddFormContainer, {\n    setIsPristine: setIsPristine\n  })));\n};\n\nexport default JobAdd;","import JobAdd from './JobAdd';\nexport default JobAdd;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Router } from 'react-router';\nimport JobList from '../../pages/JobList';\nimport JobEdit from '../../pages/JobEdit';\nimport JobView from '../../pages/JobView';\nimport JobAdd from '../../pages/JobAdd';\nimport history from '../../services/history';\n\nconst Routes = () => /*#__PURE__*/React.createElement(Router, {\n  history: history\n}, /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: JobList\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/edit/:id\",\n  component: JobEdit\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/view/:id\",\n  component: JobView\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/add\",\n  component: JobAdd\n}));\n\nexport default Routes;","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { CircularLoader, Layer, CenteredContent, NoticeBox } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport { getAuthorized } from './selectors';\nimport styles from './AuthWall.module.css';\nconst query = {\n  me: {\n    resource: 'me'\n  }\n};\n\nconst AuthWall = ({\n  children\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useDataQuery(query);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Layer, null, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  if (error) {\n    /**\n     * The app can't continue if this fails, because it doesn't\n     * know if the user is authorized, so throw the error.\n     */\n    throw error;\n  }\n\n  const isAuthorized = getAuthorized(data.me);\n\n  if (!isAuthorized) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.noticeBoxWrapper\n    }, /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: i18n.t('Not authorized')\n    }, i18n.t(\"You don't have access to the Job Scheduler. Contact a system administrator to request access.\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n};\n\nconst {\n  node\n} = PropTypes;\nAuthWall.propTypes = {\n  children: node.isRequired\n};\nexport default AuthWall;","export const getAuthorized = me => {\n  const {\n    authorities\n  } = me;\n\n  if (!authorities) {\n    return false;\n  }\n\n  const isAuthorized = authorities.includes('ALL') || authorities.includes('F_SCHEDULING_ADMIN');\n  return isAuthorized;\n};","import React from 'react';\nimport { PropTypes } from '@dhis2/prop-types';\nimport styles from './PageWrapper.module.css';\n\nconst PageWrapper = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.wrapper\n}, children);\n\nconst {\n  node\n} = PropTypes;\nPageWrapper.propTypes = {\n  children: node.isRequired\n};\nexport default PageWrapper;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport bnTranslations from './bn/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport es_419Translations from './es_419/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport nlTranslations from './nl/translations.json';\nimport orTranslations from './or/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport roTranslations from './ro/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('bn', namespace, bnTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('es_419', namespace, es_419Translations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('nl', namespace, nlTranslations);\ni18n.addResources('or', namespace, orTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ro', namespace, roTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { CssVariables } from '@dhis2/ui';\nimport { Routes } from '../Routes';\nimport { AuthWall } from '../AuthWall';\nimport { Store } from '../Store';\nimport { PageWrapper } from '../PageWrapper';\nimport './App.css'; // eslint-disable-next-line import/no-unassigned-import\n\nimport '../../locales'; // The above is necessary for translations to work\n\nconst App = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CssVariables, {\n  spacers: true,\n  colors: true,\n  theme: true\n}), /*#__PURE__*/React.createElement(PageWrapper, null, /*#__PURE__*/React.createElement(AuthWall, null, /*#__PURE__*/React.createElement(Store, null, /*#__PURE__*/React.createElement(Routes, null)))));\n\nexport default App;"],"sourceRoot":""}